[
  {
    "TempId": 11618,
    "AUT": "",
    "Description": "Verify that Reason field is appearing after raising the Coverage C limit to a value greater than 50% of Coverage A and not triggering the warning message, when a valid reason is entered in Reason field.",
    "StatusKey": "NEW",
    "isMobile": false,
    "TestCaseType": 1,
    "IsExecutable": true,
    "uri": "",
    "DataSheet": {
      "TestCase": null,
      "Parameters": [
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "p77158",
              "ParameterId": 976986,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "p77158",
              "ParameterId": 976986,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "p77158",
              "ParameterId": 976986,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "p77158",
              "ParameterId": 976986,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "p77158",
              "ParameterId": 976986,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_LoginUsername",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "https://funpxyvip01.aaa-acg.net/aba/agentbrowser/#/CustomerSearch",
              "ParameterId": 976987,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "https://funpxyvip01.aaa-acg.net/aba/agentbrowser/#/CustomerSearch",
              "ParameterId": 976987,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "https://funpxyvip01.aaa-acg.net/aba/agentbrowser/#/CustomerSearch",
              "ParameterId": 976987,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "https://funpxyvip01.aaa-acg.net/aba/agentbrowser/#/CustomerSearch",
              "ParameterId": 976987,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "https://funpxyvip01.aaa-acg.net/aba/agentbrowser/#/CustomerSearch",
              "ParameterId": 976987,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_LoginURL",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "password123",
              "ParameterId": 976988,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "password123",
              "ParameterId": 976988,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "password123",
              "ParameterId": 976988,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "password123",
              "ParameterId": 976988,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "password123",
              "ParameterId": 976988,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_LoginPassword",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Single",
              "ParameterId": 976989,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Single",
              "ParameterId": 976989,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Single",
              "ParameterId": 976989,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Single",
              "ParameterId": 976989,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Single",
              "ParameterId": 976989,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_SingleOrMultiplePolicies",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "1295700359",
              "ParameterId": 976990,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "5393234758",
              "ParameterId": 976990,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "3946612835",
              "ParameterId": 976990,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "2162122223",
              "ParameterId": 976990,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "9079602523",
              "ParameterId": 976990,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AccountNumber",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Married",
              "ParameterId": 976991,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Married",
              "ParameterId": 976991,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Married",
              "ParameterId": 976991,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Married",
              "ParameterId": 976991,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Married",
              "ParameterId": 976991,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyInfoMaritalStatus",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "12/17/1969",
              "ParameterId": 976992,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "6/2/1966",
              "ParameterId": 976992,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "8/5/1980",
              "ParameterId": 976992,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "3/5/1968",
              "ParameterId": 976992,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "03/03/1955",
              "ParameterId": 976992,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyInfoDOB",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 976993,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 976993,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 976993,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 976993,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 976993,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyInfoYesorNoDocsConsent",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 976994,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 976994,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 976994,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 976994,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 976994,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyInfoYesorNoPaperlessComm",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Yes",
              "ParameterId": 976995,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Yes",
              "ParameterId": 976995,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Yes",
              "ParameterId": 976995,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Yes",
              "ParameterId": 976995,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Yes",
              "ParameterId": 976995,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyInfoYesorNoFirstCompanyForInsurance",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 976996,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 976996,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 976996,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 976996,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 976996,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyInfoYesorNoAAAMembership",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 976997,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 976997,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 976997,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 976997,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 976997,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyInfoYesorNoPreviousAddress",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 976998,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 976998,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 976998,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 976998,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 976998,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_LaminatedWindows",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 976999,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 976999,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 976999,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 976999,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 976999,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_StromShutters",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977000,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977000,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977000,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977000,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977000,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_DwellingBeLeftUnoccupied",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Yes",
              "ParameterId": 977001,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Yes",
              "ParameterId": 977001,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Yes",
              "ParameterId": 977001,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Yes",
              "ParameterId": 977001,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Yes",
              "ParameterId": 977001,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_NameInsuredOriginalOwner",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977002,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977002,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977002,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977002,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977002,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_SmokerResidingInHousehold",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "2020",
              "ParameterId": 977003,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "2020",
              "ParameterId": 977003,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "2020",
              "ParameterId": 977003,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "2020",
              "ParameterId": 977003,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "2020",
              "ParameterId": 977003,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PurchaseDate",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "2",
              "ParameterId": 977004,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "2",
              "ParameterId": 977004,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "2",
              "ParameterId": 977004,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "2",
              "ParameterId": 977004,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "2",
              "ParameterId": 977004,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_NoOfOccupants",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Primary",
              "ParameterId": 977005,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Primary",
              "ParameterId": 977005,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Primary",
              "ParameterId": 977005,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Primary",
              "ParameterId": 977005,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Primary",
              "ParameterId": 977005,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_ResidenceType",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "2",
              "ParameterId": 977006,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "2",
              "ParameterId": 977006,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "2",
              "ParameterId": 977006,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "2",
              "ParameterId": 977006,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "2",
              "ParameterId": 977006,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_UnitFloorNumber",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Other",
              "ParameterId": 977007,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Other",
              "ParameterId": 977007,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Other",
              "ParameterId": 977007,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Other",
              "ParameterId": 977007,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Other",
              "ParameterId": 977007,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_SecondaryHeating",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Electric",
              "ParameterId": 977008,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Electric",
              "ParameterId": 977008,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Electric",
              "ParameterId": 977008,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Electric",
              "ParameterId": 977008,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Electric",
              "ParameterId": 977008,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PrimaryHeating",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Frame",
              "ParameterId": 977009,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Frame",
              "ParameterId": 977009,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Frame",
              "ParameterId": 977009,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Frame",
              "ParameterId": 977009,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Frame",
              "ParameterId": 977009,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_ConstructionType",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "1",
              "ParameterId": 977010,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "1",
              "ParameterId": 977010,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "1",
              "ParameterId": 977010,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "1",
              "ParameterId": 977010,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "1",
              "ParameterId": 977010,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_CompletedYears",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "21st Century Assurance Company",
              "ParameterId": 977011,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "21st Century Assurance Company",
              "ParameterId": 977011,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "21st Century Assurance Company",
              "ParameterId": 977011,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "21st Century Assurance Company",
              "ParameterId": 977011,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "21st Century Assurance Company",
              "ParameterId": 977011,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_CarrierName",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "01/10/2023",
              "ParameterId": 977012,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "01/10/2023",
              "ParameterId": 977012,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "01/10/2023",
              "ParameterId": 977012,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "01/10/2023",
              "ParameterId": 977012,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "01/10/2023",
              "ParameterId": 977012,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_ExpirationDate",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Yes",
              "ParameterId": 977013,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Yes",
              "ParameterId": 977013,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Yes",
              "ParameterId": 977013,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Yes",
              "ParameterId": 977013,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Yes",
              "ParameterId": 977013,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PriorHomeInsurance",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "03/03/2022",
              "ParameterId": 977014,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "03/03/2022",
              "ParameterId": 977014,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "03/03/2022",
              "ParameterId": 977014,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "03/03/2022 ",
              "ParameterId": 977014,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "03/03/2022",
              "ParameterId": 977014,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_TenureDate",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Homeowners (HO3)",
              "ParameterId": 977015,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Homeowners (HO3)",
              "ParameterId": 977015,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Homeowners (HO3)",
              "ParameterId": 977015,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Homeowners (HO3)",
              "ParameterId": 977015,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Homeowners (HO3)",
              "ParameterId": 977015,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyTypeSelection",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Single Point Detection",
              "ParameterId": 977016,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Single Point Detection",
              "ParameterId": 977016,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Single Point Detection",
              "ParameterId": 977016,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Single Point Detection",
              "ParameterId": 977016,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Single Point Detection",
              "ParameterId": 977016,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_WaterDetectionDevice",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Centralized",
              "ParameterId": 977017,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Centralized",
              "ParameterId": 977017,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Centralized",
              "ParameterId": 977017,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Centralized",
              "ParameterId": 977017,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Centralized",
              "ParameterId": 977017,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_BurglarAlarm",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977018,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977018,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977018,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977018,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977018,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_SmokeAlarm",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977019,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977019,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977019,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977019,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977019,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_FireExtinguisher",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Localized",
              "ParameterId": 977020,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Localized",
              "ParameterId": 977020,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Localized",
              "ParameterId": 977020,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Localized",
              "ParameterId": 977020,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Localized",
              "ParameterId": 977020,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_FireAlarm",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Yes",
              "ParameterId": 977021,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Yes",
              "ParameterId": 977021,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Yes",
              "ParameterId": 977021,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Yes",
              "ParameterId": 977021,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Yes",
              "ParameterId": 977021,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_Deadbolt",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977022,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977022,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977022,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977022,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977022,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_SprinklerSystem",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977023,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977023,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977023,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977023,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977023,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_1000FeetFromFireHydrant",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "HARDIN CO FPSA",
              "ParameterId": 977024,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "ADA TS FDS",
              "ParameterId": 977024,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "ROME FLOYD FPSA",
              "ParameterId": 977024,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "TENNESSEE RIDGE FS",
              "ParameterId": 977024,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "AURORA",
              "ParameterId": 977024,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_RespondingFireDepartment",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "1",
              "ParameterId": 977025,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "1",
              "ParameterId": 977025,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "1",
              "ParameterId": 977025,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "1",
              "ParameterId": 977025,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "1",
              "ParameterId": 977025,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_NoOfDogs",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977026,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977026,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977026,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977026,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977026,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_Trampoline",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977027,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977027,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977027,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977027,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977027,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_DivingBoards",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977028,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977028,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977028,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977028,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977028,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PoolSlide",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977029,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977029,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977029,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977029,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977029,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_Pool",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977030,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977030,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977030,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977030,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977030,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AttachedPoolEnclosure",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977031,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977031,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977031,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977031,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977031,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_SecondaryWaterResistance",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Female",
              "ParameterId": 977032,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Male",
              "ParameterId": 977032,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Male",
              "ParameterId": 977032,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Female",
              "ParameterId": 977032,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Female",
              "ParameterId": 977032,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_Gender",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Classic",
              "ParameterId": 977033,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Classic",
              "ParameterId": 977033,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Classic",
              "ParameterId": 977033,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Classic",
              "ParameterId": 977033,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Classic",
              "ParameterId": 977033,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_MembershipCoverageType",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "5577735931485893",
              "ParameterId": 977034,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "5577735931485893",
              "ParameterId": 977034,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "5577735931485893",
              "ParameterId": 977034,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "5577735931485893",
              "ParameterId": 977034,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "5577735931485893",
              "ParameterId": 977034,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_CreditCardNumber",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "ERIC CLARK",
              "ParameterId": 977035,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "JIMERSON TATUM",
              "ParameterId": 977035,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Joann Bordelon",
              "ParameterId": 977035,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "FRIEDA NACZEK",
              "ParameterId": 977035,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "FNTestBCCC LNTestBCCE",
              "ParameterId": 977035,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_NameInsured",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "EFT1",
              "ParameterId": 977036,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "EFT1",
              "ParameterId": 977036,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "EFT1",
              "ParameterId": 977036,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "EFT1",
              "ParameterId": 977036,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "EFT1",
              "ParameterId": 977036,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PaymentType",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No-Opt Out",
              "ParameterId": 977037,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No-Opt Out",
              "ParameterId": 977037,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No-Opt Out",
              "ParameterId": 977037,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No-Opt Out",
              "ParameterId": 977037,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No-Opt Out",
              "ParameterId": 977037,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_InsuranceScoreOrdered",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "147 Phillips St",
              "ParameterId": 977038,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "131 N Serenity Dr",
              "ParameterId": 977038,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "7716 Briar Forest Ln",
              "ParameterId": 977038,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "2219 East Ave N",
              "ParameterId": 977038,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "198232 StreetCCI",
              "ParameterId": 977038,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_SelectStandardizeAddress",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "test@aaa.acg.com",
              "ParameterId": 977039,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "test@aaa.acg.com",
              "ParameterId": 977039,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "test@aaa.acg.com",
              "ParameterId": 977039,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "test@aaa.acg.com",
              "ParameterId": 977039,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "test@aaa.acg.com",
              "ParameterId": 977039,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_Email",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "666-14-5356",
              "ParameterId": 977040,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "666-14-5356",
              "ParameterId": 977040,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "888-00-5959",
              "ParameterId": 977040,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "666-14-5356",
              "ParameterId": 977040,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "666-14-5356",
              "ParameterId": 977040,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_SSN",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "38326",
              "ParameterId": 977041,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "49331",
              "ParameterId": 977041,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "30296",
              "ParameterId": 977041,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "54650",
              "ParameterId": 977041,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "60540",
              "ParameterId": 977041,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_ZipCode",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Tennessee",
              "ParameterId": 977042,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Michigan",
              "ParameterId": 977042,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Georgia",
              "ParameterId": 977042,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Wisconsin",
              "ParameterId": 977042,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Illinois",
              "ParameterId": 977042,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_State",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Counce",
              "ParameterId": 977043,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Lowell",
              "ParameterId": 977043,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Riverdale",
              "ParameterId": 977043,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Onalaska",
              "ParameterId": 977043,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Naperville",
              "ParameterId": 977043,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_City",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "StreetJFF",
              "ParameterId": 977044,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "StreetFDC",
              "ParameterId": 977044,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Briar Forest Ln",
              "ParameterId": 977044,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "StreetECF",
              "ParameterId": 977044,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "StreetDCE",
              "ParameterId": 977044,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_StreetName",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "0842",
              "ParameterId": 977045,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "5421",
              "ParameterId": 977045,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "7716",
              "ParameterId": 977045,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "3313",
              "ParameterId": 977045,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "0213",
              "ParameterId": 977045,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_HouseNumber",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "201-123-1234",
              "ParameterId": 977046,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "201-123-1234",
              "ParameterId": 977046,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "201-123-1234",
              "ParameterId": 977046,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "201-123-1234",
              "ParameterId": 977046,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "201-123-1234",
              "ParameterId": 977046,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_MobilePhone",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "CLARK",
              "ParameterId": 977047,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "TATUM",
              "ParameterId": 977047,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Bordelon",
              "ParameterId": 977047,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "NACZEK",
              "ParameterId": 977047,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "LNTestBCCE",
              "ParameterId": 977047,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_LastName",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "ERIC",
              "ParameterId": 977048,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "JIMERSON",
              "ParameterId": 977048,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Joann",
              "ParameterId": 977048,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "FRIEDA",
              "ParameterId": 977048,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "FNTestBCCC",
              "ParameterId": 977048,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_FirtsName",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "201-123-1234",
              "ParameterId": 977049,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "201-123-1234",
              "ParameterId": 977049,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "201-123-1234",
              "ParameterId": 977049,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "201-123-1234",
              "ParameterId": 977049,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "201-123-1234",
              "ParameterId": 977049,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_HomePhone",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "12/01/2025",
              "ParameterId": 977050,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "12/01/2025",
              "ParameterId": 977050,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "12/01/2025",
              "ParameterId": 977050,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "12/01/2025",
              "ParameterId": 977050,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "12/01/2025",
              "ParameterId": 977050,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_BQEffectiveDate",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "TN",
              "ParameterId": 977051,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "MI",
              "ParameterId": 977051,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "GA",
              "ParameterId": 977051,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "TN",
              "ParameterId": 977051,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "TN",
              "ParameterId": 977051,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_BQState",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "HOM",
              "ParameterId": 977052,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "HOM",
              "ParameterId": 977052,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "HOM",
              "ParameterId": 977052,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "HOM",
              "ParameterId": 977052,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "HOM",
              "ParameterId": 977052,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_BQProduct",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Graduate Work or Degree",
              "ParameterId": 977053,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Graduate Work or Degree",
              "ParameterId": 977053,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Graduate Work or Degree",
              "ParameterId": 977053,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Graduate Work or Degree",
              "ParameterId": 977053,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Graduate Work or Degree",
              "ParameterId": 977053,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyInfoEducationLevel",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "HOM701035437",
              "ParameterId": 977054,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "HOM820012900",
              "ParameterId": 977054,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "HOM701038075",
              "ParameterId": 977054,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyNumber",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "020-0151-23602",
              "ParameterId": 977055,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "020-0151-23118",
              "ParameterId": 977055,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "020-0151-23120",
              "ParameterId": 977055,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_ReceiptNumber",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "QTE510292963",
              "ParameterId": 977056,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "QTE510291710",
              "ParameterId": 977056,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "QTE510291718",
              "ParameterId": 977056,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicySubmissionID",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "07/28/2023",
              "ParameterId": 977057,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "02/16/2023",
              "ParameterId": 977057,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "08/30/2023",
              "ParameterId": 977057,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "02/13/2023",
              "ParameterId": 977057,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "02/16/2023",
              "ParameterId": 977057,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_EffectiveDate",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "QTE510154829",
              "ParameterId": 977058,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "QTE510294870",
              "ParameterId": 977058,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "QTE510172046",
              "ParameterId": 977058,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "QTE510351842",
              "ParameterId": 977058,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_QuoteNumber",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "No",
              "ParameterId": 977059,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "No",
              "ParameterId": 977059,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "No",
              "ParameterId": 977059,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "No",
              "ParameterId": 977059,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "No",
              "ParameterId": 977059,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_YesOrNoHomeLosses",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977060,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977060,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977060,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977060,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977060,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicyInfoEmail",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Yes AND 21st Century Insurance Company AND Homeowners (HO3) AND 3",
              "ParameterId": 977061,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Yes AND 21st Century Insurance Company AND Homeowners (HO3) AND 3",
              "ParameterId": 977061,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Yes AND 21st Century Insurance Company AND Homeowners (HO3) AND 3",
              "ParameterId": 977061,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Yes AND 21st Century Insurance Company AND Homeowners (HO3) AND 3",
              "ParameterId": 977061,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Yes AND 21st Century Insurance Company AND Homeowners (HO3) AND 3",
              "ParameterId": 977061,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PriorINSDetails",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "47071920600",
              "ParameterId": 977062,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "26081012004",
              "ParameterId": 977062,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "13089021208",
              "ParameterId": 977062,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "55063010402",
              "ParameterId": 977062,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "47071920600",
              "ParameterId": 977062,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_CensusTrack",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "The Auto Club Group AND 70264529 -  Test286 Captive GA",
              "ParameterId": 977063,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "The Auto Club Group AND 70264529 -  Test286 Captive GA",
              "ParameterId": 977063,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "The Auto Club Group AND 70264529 -  Test286 Captive GA",
              "ParameterId": 977063,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "The Auto Club Group AND 70264529 -  Test286 Captive GA",
              "ParameterId": 977063,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "The Auto Club Group AND 70264529 -  Test286 Captive GA",
              "ParameterId": 977063,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_OrgNameAndProdCode",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "TN AND Primary AND 1 AND 1 AND 2015 AND Yes AND No AND No AND No AND Yes AND Yes AND Yes AND Yes AND No AND No AND No AND No AND No AND 1 AND 10W AND HARDIN CO FPSA AND Yes AND Yes AND Localized AND Yes AND Yes AND Localized AND Single Point Detection",
              "ParameterId": 977064,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "MI AND Primary AND 1 AND 1 AND 2015 AND Yes AND No AND No AND No AND Yes AND Yes AND Yes AND Yes AND No AND No AND No AND No AND No AND 1 AND 1 AND ADA TS FDS AND Yes AND Yes AND Localized AND Yes AND Yes AND Localized AND Single Point Detection",
              "ParameterId": 977064,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "GA AND Primary AND 1 AND 1 AND 2015 AND Yes AND No AND No AND No AND Yes AND Yes AND Yes AND Yes AND No AND No AND No AND No AND No AND 1 AND 10 AND ROME AND Yes AND Yes AND Localized AND Yes AND Yes AND Localized AND Single Point Detection",
              "ParameterId": 977064,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "WI AND Primary AND 1 AND 1 AND 2015 AND Yes AND No AND No AND No AND Yes AND Yes AND Yes AND Yes AND No AND No AND No AND No AND No AND 1 AND 10 AND ROME AND Yes AND Yes AND Localized AND Yes AND Yes AND Localized AND Single Point Detection",
              "ParameterId": 977064,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "IL AND Primary AND 1 AND 1 AND 2015 AND Yes AND No AND No AND No AND Yes AND Yes AND Yes AND Yes AND No AND No AND No AND No AND No AND 1 AND 10 AND ROME AND Yes AND Yes AND Localized AND Yes AND Yes AND Localized AND Single Point Detection",
              "ParameterId": 977064,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_DwellingDetails",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "TN AND 2015 AND 2500 AND No AND Frame AND No AND Gas AND None AND No AND No AND Yes AND 2018 AND Yes AND Yes AND 2020",
              "ParameterId": 977065,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "MI AND 2015 AND 2500 AND No AND Frame AND No AND Gas AND None AND No AND No AND Yes AND 2018 AND Yes AND Yes AND 2020",
              "ParameterId": 977065,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "GA AND 2015 AND 2500 AND No AND Frame AND No AND Gas AND Electric AND No AND No AND Yes AND 2018 AND Yes AND Yes AND 2020",
              "ParameterId": 977065,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "WI AND 2015 AND 2500 AND No AND Frame AND No AND Gas AND Electric AND No AND No AND Yes AND 2018 AND Yes AND Yes AND 2020",
              "ParameterId": 977065,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "IL AND 2015 AND 2500 AND No AND Frame AND No AND Gas AND Electric AND No AND No AND Yes AND 2018 AND Yes AND Yes AND 2020",
              "ParameterId": 977065,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_DwellingConDetails",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "TN AND 2 AND Percent AND 5% AND 5%",
              "ParameterId": 977066,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "MI AND 2 AND Percent AND 5% AND 5%",
              "ParameterId": 977066,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "GA AND 2 AND Percent AND 5% AND 5%",
              "ParameterId": 977066,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "WI AND 2 AND Percent AND 5% AND 5%",
              "ParameterId": 977066,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "IL AND 2 AND Percent AND 5% AND 5%",
              "ParameterId": 977066,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_CoveragesDetails",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Additional Interest",
              "ParameterId": 977067,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Additional Interest",
              "ParameterId": 977067,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Additional Interest",
              "ParameterId": 977067,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Additional Interest",
              "ParameterId": 977067,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Additional Interest",
              "ParameterId": 977067,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_InterestType",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "John",
              "ParameterId": 977068,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "John",
              "ParameterId": 977068,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "John",
              "ParameterId": 977068,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "John",
              "ParameterId": 977068,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "John",
              "ParameterId": 977068,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AdditionalInterestFirstName",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Wick",
              "ParameterId": 977069,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Wick",
              "ParameterId": 977069,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Wick",
              "ParameterId": 977069,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Wick",
              "ParameterId": 977069,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Wick",
              "ParameterId": 977069,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AdditionalInterestLastName",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Male",
              "ParameterId": 977070,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Male",
              "ParameterId": 977070,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Male",
              "ParameterId": 977070,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Male",
              "ParameterId": 977070,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Male",
              "ParameterId": 977070,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AdditionalInterestGender",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "1/27/1994",
              "ParameterId": 977071,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "1/27/1994",
              "ParameterId": 977071,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "1/27/1994",
              "ParameterId": 977071,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "1/27/1994",
              "ParameterId": 977071,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "1/27/1994",
              "ParameterId": 977071,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AdditionalInterestDOB",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Single",
              "ParameterId": 977072,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Single",
              "ParameterId": 977072,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Single",
              "ParameterId": 977072,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Single",
              "ParameterId": 977072,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Single",
              "ParameterId": 977072,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AdditionalInterestMaritalStatus",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Home",
              "ParameterId": 977073,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Home",
              "ParameterId": 977073,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Home",
              "ParameterId": 977073,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Home",
              "ParameterId": 977073,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Home",
              "ParameterId": 977073,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PrimaryMethodOfContact",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "231-123-1234",
              "ParameterId": 977074,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "231-123-1234",
              "ParameterId": 977074,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "231-123-1234",
              "ParameterId": 977074,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "231-123-1234",
              "ParameterId": 977074,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "231-123-1234",
              "ParameterId": 977074,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AdditionalInterestHomePhoneNo",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977075,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977075,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977075,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977075,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "test@acg.aaa.com",
              "ParameterId": 977075,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AdditionalInterestEmail",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "TN AND Yes AND Gas AND Electric AND Yes AND 2020 AND 2021",
              "ParameterId": 977076,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "MI AND Yes AND Gas AND Electric AND Yes AND 2020 AND 2021",
              "ParameterId": 977076,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "GA AND Yes AND Gas AND Electric AND Yes AND 2020 AND 2021",
              "ParameterId": 977076,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "WI AND Yes AND Gas AND Electric AND Yes AND 2020 AND 2021",
              "ParameterId": 977076,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "IL AND Yes AND Gas AND Electric AND Yes AND 2020 AND 2021",
              "ParameterId": 977076,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_DwellingConstDetailsPCH",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "2014 AND 2550",
              "ParameterId": 977077,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "2014 AND 2550",
              "ParameterId": 977077,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "2014 AND 2550",
              "ParameterId": 977077,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "2014 AND 2550",
              "ParameterId": 977077,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "2014 AND 2550",
              "ParameterId": 977077,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_RCEValuePCH",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "$9112.99",
              "ParameterId": 977078,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "$4927.78",
              "ParameterId": 977078,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "$5297.29",
              "ParameterId": 977078,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "$5297.29",
              "ParameterId": 977078,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_QuoteTotalPremium",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "$9112.99",
              "ParameterId": 977079,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "$4927.78",
              "ParameterId": 977079,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "$5297.29",
              "ParameterId": 977079,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "$5297.29",
              "ParameterId": 977079,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_QuoteTotalCost",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "$7015.23",
              "ParameterId": 977080,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "$938.65",
              "ParameterId": 977080,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "$3365.30",
              "ParameterId": 977080,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "$3365.30",
              "ParameterId": 977080,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_QuoteChangeInCost",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "QTE510154862",
              "ParameterId": 977081,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "QTE510293063",
              "ParameterId": 977081,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "QTE510351843",
              "ParameterId": 977081,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_NewQuoteNumber",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "HOM820024428",
              "ParameterId": 977082,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "HOM820013258",
              "ParameterId": 977082,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "HOM820025230",
              "ParameterId": 977082,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_CopyPolicyNumber",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "1326 E Windsor St",
              "ParameterId": 977083,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AddlInterestSelectStandardizeAddr",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Kingsport",
              "ParameterId": 977084,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AddlInterestCity",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "2027",
              "ParameterId": 977085,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "2027",
              "ParameterId": 977085,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "2027",
              "ParameterId": 977085,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "2027",
              "ParameterId": 977085,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "2027",
              "ParameterId": 977085,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_CreditYearExp",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "07",
              "ParameterId": 977086,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "07",
              "ParameterId": 977086,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "07",
              "ParameterId": 977086,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "07",
              "ParameterId": 977086,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "07",
              "ParameterId": 977086,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_CreditMonthExp",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "CC (Credit Card)",
              "ParameterId": 977087,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "CC (Credit Card)",
              "ParameterId": 977087,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "CC (Credit Card)",
              "ParameterId": 977087,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "CC (Credit Card)",
              "ParameterId": 977087,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "CC (Credit Card)",
              "ParameterId": 977087,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PaymentmethodType",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "This risk is not eligible for Additional Insured Premises due to the presence of more than 4 families.",
              "ParameterId": 977088,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "This risk is not eligible for Additional Insured Premises due to the presence of more than 4 families.",
              "ParameterId": 977088,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "This risk is not eligible for Additional Insured Premises due to the presence of more than 4 families.",
              "ParameterId": 977088,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "This risk is not eligible for Additional Insured Premises due to the presence of more than 4 families.",
              "ParameterId": 977088,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "This risk is not eligible for Additional Insured Premises due to the presence of more than 4 families.",
              "ParameterId": 977088,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_BR746",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "55%",
              "ParameterId": 977089,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "55%",
              "ParameterId": 977089,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "55%",
              "ParameterId": 977089,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "55%",
              "ParameterId": 977089,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "55%",
              "ParameterId": 977089,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PersonalPropertyValue",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Please provide reason for increasing Coverage C above 50% of Coverage A",
              "ParameterId": 977090,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Please provide reason for increasing Coverage C above 50% of Coverage A",
              "ParameterId": 977090,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Please provide reason for increasing Coverage C above 50% of Coverage A",
              "ParameterId": 977090,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Please provide reason for increasing Coverage C above 50% of Coverage A",
              "ParameterId": 977090,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Please provide reason for increasing Coverage C above 50% of Coverage A",
              "ParameterId": 977090,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_BR616",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": "Home",
              "ParameterId": 977091,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": "Home",
              "ParameterId": 977091,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": "Home",
              "ParameterId": 977091,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": "Home",
              "ParameterId": 977091,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": "Home",
              "ParameterId": 977091,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PersonalPropertyReason",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 3,
              "Value": "1 AND Yes AND Nellore AND Loss AND 200 AND 4@2 AND Yes AND Nellore AND Loss AND 300 AND 3",
              "ParameterId": 977092,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_AddAdditionalInsuredPremises",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "DT_PolicySecondChangeEffectiveDate",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": null,
              "ParameterId": 0,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": null,
              "ParameterId": 0,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": null,
              "ParameterId": 0,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": null,
              "ParameterId": 0,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": null,
              "ParameterId": 0,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "Iteration",
          "Created": null,
          "Modified": null
        },
        {
          "TempId": 0,
          "Iterations": [
            {
              "Iteration": 1,
              "Value": null,
              "ParameterId": 0,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 2,
              "Value": null,
              "ParameterId": 0,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 3,
              "Value": null,
              "ParameterId": 0,
              "Skip": 0,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 4,
              "Value": null,
              "ParameterId": 0,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            },
            {
              "Iteration": 5,
              "Value": null,
              "ParameterId": 0,
              "Skip": 1,
              "Name": null,
              "Created": null,
              "Modified": null
            }
          ],
          "DataSheetId": 11618,
          "IsEncrypted": false,
          "IsShared": false,
          "Name": "Skip",
          "Created": null,
          "Modified": null
        }
      ],
      "Name": null,
      "Created": null,
      "Modified": null
    },
    "Scenario": null,
    "Authentication": null,
    "TestSteps": [
      {
        "TempId": 2909021,
        "StepNumber": 1,
        "ActionId": 1,
        "ComponentId": null,
        "CustomActionId": 12453,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "UserDetails",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909054,
        "StepNumber": 2,
        "ActionId": 55,
        "ComponentId": 9374,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": false,
        "Description": "Login_to_Agent_Browser",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909054,
            "ComponentId": 9374,
            "ComponentStepId": 127417,
            "TestCase": null,
            "Value": "GDT_GWEnv_Username",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909054,
            "ComponentId": 9374,
            "ComponentStepId": 127418,
            "TestCase": null,
            "Value": "GDT_GWEnv_Password",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909054,
            "ComponentId": 9374,
            "ComponentStepId": 127419,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909037,
        "StepNumber": 3,
        "ActionId": 55,
        "ComponentId": 9521,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "ClickBeginQuote_bkp",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909037,
            "ComponentId": 9521,
            "ComponentStepId": 122332,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909037,
            "ComponentId": 9521,
            "ComponentStepId": 122333,
            "TestCase": null,
            "Value": "DT_BQProduct",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909037,
            "ComponentId": 9521,
            "ComponentStepId": 122334,
            "TestCase": null,
            "Value": "DT_BQState",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909037,
            "ComponentId": 9521,
            "ComponentStepId": 122335,
            "TestCase": null,
            "Value": "DT_BQEffectiveDate",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909037,
            "ComponentId": 9521,
            "ComponentStepId": 122336,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909037,
            "ComponentId": 9521,
            "ComponentStepId": 122337,
            "TestCase": null,
            "Value": "10",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909036,
        "StepNumber": 4,
        "ActionId": 55,
        "ComponentId": 9522,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "EnterAccInformation",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122338,
            "TestCase": null,
            "Value": "DT_FirtsName",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122339,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122340,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122341,
            "TestCase": null,
            "Value": "DT_HomePhone",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122342,
            "TestCase": null,
            "Value": "DT_MobilePhone",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122343,
            "TestCase": null,
            "Value": "DT_Email",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122344,
            "TestCase": null,
            "Value": "DT_HouseNumber",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122345,
            "TestCase": null,
            "Value": "DT_StreetName",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122346,
            "TestCase": null,
            "Value": "DT_City",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122347,
            "TestCase": null,
            "Value": "DT_State",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122348,
            "TestCase": null,
            "Value": "DT_ZipCode",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122349,
            "TestCase": null,
            "Value": "DT_SSN",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122350,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122351,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122352,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122353,
            "TestCase": null,
            "Value": "DT_Gender",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122354,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122356,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122357,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122358,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122359,
            "TestCase": null,
            "Value": "DT_CensusTrack",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122360,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122361,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122362,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122363,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122364,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122365,
            "TestCase": null,
            "Value": "DT_City",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122368,
            "TestCase": null,
            "Value": "DT_OrgNameAndProdCode",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909036,
            "ComponentId": 9522,
            "ComponentStepId": 122371,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909038,
        "StepNumber": 5,
        "ActionId": 55,
        "ComponentId": 9401,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "Policy_Menu",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909038,
            "ComponentId": 9401,
            "ComponentStepId": 127860,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909038,
            "ComponentId": 9401,
            "ComponentStepId": 127861,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909039,
        "StepNumber": 6,
        "ActionId": 55,
        "ComponentId": 9442,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "StartPolicySubmission_Home",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909039,
            "ComponentId": 9442,
            "ComponentStepId": 128291,
            "TestCase": null,
            "Value": "Single",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909039,
            "ComponentId": 9442,
            "ComponentStepId": 128292,
            "TestCase": null,
            "Value": "7",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909039,
            "ComponentId": 9442,
            "ComponentStepId": 128293,
            "TestCase": null,
            "Value": "DT_AccountNumber",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909039,
            "ComponentId": 9442,
            "ComponentStepId": 128294,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909039,
            "ComponentId": 9442,
            "ComponentStepId": 128295,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909039,
            "ComponentId": 9442,
            "ComponentStepId": 128296,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909039,
            "ComponentId": 9442,
            "ComponentStepId": 128297,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909040,
        "StepNumber": 7,
        "ActionId": 55,
        "ComponentId": 9414,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "Qualification_Home",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909040,
            "ComponentId": 9414,
            "ComponentStepId": 127995,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909040,
            "ComponentId": 9414,
            "ComponentStepId": 127996,
            "TestCase": null,
            "Value": "Policy Info",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909040,
            "ComponentId": 9414,
            "ComponentStepId": 127997,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909040,
            "ComponentId": 9414,
            "ComponentStepId": 127998,
            "TestCase": null,
            "Value": "DT_PolicyTypeSelection",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909041,
        "StepNumber": 8,
        "ActionId": 55,
        "ComponentId": 9398,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "Policy_Info_Home",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127773,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127776,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127784,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127793,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127794,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127795,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127796,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127797,
            "TestCase": null,
            "Value": "DT_PolicyInfoYesorNoPreviousAddress",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127798,
            "TestCase": null,
            "Value": "DT_PolicyInfoYesorNoAAAMembership",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127799,
            "TestCase": null,
            "Value": "DT_PolicyInfoYesorNoPaperlessComm",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127801,
            "TestCase": null,
            "Value": "DT_PolicyInfoMaritalStatus",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127802,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127803,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127804,
            "TestCase": null,
            "Value": "DT_PolicyInfoDOB",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127805,
            "TestCase": null,
            "Value": "DT_PolicyInfoYesorNoFirstCompanyForInsurance",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909041,
            "ComponentId": 9398,
            "ComponentStepId": 127806,
            "TestCase": null,
            "Value": "DT_PolicyInfoEducationLevel",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909042,
        "StepNumber": 9,
        "ActionId": 55,
        "ComponentId": 9407,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "Prior_Insurance",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909042,
            "ComponentId": 9407,
            "ComponentStepId": 127884,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909042,
            "ComponentId": 9407,
            "ComponentStepId": 127885,
            "TestCase": null,
            "Value": "Yes",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909042,
            "ComponentId": 9407,
            "ComponentStepId": 127886,
            "TestCase": null,
            "Value": "1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909042,
            "ComponentId": 9407,
            "ComponentStepId": 127887,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909042,
            "ComponentId": 9407,
            "ComponentStepId": 127889,
            "TestCase": null,
            "Value": "01/10/2024",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909042,
            "ComponentId": 9407,
            "ComponentStepId": 127890,
            "TestCase": null,
            "Value": "Homeowners (HO3)",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909042,
            "ComponentId": 9407,
            "ComponentStepId": 127891,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909042,
            "ComponentId": 9407,
            "ComponentStepId": 127892,
            "TestCase": null,
            "Value": "DT_CarrierName",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909022,
        "StepNumber": 10,
        "ActionId": 55,
        "ComponentId": 9360,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "Dwelling_Home",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126855,
            "TestCase": null,
            "Value": "DT_ResidenceType",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126856,
            "TestCase": null,
            "Value": "DT_SmokerResidingInHousehold",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126860,
            "TestCase": null,
            "Value": "DT_FireAlarm",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126863,
            "TestCase": null,
            "Value": "DT_BurglarAlarm",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126864,
            "TestCase": null,
            "Value": "DT_WaterDetectionDevice",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126865,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126866,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126867,
            "TestCase": null,
            "Value": "2012",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126870,
            "TestCase": null,
            "Value": "DT_DwellingBeLeftUnoccupied",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126871,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126872,
            "TestCase": null,
            "Value": "DT_RespondingFireDepartment",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126874,
            "TestCase": null,
            "Value": "DT_StromShutters",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126878,
            "TestCase": null,
            "Value": "DT_NoOfDogs",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126886,
            "TestCase": null,
            "Value": "executeNextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126889,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126894,
            "TestCase": null,
            "Value": "executeNextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909022,
            "ComponentId": 9360,
            "ComponentStepId": 126929,
            "TestCase": null,
            "Value": "Yes",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909023,
        "StepNumber": 11,
        "ActionId": 55,
        "ComponentId": 9359,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "Dwelling_Construction_Home",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126810,
            "TestCase": null,
            "Value": "2021",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126812,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126813,
            "TestCase": null,
            "Value": "DT_ConstructionType",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126814,
            "TestCase": null,
            "Value": "DT_PrimaryHeating",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126815,
            "TestCase": null,
            "Value": "DT_SecondaryHeating",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126816,
            "TestCase": null,
            "Value": "DT_UnitFloorNumber",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126818,
            "TestCase": null,
            "Value": "100",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126819,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126827,
            "TestCase": null,
            "Value": "DT_RoofShape",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126828,
            "TestCase": null,
            "Value": "DT_NoOfUnits",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126829,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126830,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126832,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126833,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126835,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126836,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126837,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909023,
            "ComponentId": 9359,
            "ComponentStepId": 126838,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909024,
        "StepNumber": 12,
        "ActionId": 55,
        "ComponentId": 9426,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "Reports",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909024,
            "ComponentId": 9426,
            "ComponentStepId": 128060,
            "TestCase": null,
            "Value": "No-Opt Out",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909024,
            "ComponentId": 9426,
            "ComponentStepId": 128061,
            "TestCase": null,
            "Value": "3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909024,
            "ComponentId": 9426,
            "ComponentStepId": 128062,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909024,
            "ComponentId": 9426,
            "ComponentStepId": 128063,
            "TestCase": null,
            "Value": "DT_YesOrNoHomeLosses",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909024,
            "ComponentId": 9426,
            "ComponentStepId": 128065,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909024,
            "ComponentId": 9426,
            "ComponentStepId": 128072,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909025,
        "StepNumber": 13,
        "ActionId": 55,
        "ComponentId": 9354,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": false,
        "Description": "Coverages_Home_Copy",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909025,
            "ComponentId": 9354,
            "ComponentStepId": 126739,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909025,
            "ComponentId": 9354,
            "ComponentStepId": 126743,
            "TestCase": null,
            "Value": "500",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909019,
        "StepNumber": 14,
        "ActionId": 55,
        "ComponentId": 9689,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": false,
        "Description": "ChangePeronalPropertyAndVerifyBR_616",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909019,
            "ComponentId": 9689,
            "ComponentStepId": 126191,
            "TestCase": null,
            "Value": "DT_PersonalPropertyValue",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909019,
            "ComponentId": 9689,
            "ComponentStepId": 126192,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909019,
            "ComponentId": 9689,
            "ComponentStepId": 126193,
            "TestCase": null,
            "Value": "DT_PersonalPropertyReason",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909019,
            "ComponentId": 9689,
            "ComponentStepId": 126194,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909019,
            "ComponentId": 9689,
            "ComponentStepId": 126195,
            "TestCase": null,
            "Value": "DT_BR616",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909019,
            "ComponentId": 9689,
            "ComponentStepId": 126196,
            "TestCase": null,
            "Value": "C - Personal Property",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909026,
        "StepNumber": 15,
        "ActionId": 55,
        "ComponentId": 9433,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "Scheduled_Personal_Property_Home",
        "Locator": null,
        "Value": "",
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909026,
            "ComponentId": 9433,
            "ComponentStepId": 128194,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909026,
            "ComponentId": 9433,
            "ComponentStepId": 128195,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909027,
        "StepNumber": 16,
        "ActionId": 55,
        "ComponentId": 9432,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "Risk_Analysis",
        "Locator": null,
        "Value": "",
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909027,
            "ComponentId": 9432,
            "ComponentStepId": 128190,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909027,
            "ComponentId": 9432,
            "ComponentStepId": 128191,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909028,
        "StepNumber": 17,
        "ActionId": 55,
        "ComponentId": 9403,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "Policy_Review",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909028,
            "ComponentId": 9403,
            "ComponentStepId": 127869,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909028,
            "ComponentId": 9403,
            "ComponentStepId": 127870,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909028,
            "ComponentId": 9403,
            "ComponentStepId": 127871,
            "TestCase": null,
            "Value": "10",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909029,
        "StepNumber": 18,
        "ActionId": 55,
        "ComponentId": 9533,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "SideBySideVersion2",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909029,
            "ComponentId": 9533,
            "ComponentStepId": 122802,
            "TestCase": null,
            "Value": "DT_PaymentType",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909029,
            "ComponentId": 9533,
            "ComponentStepId": 122803,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909029,
            "ComponentId": 9533,
            "ComponentStepId": 122804,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909029,
            "ComponentId": 9533,
            "ComponentStepId": 122805,
            "TestCase": null,
            "Value": "executenextSteps:2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909029,
            "ComponentId": 9533,
            "ComponentStepId": 122806,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909029,
            "ComponentId": 9533,
            "ComponentStepId": 122807,
            "TestCase": null,
            "Value": "DT_PaymentType",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909030,
        "StepNumber": 19,
        "ActionId": 55,
        "ComponentId": 9415,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "Quote",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909030,
            "ComponentId": 9415,
            "ComponentStepId": 128009,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909030,
            "ComponentId": 9415,
            "ComponentStepId": 128010,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909031,
        "StepNumber": 20,
        "ActionId": 55,
        "ComponentId": 9371,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "Forms_Home",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127179,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127180,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127181,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127182,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127183,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127184,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127185,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127186,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127187,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127188,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127189,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127190,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127191,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127192,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127193,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127194,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127195,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127197,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127198,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127199,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127200,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909031,
            "ComponentId": 9371,
            "ComponentStepId": 127212,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909032,
        "StepNumber": 21,
        "ActionId": 55,
        "ComponentId": 9380,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "Manage_Payments_Check",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909032,
            "ComponentId": 9380,
            "ComponentStepId": 127483,
            "TestCase": null,
            "Value": "DT_CreditCardNumber",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909032,
            "ComponentId": 9380,
            "ComponentStepId": 127484,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909032,
            "ComponentId": 9380,
            "ComponentStepId": 127485,
            "TestCase": null,
            "Value": "DT_CreditYearExp",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909032,
            "ComponentId": 9380,
            "ComponentStepId": 127486,
            "TestCase": null,
            "Value": "DT_CreditMonthExp",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909032,
            "ComponentId": 9380,
            "ComponentStepId": 127487,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909032,
            "ComponentId": 9380,
            "ComponentStepId": 127488,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909032,
            "ComponentId": 9380,
            "ComponentStepId": 127489,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909032,
            "ComponentId": 9380,
            "ComponentStepId": 127490,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909032,
            "ComponentId": 9380,
            "ComponentStepId": 127491,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909033,
        "StepNumber": 22,
        "ActionId": 55,
        "ComponentId": 9395,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "Payment",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909033,
            "ComponentId": 9395,
            "ComponentStepId": 127695,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909034,
        "StepNumber": 23,
        "ActionId": 55,
        "ComponentId": 9381,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "Membership",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127524,
            "TestCase": null,
            "Value": "DT_PaymentmethodType",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127525,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127526,
            "TestCase": null,
            "Value": "3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127537,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127538,
            "TestCase": null,
            "Value": "DT_MembershipCoverageType",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127539,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127540,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127541,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127542,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127544,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127546,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909034,
            "ComponentId": 9381,
            "ComponentStepId": 127547,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909035,
        "StepNumber": 24,
        "ActionId": 55,
        "ComponentId": 9443,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "Submission_bound",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909035,
            "ComponentId": 9443,
            "ComponentStepId": 128299,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909035,
            "ComponentId": 9443,
            "ComponentStepId": 128302,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909035,
            "ComponentId": 9443,
            "ComponentStepId": 128304,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909043,
        "StepNumber": 25,
        "ActionId": 55,
        "ComponentId": 9566,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "New Submission_AutoFill_Home",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123390,
            "TestCase": null,
            "Value": "3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123391,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123392,
            "TestCase": null,
            "Value": "3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123393,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123394,
            "TestCase": null,
            "Value": "DT_PaymentType",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123396,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123397,
            "TestCase": null,
            "Value": "3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123398,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123399,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123400,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123401,
            "TestCase": null,
            "Value": "3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123402,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123403,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123404,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123405,
            "TestCase": null,
            "Value": "3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123406,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123407,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123408,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123409,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123410,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123411,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123412,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123413,
            "TestCase": null,
            "Value": "Localized",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123414,
            "TestCase": null,
            "Value": "Localized",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123415,
            "TestCase": null,
            "Value": "Single Point Detection",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123416,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123417,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123418,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123419,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123420,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123421,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123422,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123423,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123424,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123425,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123426,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123427,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123428,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123429,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123430,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123431,
            "TestCase": null,
            "Value": "5454545454545454",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123432,
            "TestCase": null,
            "Value": "10",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123433,
            "TestCase": null,
            "Value": "2025",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123434,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123435,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123436,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123437,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123438,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123440,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123441,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123442,
            "TestCase": null,
            "Value": "No-Opt Out",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123444,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123445,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123446,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123447,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123448,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123449,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123450,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123451,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123452,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123453,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123454,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123455,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123456,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123457,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123459,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123460,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123461,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123462,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123463,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909043,
            "ComponentId": 9566,
            "ComponentStepId": 123464,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909044,
        "StepNumber": 26,
        "ActionId": 55,
        "ComponentId": 9487,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "Search_Policy_From_Policy_Menu",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909044,
            "ComponentId": 9487,
            "ComponentStepId": 122135,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909044,
            "ComponentId": 9487,
            "ComponentStepId": 122136,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909044,
            "ComponentId": 9487,
            "ComponentStepId": 122137,
            "TestCase": null,
            "Value": "DT_PolicyNumber",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909044,
            "ComponentId": 9487,
            "ComponentStepId": 122138,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909044,
            "ComponentId": 9487,
            "ComponentStepId": 122139,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909044,
            "ComponentId": 9487,
            "ComponentStepId": 122140,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909046,
        "StepNumber": 27,
        "ActionId": 55,
        "ComponentId": 9853,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "Start_Policy_Change_PC",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129622,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129623,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129624,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129625,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129626,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129627,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129628,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129629,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129630,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129631,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909046,
            "ComponentId": 9853,
            "ComponentStepId": 129632,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909047,
        "StepNumber": 28,
        "ActionId": 55,
        "ComponentId": 9643,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "PolicyChange_Dwelling_ProtectionDetails",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124989,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124990,
            "TestCase": null,
            "Value": "Yes",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124991,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124992,
            "TestCase": null,
            "Value": "Yes",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124993,
            "TestCase": null,
            "Value": "No",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124994,
            "TestCase": null,
            "Value": "Centralized",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124995,
            "TestCase": null,
            "Value": "Yes",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124996,
            "TestCase": null,
            "Value": "Centralized",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124997,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909047,
            "ComponentId": 9643,
            "ComponentStepId": 124998,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909048,
        "StepNumber": 29,
        "ActionId": 55,
        "ComponentId": 9642,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "PolicyChange_Dwelling_AdditionalInterest_NewPerson",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124960,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124961,
            "TestCase": null,
            "Value": "executenextSteps:6",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124962,
            "TestCase": null,
            "Value": "executenextSteps:3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124963,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124964,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124965,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124966,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124967,
            "TestCase": null,
            "Value": "47071920600",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124968,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124969,
            "TestCase": null,
            "Value": "Graduate Work or Degree",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124970,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124971,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124972,
            "TestCase": null,
            "Value": "DT_InterestType",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124973,
            "TestCase": null,
            "Value": "DT_AdditionalInterestFirstName",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124974,
            "TestCase": null,
            "Value": "DT_AdditionalInterestLastName",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124975,
            "TestCase": null,
            "Value": "DT_AdditionalInterestGender",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124976,
            "TestCase": null,
            "Value": "DT_AdditionalInterestDOB",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124977,
            "TestCase": null,
            "Value": "DT_AdditionalInterestMaritalStatus",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124978,
            "TestCase": null,
            "Value": "DT_PrimaryMethodOfContact",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124979,
            "TestCase": null,
            "Value": "DT_AdditionalInterestHomePhoneNo",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124980,
            "TestCase": null,
            "Value": "DT_AdditionalInterestEmail",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124981,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124982,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124983,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124984,
            "TestCase": null,
            "Value": "DT_AddlInterestSelectStandardizeAddr",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124985,
            "TestCase": null,
            "Value": "executenextSteps:1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124986,
            "TestCase": null,
            "Value": "DT_AddlInterestCity",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909048,
            "ComponentId": 9642,
            "ComponentStepId": 124987,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909050,
        "StepNumber": 30,
        "ActionId": 55,
        "ComponentId": 9645,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "PolicyChange_NextActions",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125005,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125006,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125007,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125020,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125021,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125022,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125023,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125025,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125026,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125032,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125033,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125034,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125035,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909050,
            "ComponentId": 9645,
            "ComponentStepId": 125038,
            "TestCase": null,
            "Value": null,
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909020,
        "StepNumber": 31,
        "ActionId": 55,
        "ComponentId": 9688,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": false,
        "SkipStep": true,
        "Description": "AddAdditionalnusredPremisesAndVerifyBR_746",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126154,
            "TestCase": null,
            "Value": "1 AND Yes AND Rome AND Loss AND 200 AND 5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126155,
            "TestCase": null,
            "Value": "DT_BR746",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126156,
            "TestCase": null,
            "Value": "1 AND Yes AND City AND Loss AND 200 AND 4",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126157,
            "TestCase": null,
            "Value": "2 AND Yes AND WaterTwon AND Loss AND 300 AND 3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126158,
            "TestCase": null,
            "Value": "3 AND Yes AND Spring AND Loss AND 3000 AND 4",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126159,
            "TestCase": null,
            "Value": "4 AND Yes AND Winter AND Loss AND 400 AND 1",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126160,
            "TestCase": null,
            "Value": "5 AND Yes AND WaterBoard AND Loss AND 2500 AND 3",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126161,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126162,
            "TestCase": null,
            "Value": "DT_BR746",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126163,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126164,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126165,
            "TestCase": null,
            "Value": "4",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126166,
            "TestCase": null,
            "Value": "4",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126167,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126168,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126169,
            "TestCase": null,
            "Value": "4",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909020,
            "ComponentId": 9688,
            "ComponentStepId": 126170,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909049,
        "StepNumber": 32,
        "ActionId": 55,
        "ComponentId": 9644,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "PolicyChange_DwellingConstruction",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909049,
            "ComponentId": 9644,
            "ComponentStepId": 124999,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909049,
            "ComponentId": 9644,
            "ComponentStepId": 125002,
            "TestCase": null,
            "Value": "DT_RCEValuePCH",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909049,
            "ComponentId": 9644,
            "ComponentStepId": 125003,
            "TestCase": null,
            "Value": "TN AND Yes AND Gas AND Electric AND Yes AND 2020 AND 2021",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909049,
            "ComponentId": 9644,
            "ComponentStepId": 125004,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909051,
        "StepNumber": 33,
        "ActionId": 55,
        "ComponentId": 9482,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "Quote_Issue_Policy",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121962,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121963,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121964,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121965,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121966,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121967,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121968,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121969,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121970,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121971,
            "TestCase": null,
            "Value": "Policy change",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121972,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121973,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121974,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121975,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121976,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 121977,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 122006,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909051,
            "ComponentId": 9482,
            "ComponentStepId": 122009,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909052,
        "StepNumber": 34,
        "ActionId": 55,
        "ComponentId": 9494,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "Change_Bound",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909052,
            "ComponentId": 9494,
            "ComponentStepId": 121536,
            "TestCase": null,
            "Value": "5",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909052,
            "ComponentId": 9494,
            "ComponentStepId": 121537,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909052,
            "ComponentId": 9494,
            "ComponentStepId": 121538,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909053,
        "StepNumber": 35,
        "ActionId": 55,
        "ComponentId": 9834,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "Search_Policy_From_Policy_Menu",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909053,
            "ComponentId": 9834,
            "ComponentStepId": 129907,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909053,
            "ComponentId": 9834,
            "ComponentStepId": 129908,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909053,
            "ComponentId": 9834,
            "ComponentStepId": 129909,
            "TestCase": null,
            "Value": "DT_PolicyNumber",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909053,
            "ComponentId": 9834,
            "ComponentStepId": 129910,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909053,
            "ComponentId": 9834,
            "ComponentStepId": 129911,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909053,
            "ComponentId": 9834,
            "ComponentStepId": 129912,
            "TestCase": null,
            "Value": "2",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 2909045,
        "StepNumber": 36,
        "ActionId": 55,
        "ComponentId": 9513,
        "CustomActionId": null,
        "StepSectionId": 2,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "LocatorTypeId": null,
        "Screenshot": true,
        "SkipStep": true,
        "Description": "PostPolicyChange_Validation_PCH_Regression",
        "Locator": null,
        "Value": null,
        "Status": "Pending",
        "UserSays": null,
        "BotSays": null,
        "Parameters": [
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909045,
            "ComponentId": 9513,
            "ComponentStepId": 121736,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909045,
            "ComponentId": 9513,
            "ComponentStepId": 121737,
            "TestCase": null,
            "Value": "DT_NewQuoteNumber",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909045,
            "ComponentId": 9513,
            "ComponentStepId": 121738,
            "TestCase": null,
            "Value": "DT_EffectiveDate",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909045,
            "ComponentId": 9513,
            "ComponentStepId": 121739,
            "TestCase": null,
            "Value": "DT_EffectiveDate",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909045,
            "ComponentId": 9513,
            "ComponentStepId": 121740,
            "TestCase": null,
            "Value": "",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909045,
            "ComponentId": 9513,
            "ComponentStepId": 121741,
            "TestCase": null,
            "Value": "DT_QuoteTotalPremium",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909045,
            "ComponentId": 9513,
            "ComponentStepId": 121742,
            "TestCase": null,
            "Value": "DT_QuoteChangeInCost",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          },
          {
            "TestCaseId": 11618,
            "TestCaseStepId": 2909045,
            "ComponentId": 9513,
            "ComponentStepId": 121743,
            "TestCase": null,
            "Value": "DT_QuoteTotalCost",
            "TempId": 0,
            "qTestStepKey": null,
            "Name": null,
            "Created": null,
            "Modified": null
          }
        ],
        "Assertions": [],
        "APIParams": [],
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "Headers": [],
    "GalenGroups": [],
    "GalenObjects": [],
    "GalenSections": [],
    "TagNames": "",
    "GRDomainNameandId": null,
    "qTestTestCaseId": null,
    "Pester": null,
    "ExternalDT": null,
    "ExternalDTSheetName": null,
    "Name": "DFCT0018601_TC01_copy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12453,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.net.InetAddress;\r\nimport java.net.UnknownHostException;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.sql.Timestamp;\r\nimport java.util.Date;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\r\nimport org.apache.poi.ss.usermodel.Cell;\r\nimport org.apache.poi.ss.usermodel.Row;\r\nimport org.apache.poi.ss.usermodel.Sheet;\r\nimport org.apache.poi.ss.usermodel.Workbook;\r\nimport org.apache.poi.ss.usermodel.WorkbookFactory;\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class UserDetails extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) throws UnknownHostException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\n\r\n\r\n/*String userDir=System.getProperty(\"user.dir\");\r\n      Path path=Paths.get(userDir);\r\nString projectName=path.getFileName().toString();*/\r\n\r\n\r\nDate date=new Date();\r\n      long time=date.getTime();\r\n      Timestamp ts=new Timestamp(time);\r\nString executionTime=ts.toString();\r\nString userName=System.getProperty(\"user.name\");\r\nString systemName=InetAddress.getLocalHost().toString();\r\n\r\n/*\r\nString[][] details = {\r\n        {userName,systemName,executionTime}      \r\n};\r\n\r\nFile xlsxFile = new File(\"\\\\\\\\hob1s01\\\\PUBLIC\\\\TALOS_Reports\\\\ExecutionDetails.xlsx\");\r\nFileInputStream inputStream = new FileInputStream(xlsxFile);\r\nWorkbook workbook = WorkbookFactory.create(inputStream);\r\nSheet sheet = workbook.getSheetAt(0);\r\nint rowCount = sheet.getLastRowNum();\r\nfor(String[] detail:details){\r\n    Row row = sheet.createRow(++rowCount);\r\n     \r\n    int columnCount = 0;\r\n    \r\n    for(String all:detail){\r\n        Cell cell = row.createCell(columnCount++);\r\n        \r\n            cell.setCellValue((all));   \r\n}\r\n\r\ninputStream.close();\r\nFileOutputStream os = new FileOutputStream(xlsxFile);\r\nworkbook.write(os);\r\nworkbook.close();\r\nos.close();\r\n \r\nSystem.out.println(\"Excel file has been updated successfully.\");\r\n\r\n\r\n} */\r\n\r\n\r\n\r\nactionResult.comments = \"User Name :\"+userName+\"<br/>\" +\"  System Name :\"+systemName+\"<br/>\"+\"   Execution time:\"+executionTime;\r\nactionResult.status   = true;\r\n\r\n\r\n\r\n}\r\n\r\n\r\ncatch(Exception e){\r\n\r\n    actionResult.status = true;\r\n           actionResult.comments =e.getMessage();\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "UserDetails",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9374,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127402,
        "StepNumber": 1,
        "Description": "Launch Policy Center Agent Browser",
        "LocatorTypeId": null,
        "Locator": "",
        "ActionId": 27,
        "ParameterName": null,
        "ParameterValue": "GDT_UTRN_URL",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127405,
        "StepNumber": 2,
        "Description": "Verify If Alert Exists",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 63,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127413,
        "StepNumber": 3,
        "Description": "Verify Settings ICon gets displayes on PC",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(@id,'tblinks-innerCt')]//a[2]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127407,
        "StepNumber": 4,
        "Description": "Logout_PolicyCenter",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12361,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127414,
        "StepNumber": 5,
        "Description": "Click On Settings Icon",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(@id,'tblinks-innerCt')]//a[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127412,
        "StepNumber": 6,
        "Description": "Wait For Logout option opened",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "3",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127415,
        "StepNumber": 7,
        "Description": "Click on Logout Option",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'LogoutTabBarLink-itemEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127416,
        "StepNumber": 8,
        "Description": "Click on OK Button for Logout Confirmation",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='OK']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127403,
        "StepNumber": 9,
        "Description": "Launch Policy Center Agent Browser",
        "LocatorTypeId": null,
        "Locator": "",
        "ActionId": 27,
        "ParameterName": null,
        "ParameterValue": "GDT_UTRN_URL",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127408,
        "StepNumber": 10,
        "Description": "Verify Agent browser Homepage is displayed",
        "LocatorTypeId": 7,
        "Locator": " //a[contains(text(),'Underwriter') or contains(text(),'Auto Club Group')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127409,
        "StepNumber": 11,
        "Description": "Click on UW user Dropdown",
        "LocatorTypeId": 7,
        "Locator": " //a[contains(text(),'Underwriter') or contains(text(),'Auto Club Group')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127410,
        "StepNumber": 12,
        "Description": "Click on Logout",
        "LocatorTypeId": 7,
        "Locator": "(//a[contains(text(),'Logout')])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127411,
        "StepNumber": 13,
        "Description": "Click on click here link on login page",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(text(),'here')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127404,
        "StepNumber": 14,
        "Description": "Launch Policy Center Agent Browser",
        "LocatorTypeId": null,
        "Locator": "",
        "ActionId": 27,
        "ParameterName": null,
        "ParameterValue": "GDT_UTRN_URL",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127406,
        "StepNumber": 15,
        "Description": "Verify Login page exists",
        "LocatorTypeId": 7,
        "Locator": "//input[@name='username']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127417,
        "StepNumber": 16,
        "Description": "Enter User Name",
        "LocatorTypeId": 7,
        "Locator": "//input[@name='username']",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "GDT_UTRN_UW_User",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127418,
        "StepNumber": 17,
        "Description": "Enter Password",
        "LocatorTypeId": 7,
        "Locator": "//input[@name='password']",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "GDT_UTRN_UW_PWD",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127419,
        "StepNumber": 18,
        "Description": "Click Submit",
        "LocatorTypeId": 4,
        "Locator": "submit",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Login_to_Agent_Browser",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 3547,
    "ProjectId": 99,
    "Key": "GDT_UTRN_URL",
    "Value": "https://ttrnpxyvip01.aaa-acg.net/aba/agentbrowser/",
    "GlobalSheetId": null,
    "IsEncrypted": false,
    "Name": null,
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12361,
    "Description": "Logout from Policy Center.",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class Logout_PolicyCenter extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\t   \n\t   try{\n       \n\t\t\t\n\t\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tActions act = new Actions(driver);\n\t\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\tString expMsg = inputValue.toString();\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t////////     Logout from 'Policy Center'       //////////////////////\n\t\t\t\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//a[contains(@id,'TabLinkMenuButton')]\"))));\n\t\t\tWebElement settingsIconEle = driver.findElement(By.xpath(\"//a[contains(@id,'TabLinkMenuButton')]\"));\n\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", settingsIconEle);\n\t\t\tjs.executeScript(\"arguments[0].click();\",settingsIconEle);\n\t\t\t\n\t\t\tThread.sleep(1000);\n\t\t\t\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'LogoutTabBarLink-textEl') and contains(text(),'Log Out')]\"))));\n\t\t\tWebElement logoutOptionEle = driver.findElement(By.xpath(\"//span[contains(@id,'LogoutTabBarLink-textEl') and contains(text(),'Log Out')]\"));\n\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", logoutOptionEle);\n\t\t\tjs.executeScript(\"arguments[0].click();\",logoutOptionEle);\n\t\t\t\n\t\t\tThread.sleep(1000);\n\t\t\t\n\t\t\tactionResult.comments = \"Successfully Logged out from 'Policy Center' \";\n\t\t\tactionResult.status = true;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\tcatch(Exception e) {\n\t\t\t\tactionResult.comments = e.getMessage();\n\t\t\t\tactionResult.status = false;\n\t\t\t}\n\n\t\t\t\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Logout_PolicyCenter",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9521,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 122332,
        "StepNumber": 1,
        "Description": "Click Begin Quote on Quick Links",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(text(),'Begin Quote')]",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 10108,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 10,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122337,
        "StepNumber": 2,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "10",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122333,
        "StepNumber": 3,
        "Description": "Begin QuoteBegin QuoteSCREENSelect ProductFORMProductDROPDOWN",
        "LocatorTypeId": 7,
        "Locator": "//mat-label[text()='Product']/ancestor::mat-form-field//mat-select",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "DT_BQ_Product",
        "CustomActionId": null,
        "ObjectDictionaryId": 10109,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 10,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122334,
        "StepNumber": 4,
        "Description": "Begin QuoteBegin QuoteSCREENSelect ProductFORMStateDROPDOWN",
        "LocatorTypeId": 7,
        "Locator": "//mat-label[text()='State']/ancestor::mat-form-field//mat-select",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "DT_BQ_State",
        "CustomActionId": null,
        "ObjectDictionaryId": 10110,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122335,
        "StepNumber": 5,
        "Description": "Begin QuoteBegin QuoteSCREENSelect ProductFORMEffective DateTEXTBOX",
        "LocatorTypeId": 7,
        "Locator": "//mat-label[text()='Effective Date']/ancestor::mat-form-field//input",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "DT_BQ_EffectiveDate",
        "CustomActionId": null,
        "ObjectDictionaryId": 10111,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122336,
        "StepNumber": 6,
        "Description": "Begin Quote to Proceed with Policy Creation",
        "LocatorTypeId": 7,
        "Locator": "//button[contains(text(),'Begin Quote')]",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 10112,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 10,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "ClickBeginQuote_bkp",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10108,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//div[contains(text(),'Begin Quote')]",
    "PageId": 1176,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Agent Browser HomeAgent Browser HomeSCREENRHSMENUBARQuick LinksMENUBegin QuoteCLICKCHOICE",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1176,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Agent Browser Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10109,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//mat-label[text()='Product']/ancestor::mat-form-field//mat-select",
    "PageId": 1177,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Begin QuoteBegin QuoteSCREENSelect ProductFORMProductDROPDOWN",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1177,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Begin Quote",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10110,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//mat-label[text()='State']/ancestor::mat-form-field//mat-select",
    "PageId": 1177,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Begin QuoteBegin QuoteSCREENSelect ProductFORMStateDROPDOWN",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10111,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//mat-label[text()='Effective Date']/ancestor::mat-form-field//input",
    "PageId": 1177,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Begin QuoteBegin QuoteSCREENSelect ProductFORMEffective DateTEXTBOX",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10112,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//button[contains(text(),'Begin Quote')]",
    "PageId": 1177,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Begin QuoteBegin QuoteSCREENBegin QuoteBUTTON",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9522,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 122361,
        "StepNumber": 1,
        "Description": "Verify_EnterAccountInformationPage",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12598,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122338,
        "StepNumber": 2,
        "Description": "Enter First Name",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'FirstName-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "DT_Drivers_FirstName",
        "CustomActionId": null,
        "ObjectDictionaryId": 10113,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122386,
        "StepNumber": 3,
        "Description": "Enter Account InformationEnter Account InformationSCREENEnter Account InformationFORMLast name\tTEXTBOX",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'LastName-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "DT_Drivers_LastName",
        "CustomActionId": null,
        "ObjectDictionaryId": 10114,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122387,
        "StepNumber": 4,
        "Description": "Enter Account InformationEnter Account InformationSCREENSearchBUTTON",
        "LocatorTypeId": 3,
        "Locator": "NewAccount:NewAccountScreen:NewAccountSearchDV:SearchAndResetInputSet:SearchLinksInputSet:Search",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 10115,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 10,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122339,
        "StepNumber": 5,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122340,
        "StepNumber": 6,
        "Description": "SelectPersonFromCreateNewAccountDropdown",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11758,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122370,
        "StepNumber": 7,
        "Description": "CreateNewAccount_FromAddressBook",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11781,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122385,
        "StepNumber": 8,
        "Description": "Verify_CreateAccountPage",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12597,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122376,
        "StepNumber": 9,
        "Description": "Enter Middle name",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'MiddleInitial-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "DT_MiddleName",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122377,
        "StepNumber": 10,
        "Description": "EnterSuffix",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_Suffix",
        "CustomActionId": 11783,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122353,
        "StepNumber": 11,
        "Description": "selectGender",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_Drivers_Gender",
        "CustomActionId": 11753,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122341,
        "StepNumber": 12,
        "Description": "EnterHomePhone",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_HomePhone",
        "CustomActionId": 11760,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122342,
        "StepNumber": 13,
        "Description": "EnterMobilePhone",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_MobilePhone",
        "CustomActionId": 11761,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122343,
        "StepNumber": 14,
        "Description": "EnterEmail",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfo_Email",
        "CustomActionId": 11762,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122344,
        "StepNumber": 15,
        "Description": "EnterHouseNumber",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_HouseNumber",
        "CustomActionId": 11763,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122345,
        "StepNumber": 16,
        "Description": "EnterStreetName",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_StreetName",
        "CustomActionId": 11764,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122355,
        "StepNumber": 17,
        "Description": "Enter Random value for House Number",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'AddressLine1-inputEl')]",
        "ActionId": 65,
        "ParameterName": null,
        "ParameterValue": "numeric:6",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122346,
        "StepNumber": 18,
        "Description": "EnterCity",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_City",
        "CustomActionId": 11765,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122347,
        "StepNumber": 19,
        "Description": "SelectState",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_State",
        "CustomActionId": 11754,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122348,
        "StepNumber": 20,
        "Description": "EnterZIPCode",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_ZipCode",
        "CustomActionId": 11766,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122371,
        "StepNumber": 21,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "2",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122372,
        "StepNumber": 22,
        "Description": "Click on Standardize Button",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'EditPolicyAddressPopup:Standardize-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122367,
        "StepNumber": 23,
        "Description": "Enter Organization",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'Producer-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "The Auto Club Group",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 10,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122349,
        "StepNumber": 24,
        "Description": "EnterSSN",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_SSN",
        "CustomActionId": 11767,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122366,
        "StepNumber": 25,
        "Description": "SelectProducer",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_ProducerCode",
        "CustomActionId": 12604,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122350,
        "StepNumber": 26,
        "Description": "ClickOnStandardizeBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11768,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122382,
        "StepNumber": 27,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122362,
        "StepNumber": 28,
        "Description": "Verify_StandardizeAddrPage",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12599,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122356,
        "StepNumber": 29,
        "Description": "Click if Select button is available ",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(text(),'Select')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122364,
        "StepNumber": 30,
        "Description": "StandardizeAddress_New",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12602,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122360,
        "StepNumber": 31,
        "Description": "Verify is Standardize city grid displayed",
        "LocatorTypeId": 7,
        "Locator": "//span[@id='AddressStandardize_AcgPopup:1']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122354,
        "StepNumber": 32,
        "Description": "VerifyStandardizeCityGridIsDisplayed",
        "LocatorTypeId": 7,
        "Locator": "//span[@id='AddressStandardize_AcgPopup:1']",
        "ActionId": 28,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122357,
        "StepNumber": 33,
        "Description": "Select if standadised addressed are available",
        "LocatorTypeId": 7,
        "Locator": "(//a[contains(text(),'Select')])[2]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122365,
        "StepNumber": 34,
        "Description": "StandardizeCity",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_City",
        "CustomActionId": 11774,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122375,
        "StepNumber": 35,
        "Description": "Select the Standard Address",
        "LocatorTypeId": 7,
        "Locator": "(//a[contains(text(),'Select')])[3]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122378,
        "StepNumber": 36,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122369,
        "StepNumber": 37,
        "Description": "VerifyMSGForInvalidAddr",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11776,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122383,
        "StepNumber": 38,
        "Description": "Check if Override button is available",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'AddressStandardize_AcgPopup:override-btnInnerEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122384,
        "StepNumber": 39,
        "Description": "Click Override Button",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'AddressStandardize_AcgPopup:override-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122373,
        "StepNumber": 40,
        "Description": "Verify POPUP",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(text(),'OK')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122374,
        "StepNumber": 41,
        "Description": "Click OK",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(text(),'OK')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122379,
        "StepNumber": 42,
        "Description": "Check if Override button is available",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'AddressStandardize_AcgPopup:override-btnInnerEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122380,
        "StepNumber": 43,
        "Description": "Click Override Button",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'AddressStandardize_AcgPopup:override-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122381,
        "StepNumber": 44,
        "Description": "Verify_CreateAccountPage",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12597,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122358,
        "StepNumber": 45,
        "Description": "Verify is Census Track is empty",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'censustract-inputEl') or contains(@id,'censustractnew-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122359,
        "StepNumber": 46,
        "Description": "Enter Census Track Number",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'censustract-inputEl') or contains(@id,'censustractnew-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "DT_CensusTrack",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122368,
        "StepNumber": 47,
        "Description": "SelectOrgNameAndProducerCode",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "The Auto Club Group AND 70296176",
        "CustomActionId": 11775,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122351,
        "StepNumber": 48,
        "Description": "ClickOnUpdateBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11771,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122363,
        "StepNumber": 49,
        "Description": "Verify_AccFileSummaryScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12600,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122352,
        "StepNumber": 50,
        "Description": "GetAccountNumber",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11773,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "EnterAccInformation",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12598,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException; \r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType; \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\n//import java.time.Duration;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Verify_EnterAccountInformationPage extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n            \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            WebDriverWait wait = new WebDriverWait(driver,20);\r\n            //WebDriverWait wait    = new WebDriverWait(driver, Duration.ofSeconds(10));\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act           = new Actions(driver);\r\n            String selectText     = Keys.chord(Keys.CONTROL,\"a\");\r\n            \r\n            for(int retry=0; retry<=1;retry++){\r\n                    try{\r\n                        WebElement pageTitleEle = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'NewAccountScreen:ttlBar')]\"))));;\r\n                        String actPageTitle = pageTitleEle.getText();\r\n                        if(actPageTitle.equals(\"Enter Account Information\")){\r\n                        \r\n                            try \r\n                            {   \r\n                            String dateOfBirth = \"01/01/1990\";\r\n                            WebElement DateOfBirthtxtField = driver.findElement(By.xpath(\"//input[contains(@id,'DateOfBirth-inputEl')]\"));      \r\n                            DateOfBirthtxtField.sendKeys(Keys.chord(Keys.CONTROL,\"a\"),dateOfBirth);\r\n                            actionResult.status = true;\r\n                            actionResult.comments =  \"The Date Of Birth is enter as :\"+dateOfBirth;\r\n \r\n                            }\r\n    \r\n                                catch(Exception ex) {\r\n                                    actionResult.comments =ex.getMessage();\r\n                                    actionResult.status = true;\r\n                            }\r\n                                \r\n                                actionResult.status = true;\r\n                                actionResult.comments =  \"Naviagted to 'Enter Account Information' screen successfully\";\r\n                                \r\n                        }\r\n\r\n                    }\r\n                    catch(Exception e) {\r\n                        actionResult.comments =\"Max No. of Attepts reached : \" +retry + \" Expection Type : \" + e.getMessage();\r\n                        actionResult.status = false;\r\n                    }\r\n                }\r\n\r\n            \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Naviagted to 'Enter Account Information' screen successfully\";\r\n        \r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n\r\n    }\r\n\r\n\r\n\r\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Verify_EnterAccountInformationPage",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10113,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//input[contains(@id,'FirstName-inputEl')]",
    "PageId": 1178,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Enter First Name",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1178,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Enter Account Information",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10114,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//input[contains(@id,'LastName-inputEl')]",
    "PageId": 1178,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Enter Account InformationEnter Account InformationSCREENEnter Account InformationFORMLast name\tTEXTBOX",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10115,
    "ProjectId": 99,
    "LocatorType": 3,
    "Locator": "NewAccount:NewAccountScreen:NewAccountSearchDV:SearchAndResetInputSet:SearchLinksInputSet:Search",
    "PageId": 1178,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Enter Account InformationEnter Account InformationSCREENSearchBUTTON",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11758,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n//import java.time.Duration;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SelectPersonFromCreateNewAccountDropdown extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {   \r\n        driver.manage().timeouts().implicitlyWait(40, TimeUnit.SECONDS);\r\n        WebDriverWait wait    = new WebDriverWait(driver,20);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        Actions act           = new Actions(driver);\r\n        Thread.sleep(5000);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"(//a[contains(@id,'NewAccountButton')])[1]\"))));\r\n\r\n        WebElement CreateNewAccoutTabElement = driver.findElement(By.xpath(\"(//a[contains(@id,'NewAccountButton')])[1]\"));\r\n\r\n        act.moveToElement(CreateNewAccoutTabElement).moveByOffset(40,0).click().build().perform();\r\n\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[contains(@id,'NewAccount_Person-textEl')]\")));\r\n\r\n        //NewAccount:NewAccountScreen:NewAccountButton:NewAccount_Person-textEl\r\n\r\n        WebElement personElement = driver.findElement(By.xpath(\"//span[contains(@id,'NewAccount_Person-textEl')]\"));\r\n\r\n        //js.executeScript(\"arguments[0].click()\",CreateNewAccoutTabElement);\r\n        //Thread.sleep(1000);\r\n        //js.executeScript(\"arguments[0].click()\",personElement);\r\n        //CreateNewAccoutTabElement= driver.findElement(By.xpath(\"(//a[contains(@id,'NewAccountButton')])[1]\"));\r\n        //personElement= driver.findElement(By.xpath(\"//span[contains(@id,'NewAccount_Person-textEl')]\"));\r\n\r\n        act.moveToElement(personElement).moveByOffset(35,0).click().build().perform();\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"The 'Person' option has been selected from the Creat Account Dropdown\";\r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectPersonFromCreateNewAccountDropdown",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11781,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class CreateNewAccount_FromAddressBook extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\tdriver.manage().timeouts().implicitlyWait(40, TimeUnit.SECONDS);\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tActions act = new Actions(driver);\n\t\tThread.sleep(5000);\n\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"(//a[contains(@id,'NewAccountButton')])[1]\"))));\n\t\tWebElement CreateNewAccoutTabElement = driver.findElement(By.xpath(\"(//a[contains(@id,'NewAccountButton')])[1]\"));\n\t\tact.moveToElement(CreateNewAccoutTabElement).moveByOffset(40,0).click().build().perform();\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[contains(@id,'NewAccount_FromAB-textEl')]\")));\n\t\tWebElement personElement = driver.findElement(By.xpath(\"//span[contains(@id,'NewAccount_FromAB-textEl')]\"));\n\t\tact.moveToElement(personElement).moveByOffset(35,0).click().build().perform();\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"The 'From Address Book' option has been selected from the Create Account Dropdown\";\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CreateNewAccount_FromAddressBook",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12597,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver; \r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n//import java.time.Duration;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Verify_CreateAccountPage extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++)\r\n    {\r\n    try\r\n    {\r\n        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\r\n\r\n        WebDriverWait wait = new WebDriverWait(driver, 20);\r\n             wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'Cancel-btnWrap')]\"))));\r\n        \r\n\r\n        WebElement pageTitleEle=driver.findElement(By.xpath(\"//span[contains(@id,'CreateAccountScreen:ttlBar')]\"));\r\n        \r\n        //WebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'CreateAccountScreen:ttlBar')]\"));\r\n        String actPageTitle = pageTitleEle.getText();\r\n        if(actPageTitle.equals(\"Create account\")){\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Naviagted to 'Create account' screen successfully\";\r\n        }\r\n    \r\n\r\n    break;\r\n    }\r\ncatch(Exception e) {\r\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\nactionResult.status = false;\r\n    }\r\n}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Verify_CreateAccountPage",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11783,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException; \r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType; \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.time.Duration;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterSuffix extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n            \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            WebDriverWait wait = new WebDriverWait(driver,20);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act = new Actions(driver);\r\n            String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n            \r\n            for(int retry=0; retry<=2;retry++){\r\n                    try{\r\n                    wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'Suffix-inputEl')]\"))));\r\n                    WebElement suffixEle = driver.findElement(By.xpath(\"//input[contains(@id,'Suffix-inputEl')]\"));\r\n                    js.executeScript(\"arguments[0].click();\",suffixEle);\r\n                    suffixEle.sendKeys(selectText);\r\n                    act.moveToElement(suffixEle).sendKeys(Keys.DELETE).build().perform();\r\n                    //Thread.sleep(1000);\r\n                    js.executeScript(\"arguments[0].value='\"+inputValue+\"'\",suffixEle);\r\n                    //Thread.sleep(2000);\r\n                    act.moveToElement(suffixEle).sendKeys(Keys.TAB).build().perform();\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                        actionResult.comments =\"Max No. of Attepts reached : \" +retry + \" Expection Type : \" + e.getMessage();\r\n                        actionResult.status = false;\r\n                    }\r\n                }\r\n\r\n            \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Suffix has been selected as :\"+inputValue;\r\n        \r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n\r\n    }\r\n\r\n\r\n\r\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterSuffix",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11753,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException; \r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType; \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\n//import java.time.Duration;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class selectGender extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n            \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            WebDriverWait wait    = new WebDriverWait(driver, 20);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act           = new Actions(driver);\r\n            String selectText     = Keys.chord(Keys.CONTROL,\"a\");\r\n            \r\n            for(int retry=0; retry<=2;retry++){\r\n                    try{\r\n                    wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'GlobalPersonNameInputSet:Gender-inputEl')]\"))));\r\n                    WebElement genderEle = driver.findElement(By.xpath(\"//input[contains(@id,'GlobalPersonNameInputSet:Gender-inputEl')]\"));\r\n                    js.executeScript(\"arguments[0].click();\",genderEle);\r\n                    genderEle.sendKeys(selectText);\r\n                    act.moveToElement(genderEle).sendKeys(Keys.DELETE).build().perform();\r\n                    //Thread.sleep(1000);\r\n                    js.executeScript(\"arguments[0].value='\"+inputValue+\"'\",genderEle);\r\n                    //Thread.sleep(2000);\r\n                    act.moveToElement(genderEle).sendKeys(Keys.TAB).build().perform();\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                        actionResult.comments =\"Max No. of Attepts reached : \" +retry + \" Expection Type : \" + e.getMessage();\r\n                        actionResult.status = false;\r\n                    }\r\n                }\r\n\r\n            \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Gender has been selected as :\"+inputValue;\r\n        \r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n\r\n    }\r\n\r\n\r\n\r\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "selectGender",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11760,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException; \r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType; \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\n//import java.time.Duration;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterHomePhone extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n            \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            WebDriverWait wait    = new WebDriverWait(driver, 20);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act           = new Actions(driver);\r\n            String selectText     = Keys.chord(Keys.CONTROL,\"a\");\r\n            \r\n            for(int retry=0; retry<=2;retry++){\r\n                    try{\r\n                        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'HomePhone')]\"))));\r\n                        WebElement homePhoneEle = driver.findElement(By.xpath(\"//input[contains(@id,'HomePhone')]\"));\r\n                        js.executeScript(\"arguments[0].style.border='2px solid red'\", homePhoneEle);\r\n                        //Thread.sleep(1000);\r\n                        js.executeScript(\"arguments[0].click();\",homePhoneEle);\r\n                        js.executeScript(\"arguments[0].value='\"+inputValue+\"'\",homePhoneEle);\r\n                        //Thread.sleep(1000);\r\n                        act.moveToElement(homePhoneEle).sendKeys(Keys.TAB).build().perform();\r\n                        break;\r\n                    }\r\n                    catch(Exception e) {\r\n                        actionResult.comments =\"Max No. of Attepts reached : \" +retry + \" Expection Type : \" + e.getMessage();\r\n                        actionResult.status = false;\r\n                    }\r\n                }\r\n\r\n            \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Home Phone Number entered as :\"+inputValue;\r\n        \r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n\r\n    }\r\n\r\n\r\n\r\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterHomePhone",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11761,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException; \r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType; \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\n//import java.time.Duration;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterMobilePhone extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n            \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            WebDriverWait wait    = new WebDriverWait(driver, 20);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act           = new Actions(driver);\r\n            String selectText     = Keys.chord(Keys.CONTROL,\"a\");\r\n            \r\n            for(int retry=0; retry<=2;retry++){\r\n                    try{\r\n                        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'CellPhone')]\"))));\r\n                        WebElement MobPhoneEle = driver.findElement(By.xpath(\"//input[contains(@id,'CellPhone')]\"));\r\n                        js.executeScript(\"arguments[0].style.border='2px solid red'\", MobPhoneEle);\r\n                        //Thread.sleep(1000);\r\n                        js.executeScript(\"arguments[0].click();\",MobPhoneEle);\r\n                        js.executeScript(\"arguments[0].value='\"+inputValue+\"'\",MobPhoneEle);\r\n                        //Thread.sleep(1000);\r\n                        act.moveToElement(MobPhoneEle).sendKeys(Keys.TAB).build().perform();\r\n                        break;\r\n                    }\r\n                    catch(Exception e) {\r\n                        actionResult.comments =\"Max No. of Attepts reached : \" +retry + \" Expection Type : \" + e.getMessage();\r\n                        actionResult.status = false;\r\n                    }\r\n                }\r\n\r\n            \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Home Phone Number entered as :\"+inputValue;\r\n        \r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n\r\n    }\r\n\r\n\r\n\r\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterMobilePhone",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11762,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException; \r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType; \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\n//import java.time.Duration;\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterEmail extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n            \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            WebDriverWait wait    = new WebDriverWait(driver, 20);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act           = new Actions(driver);\r\n            String selectText     = Keys.chord(Keys.CONTROL,\"a\");\r\n            \r\n            for(int retry=0; retry<=2;retry++){\r\n                    try{\r\n                        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'EmailAddress1-inputEl')]\"))));\r\n                        WebElement emailEle = driver.findElement(By.xpath(\"//input[contains(@id,'EmailAddress1-inputEl')]\"));\r\n                        js.executeScript(\"arguments[0].style.border='2px solid red'\", emailEle);\r\n                        //Thread.sleep(1000);\r\n                        js.executeScript(\"arguments[0].click();\",emailEle);\r\n                        js.executeScript(\"arguments[0].value='\"+inputValue+\"'\",emailEle);\r\n                        //Thread.sleep(1000);\r\n                        act.moveToElement(emailEle).sendKeys(Keys.TAB).build().perform();\r\n                        break;\r\n                    }\r\n                    catch(Exception e) {\r\n                        actionResult.comments =\"Max No. of Attepts reached : \" +retry + \" Expection Type : \" + e.getMessage();\r\n                        actionResult.status = false;\r\n                    }\r\n                }\r\n\r\n            \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Home Phone Number entered as :\"+inputValue;\r\n        \r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n\r\n    }\r\n\r\n\r\n\r\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterEmail",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11763,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n//import java.time.Duration;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterHouseNumber extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n            WebDriverWait wait = new WebDriverWait(driver, 20);\r\n        WebElement houseNumEle;\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'AddressLine1-inputEl')]\")));\r\n        houseNumEle = driver.findElement(By.xpath(\"//input[contains(@id,'AddressLine1-inputEl')]\"));\r\n        wait.until(ExpectedConditions.elementToBeClickable(houseNumEle));\r\n        houseNumEle.click();\r\n        houseNumEle.sendKeys(inputValue);\r\n        Keys.chord(Keys.TAB);\r\n  \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"House Number entered as:\"+inputValue;\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterHouseNumber",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11764,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n//import java.time.Duration;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterStreetName extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n            WebDriverWait wait = new WebDriverWait(driver, 20);\r\n            WebElement streetNameEle;\r\n            streetNameEle=driver.findElement(By.xpath(\"//input[contains(@id,'AddressLine2-inputEl')]\"));\r\n            wait.until(ExpectedConditions.elementToBeClickable(streetNameEle));\r\n            streetNameEle.click();\r\n            streetNameEle.sendKeys(inputValue);\r\n            Keys.chord(Keys.TAB);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Street Name entered as:\"+inputValue;\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterStreetName",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11765,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n//import java.time.Duration;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterCity extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n            WebDriverWait wait = new WebDriverWait(driver, 20);\r\n    \r\n            WebElement cityEle=driver.findElement(By.xpath(\"//input[contains(@id,'City-inputEl')]\"));\r\n            wait.until(ExpectedConditions.elementToBeClickable(cityEle));\r\n            cityEle.click();\r\n            cityEle.sendKeys(inputValue);\r\n            Keys.chord(Keys.TAB);\r\n            Thread.sleep(750);\r\n            WebElement houseNumEle;\r\n            houseNumEle=driver.findElement(By.xpath(\"//input[contains(@id,'AddressLine1-inputEl')]\"));\r\n            houseNumEle.click();\r\n            Thread.sleep(1750);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"City Name entered as:\"+inputValue;\r\n \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterCity",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11754,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SelectState extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tActions act = new Actions(driver);\n\n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\t\t\n\t\tWebElement state=driver.findElement(By.xpath(\"//input[contains(@id,'State-inputEl')]\"));\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tstate.sendKeys(s);\n\t\tstate.sendKeys(Keys.DELETE);\n\t\tstate.sendKeys(inputValue);\n\t\tact.moveToElement(state).sendKeys(Keys.ENTER).build().perform();\n\t\tact.moveToElement(state).sendKeys(Keys.TAB).build().perform();\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";\n\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectState",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11766,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n//import java.time.Duration;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterZIPCode extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n            WebDriverWait wait = new WebDriverWait(driver,20);\r\n            WebElement zipCodeEle;\r\n            zipCodeEle=driver.findElement(By.xpath(\"//input[contains(@id,'PostalCode-inputEl')]\"));\r\n            wait.until(ExpectedConditions.elementToBeClickable(zipCodeEle));\r\n            zipCodeEle.click();\r\n            zipCodeEle.sendKeys(inputValue);\r\n            Keys.chord(Keys.TAB);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"ZIP is entered as:\"+inputValue;\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterZIPCode",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11767,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n//import java.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterSSN extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n        WebDriverWait wait = new WebDriverWait(driver,20);\r\n        WebElement SSNEle;\r\n        SSNEle=driver.findElement(By.xpath(\"//input[contains(@id,'OfficialIDDV_Input-inputEl')]\"));\r\n        wait.until(ExpectedConditions.elementToBeClickable(SSNEle));\r\n        SSNEle.click();\r\n        SSNEle.sendKeys(inputValue);\r\n        Keys.chord(Keys.TAB);\r\n        \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"SSN is entered as:\"+inputValue;\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterSSN",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12604,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.StaleElementReferenceException;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SelectProducer extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\t\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\t\tdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS); \n       \tWebDriverWait wait=new WebDriverWait(driver,15);\n\t\tWebElement producer= wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'ProducerCode-inputEl')]\"))));\n\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tproducer.sendKeys(s);\n\t\tproducer.sendKeys(Keys.DELETE);\n\n\t\tActions act = new Actions(driver);\n\t\tact.sendKeys(producer,inputValue).build().perform();\n        Thread.sleep(2000);\n\t\tproducer.sendKeys(Keys.TAB);\n\n      \tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";  \n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectProducer",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11768,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.*;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.util.*;\r\n//import java.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ClickOnStandardizeBtn extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\r\n        WebDriverWait wait = new WebDriverWait(driver,10);\r\n        \r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        WebElement standardizeBtnEle;\r\n        standardizeBtnEle = driver.findElement(By.xpath(\"//a[contains(@id,'CreateAccountScreen:Standardize')]\"));\r\n        wait.until(ExpectedConditions.elementToBeClickable(standardizeBtnEle));\r\n\r\n        //Wait<WebDriver> fluentWaiit = new FluentWait<WebDriver>(driver).withTimeout(3000, TimeUnit.MILLISECONDS).pollingEvery(100, TimeUnit.MILLISECONDS).ignoring(Exception.class);\r\n        //WebElement standardizeBtnEle= fluentWaiit.until(new Function<WebDriver, WebElement>() {\r\n            // public WebElement apply(WebDriver driver) {\r\n                // TODO Auto-generated method stub\r\n                // return driver.findElement(By.xpath(\"//a[contains(@id,'CreateAccountScreen:Standardize')]\"));\r\n            // }           \r\n        //});\r\n\r\n        js.executeScript(\"arguments[0].click()\",standardizeBtnEle);\r\n        actionResult.status = true;\r\n        actionResult.comments =  \"Clicked on 'Standardize' button\";\r\n \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnStandardizeBtn",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12599,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n//import java.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Verify_StandardizeAddrPage extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++)\r\n    {\r\n    try\r\n    {   \r\n        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\r\n        WebDriverWait wait = new WebDriverWait(driver,20);\r\n        Thread.sleep(7000);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[@id='AddressStandardize_AcgPopup:override-btnInnerEl']\"))));\r\n        \r\n\r\n        WebElement pageTitleEle =driver.findElement(By.xpath(\"//span[contains(@id,'AddressStandardize_AcgPopup:ttlBar')]\"));\r\n        String actPageTitle = pageTitleEle.getText();\r\n        if(actPageTitle.equals(\"Select a Standardized Address\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Naviagted to 'Standardized Address' screen successfully\";\r\n        }\r\n\r\nbreak;\r\n  }\r\ncatch(Exception e) {\r\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\nactionResult.status = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Verify_StandardizeAddrPage",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12602,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class StandardizeAddress_New extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\t\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tWebElement selectstandardizAddreBtnEle;\n\t\t\n\t\tselectstandardizAddreBtnEle=driver.findElement(By.xpath(\"//a[text()='Select']\"));\n\t\t\n\t\twait.until(ExpectedConditions.elementToBeClickable(selectstandardizAddreBtnEle));\n\t\tjs.executeScript(\"arguments[0].click()\",selectstandardizAddreBtnEle);\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments =  \"The Address has been Standardized successfully\";\n\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "StandardizeAddress_New",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11774,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class StandardizeCity extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\t\t\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tWebElement SelectStandardizeCityBtnEle;\n\t\tWebElement overrideBtnEle;\n\t\tThread.sleep(10000);\n\t\t//selectstandardizAddreBtnEle=driver.findElement(By.xpath(\"//div[contains(text(),'\"+inputValue+\"')]/parent::td/preceding-sibling::td/div/a\"));\n\t\t//SelectStandardizeCityBtnEle=driver.findElement(By.xpath(\"(//div[contains(text(),'\"+inputValue+\"')]/parent::td/preceding-sibling::td/div/a)[2]\"));\n\t\t//overrideBtnEle=driver.findElement(By.xpath(\"//a[contains(@id,'AcgPopup:override')]\"));\n\n\t\tif(driver.findElement(By.xpath(\"(//div[contains(text(),'\"+inputValue+\"')]/parent::td/preceding-sibling::td/div/a)[2]\")).isDisplayed()){\n\t\t\tSystem.out.println(\"City is existed\");\n\t\t\tSelectStandardizeCityBtnEle=driver.findElement(By.xpath(\"(//div[contains(text(),'\"+inputValue+\"')]/parent::td/preceding-sibling::td/div/a)[2]\"));\n\n\t\t\tjs.executeScript(\"arguments[0].click()\",SelectStandardizeCityBtnEle);\n\t\t\n\t\t}else{\n\t\t\n\t\tSystem.out.println(\"City Standardization is not required\");\n\t\t\n\t\t}\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"The Address and City have been Standardized successfully\";\n\n\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = true;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "StandardizeCity",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11776,
    "Description": "Verifying the 'Unable to standardize address' message when enter the Invalid Addr details.",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\n\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyMSGForInvalidAddr extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\ttry{\n\t\t\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tActions act = new Actions(driver);\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//label[@id='AddressStandardize_AcgPopup:0']\"))));\n\t\t\tWebElement InvalidAddrMsgEle = driver.findElement(By.xpath(\"//label[@id='AddressStandardize_AcgPopup:0']\"));\n\t\t\t\n\t\t\tString actMsg = InvalidAddrMsgEle.getText();\n\t\t\tSystem.out.println(actMsg);\n\t\t\tif(actMsg.contains(\"Unable to standardize address.\")){\n\t\t\t\tactionResult.status = true;\n           \t\t\tactionResult.comments =  \"The Address cannot be standardized with invalid Address Details\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"The 'Select a Standardized Address' Screen not displayed\";\n\t\t\t}\n\t\t\t\n\t\t\t\n\n\n\t\t\n\t\t\n\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = true;\n        actionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyMSGForInvalidAddr",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11775,
    "Description": "Searching and selecting the required Organization Name on Create Account screen.",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\n//import java.time.Duration;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SelectOrgNameAndProducerCode extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n       for(int i =1; i<=3; i++)\r\n{\r\n    try{\r\n    \r\n        String[] orgProducerCodeParams = inputValue.split(\" AND \");\r\n        String organizationName = orgProducerCodeParams[0].toString();\r\n        String ProducerCode = orgProducerCodeParams[1].toString();\r\n        driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\r\n        WebDriverWait wait    = new WebDriverWait(driver,10);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        Actions act           = new Actions(driver);\r\n        String selectText     = Keys.chord(Keys.CONTROL,\"a\");\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(@id,'Producer:SelectOrganization')]\"))));\r\n            WebElement searchOrgEle = driver.findElement(By.xpath(\"//div[contains(@id,'Producer:SelectOrganization')]\"));\r\n            js.executeScript(\"arguments[0].click();\",searchOrgEle);\r\n            Thread.sleep(2000);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'OrganizationSearchPopupScreen:ttlBar')]\"))));\r\n            WebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'OrganizationSearchPopupScreen:ttlBar')]\"));\r\n            String actPageTitle = pageTitleEle.getText();\r\n            if(actPageTitle.equals(\"Organizations\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"The 'Organizations' Screen has been displayed\";\r\n            }\r\n            else{\r\n                actionResult.status = false;\r\n                actionResult.comments =  \"The 'Organizations' Screen not displayed\";\r\n            }\r\n            \r\n            WebElement OrgTxtEle = driver.findElement(By.xpath(\"//input[contains(@id,'OrganizationSearchDV:GlobalContactNameInputSet:Name-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", OrgTxtEle);\r\n            js.executeScript(\"arguments[0].click();\",OrgTxtEle);\r\n            Thread.sleep(1000);\r\n            //OrgTxtEle.sendKeys(organizationName);\r\n            //act.sendKeys(OrgTxtEle, organizationName).perform();\r\n            js.executeScript(\"arguments[0].value='\"+organizationName+\"'\",OrgTxtEle);\r\n            WebElement searchBtnEle = driver.findElement(By.xpath(\"//a[contains(@id,'SearchLinksInputSet:Search')]\"));\r\n            js.executeScript(\"arguments[0].click();\",searchBtnEle);\r\n            Thread.sleep(2000);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//a[contains(@id,'OrganizationSearchResultsLV:0:_Select')]\"))));\r\n            WebElement selectOrgBtnEle = driver.findElement(By.xpath(\"//a[contains(@id,'OrganizationSearchResultsLV:0:_Select')]\"));\r\n            js.executeScript(\"arguments[0].click();\",selectOrgBtnEle);\r\n            Thread.sleep(2000);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'Screen:ttlBar')]\"))));\r\n            WebElement pageTitleEle1 = driver.findElement(By.xpath(\"//span[contains(@id,'Screen:ttlBar')]\"));\r\n            String actPageTitle1 = pageTitleEle1.getText();\r\n            if(actPageTitle1.equals(\"Create account\") || actPageTitle1.equals(\"New Submissions\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"The 'Create account' Screen has been displayed\";\r\n            }\r\n            else{\r\n                actionResult.status = false;\r\n                actionResult.comments =  \"The 'Create account' Screen not displayed\";\r\n            }\r\n            \r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'ProducerCode-inputEl')]\"))));\r\n            WebElement producerCodeEle = driver.findElement(By.xpath(\"//input[contains(@id,'ProducerCode-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].click();\",producerCodeEle);\r\n            producerCodeEle.sendKeys(selectText);\r\n            Thread.sleep(2000);\r\n            producerCodeEle.sendKeys(Keys.DELETE);\r\n            Thread.sleep(2000);\r\n            if(ProducerCode.equals(\"70264529 - Test286 Captive GA\")){\r\n            ProducerCode = \"70264529 -  Test286 Captive GA\";\r\n            }\r\n            producerCodeEle.sendKeys(ProducerCode);\r\n            producerCodeEle.sendKeys(Keys.ENTER);\r\n            Thread.sleep(2000);\r\n\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"The required 'Organization' and 'Producer Code' have been selected\";\r\n \r\n        \r\n    break;\r\n    }\r\ncatch(Exception e) {\r\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\nactionResult.status = false;\r\n}\r\n}\r\n\r\n\r\nfor(int j =1; j<=1; j++)\r\n{\r\n    try{\r\n    \r\n        String[] orgProducerCodeParams = inputValue.split(\" AND \");\r\n        String organizationName = orgProducerCodeParams[0].toString();\r\n        String ProducerCode = orgProducerCodeParams[1].toString();\r\n        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\r\n        WebDriverWait wait    = new WebDriverWait(driver,10);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        Actions act           = new Actions(driver);\r\n        String selectText     = Keys.chord(Keys.CONTROL,\"a\");\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(@id,'Producer1:SelectOrganization')]\"))));\r\n            WebElement searchOrgEle = driver.findElement(By.xpath(\"//div[contains(@id,'Producer1:SelectOrganization')]\"));\r\n            js.executeScript(\"arguments[0].click();\",searchOrgEle);\r\n            Thread.sleep(2000);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'OrganizationSearchPopupScreen:ttlBar')]\"))));\r\n            WebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'OrganizationSearchPopupScreen:ttlBar')]\"));\r\n            String actPageTitle = pageTitleEle.getText();\r\n            if(actPageTitle.equals(\"Organizations\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"The 'Organizations' Screen has been displayed\";\r\n            }\r\n            else{\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"The 'Organizations' Screen not displayed\";\r\n            }\r\n            \r\n            WebElement OrgTxtEle = driver.findElement(By.xpath(\"//input[contains(@id,'OrganizationSearchDV:GlobalContactNameInputSet:Name-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].click();\",OrgTxtEle);\r\n            OrgTxtEle.sendKeys(organizationName);\r\n            \r\n            WebElement searchBtnEle = driver.findElement(By.xpath(\"//a[contains(@id,'SearchLinksInputSet:Search')]\"));\r\n            js.executeScript(\"arguments[0].click();\",searchBtnEle);\r\n            Thread.sleep(2000);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//a[contains(@id,'OrganizationSearchResultsLV:0:_Select')]\"))));\r\n            WebElement selectOrgBtnEle = driver.findElement(By.xpath(\"//a[contains(@id,'OrganizationSearchResultsLV:0:_Select')]\"));\r\n            js.executeScript(\"arguments[0].click();\",selectOrgBtnEle);\r\n            Thread.sleep(2000);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'Screen:ttlBar')]\"))));\r\n            WebElement pageTitleEle1 = driver.findElement(By.xpath(\"//span[contains(@id,'Screen:ttlBar')]\"));\r\n            String actPageTitle1 = pageTitleEle1.getText();\r\n            if(actPageTitle1.equals(\"Create account\") || actPageTitle1.equals(\"New Submissions\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"The 'Create account' Screen has been displayed\";\r\n            }\r\n            else{\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"The 'Create account' Screen not displayed\";\r\n            }\r\n            \r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'ProducerCode4-inputEl')]\"))));\r\n            WebElement producerCodeEle = driver.findElement(By.xpath(\"//input[contains(@id,'ProducerCode4-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].click();\",producerCodeEle);\r\n            producerCodeEle.sendKeys(selectText);\r\n            Thread.sleep(1000);\r\n            producerCodeEle.sendKeys(Keys.DELETE);\r\n            Thread.sleep(500);\r\n            producerCodeEle.sendKeys(ProducerCode);\r\n            producerCodeEle.sendKeys(Keys.ENTER);\r\n            Thread.sleep(1000);\r\n\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"The required 'Organization' and 'Producer Code' have been selected\";\r\n \r\n        \r\n    break;\r\n    }\r\ncatch(Exception e) {\r\nactionResult.comments =\"Max No. of Attepts reached : \" +j + \" Expection Type : \" + e.getMessage();\r\nactionResult.status = true;\r\n}\r\n}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectOrgNameAndProducerCode",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11771,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n//import java.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ClickOnUpdateBtn extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {   \r\n        \r\n         WebDriverWait wait = new WebDriverWait(driver,20);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(\"//a[contains(@id,'CreateAccountScreen:Update')]\")));\r\n        WebElement updateBtnEle=driver.findElement(By.xpath(\"//a[contains(@id,'CreateAccountScreen:Update')]\"));\r\n        js.executeScript(\"arguments[0].scrollIntoView();\", updateBtnEle);\r\n        js.executeScript(\"arguments[0].click()\",updateBtnEle);\r\n        actionResult.status = true;\r\n        actionResult.comments =  \"Click on 'Update' button successful\";\r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnUpdateBtn",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12600,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n//import java.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Verify_AccFileSummaryScreen extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        for(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {\r\n        driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n        Thread.sleep(2000);\r\n        WebDriverWait wait      = new WebDriverWait(driver,45);\r\n        WebElement pageTitleEle = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'AccountFile_SummaryScreen:ttlBar')]\"))));\r\n        String actPageTitle     = pageTitleEle.getText();\r\n        if(actPageTitle.contains(\"Account File Summary\")){\r\n        actionResult.status = true;\r\n        actionResult.comments =  \"Naviagted to 'Account File Summary' screen successfully\";\r\n        }\r\n    \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = true;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Verify_AccFileSummaryScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11773,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n//import java.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class GetAccountNumber extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    \r\nfor(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n            WebDriverWait wait = new WebDriverWait(driver,20);\r\n            WebElement accountNumEle;\r\n            accountNumEle=driver.findElement(By.xpath(\"//div[contains(@id,'AccountNumber-inputEl')]\"));\r\n            wait.until(ExpectedConditions.visibilityOf(accountNumEle));\r\n            String accountNumber = accountNumEle.getText();\r\n            actionResult.SaveParameterValue(\"DT_AccountNumber\", accountNumber);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Account Number : \"+accountNumber+\" has been created successfully\";\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetAccountNumber",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9401,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127858,
        "StepNumber": 1,
        "Description": "My ActivitiesMy ActivitiesSCREENPolicy CenterMENUBAR",
        "LocatorTypeId": 3,
        "Locator": "Desktop:MenuLinks:Desktop_DesktopActivities",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 9925,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127859,
        "StepNumber": 2,
        "Description": "My ActivitiesMy ActivitiesSCREENPolicy CenterMENUBARPolicyMENU",
        "LocatorTypeId": 7,
        "Locator": "//span[@id='TabBar:PolicyTab-btnIconEl']",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 9926,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127861,
        "StepNumber": 3,
        "Description": "PC_PolicyTab_NewSubmission_Click",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11579,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127860,
        "StepNumber": 4,
        "Description": "My ActivitiesMy ActivitiesSCREENPolicy CenterMENUBARPolicyMENUNew SubmissionCLICKCHOICE",
        "LocatorTypeId": 3,
        "Locator": "TabBar:PolicyTab:PolicyTab_NewSubmission-textEl",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 9927,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Policy_Menu",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9925,
    "ProjectId": 99,
    "LocatorType": 3,
    "Locator": "Desktop:MenuLinks:Desktop_DesktopActivities",
    "PageId": 1144,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "My ActivitiesMy ActivitiesSCREENPolicy CenterMENUBAR",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1144,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "My Activities",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9926,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//span[@id='TabBar:PolicyTab-btnIconEl']",
    "PageId": 1144,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "My ActivitiesMy ActivitiesSCREENPolicy CenterMENUBARPolicyMENU",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11579,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class PC_PolicyTab_NewSubmission_Click extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           \r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n   \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n                WebElement policyTabElement;\r\n            WebElement policyTabNewSubmissionElement;\r\n            WebDriverWait wait = new WebDriverWait(driver,40);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[@id='TabBar:PolicyTab-btnInnerEl']\"))));\r\n            \r\n            policyTabElement= driver.findElement(By.xpath(\"//span[@id='TabBar:PolicyTab-btnInnerEl']\"));\r\n            Actions act = new Actions(driver);\r\n            act.moveToElement(policyTabElement).moveByOffset(40,0).click().build().perform();\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[@id='TabBar:PolicyTab:PolicyTab_NewSubmission-textEl']\"))));\r\n            \r\n            policyTabNewSubmissionElement= driver.findElement(By.xpath(\"//span[@id='TabBar:PolicyTab:PolicyTab_NewSubmission-textEl']\"));\r\n            act.moveToElement(policyTabNewSubmissionElement).moveByOffset(40,0).click().build().perform();\r\n\r\n            actionResult.status = true;\r\n            actionResult.comments = \"Executed Successfully\"; \r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }          \r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PC_PolicyTab_NewSubmission_Click",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9927,
    "ProjectId": 99,
    "LocatorType": 3,
    "Locator": "TabBar:PolicyTab:PolicyTab_NewSubmission-textEl",
    "PageId": 1144,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "My ActivitiesMy ActivitiesSCREENPolicy CenterMENUBARPolicyMENUNew SubmissionCLICKCHOICE",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9442,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 128297,
        "StepNumber": 1,
        "Description": "VerifyNewSubmissionScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12082,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128293,
        "StepNumber": 2,
        "Description": "Enter Account Number",
        "LocatorTypeId": 3,
        "Locator": "NewSubmission:NewSubmissionScreen:SelectAccountAndProducerDV:Account-inputEl",
        "ActionId": 43,
        "ParameterName": "P_3_Account_Number",
        "ParameterValue": "DT_Start_Policy_Account_Number",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128294,
        "StepNumber": 3,
        "Description": "Click on Organisation",
        "LocatorTypeId": 3,
        "Locator": "NewSubmission:NewSubmissionScreen:SelectAccountAndProducerDV:ProducerSelectionInputSet:Producer-inputEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128290,
        "StepNumber": 4,
        "Description": "SelectOrgNameAndProducerCode",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_OrgNameAndProdCode",
        "CustomActionId": 11775,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128285,
        "StepNumber": 5,
        "Description": "SelectProducer",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_OrgNameAndProdCode",
        "CustomActionId": 12604,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128295,
        "StepNumber": 6,
        "Description": "EffectiveDateFromSystem",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12080,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128274,
        "StepNumber": 7,
        "Description": "EffectiveDate_FutureDatedWith30days",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12087,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128275,
        "StepNumber": 8,
        "Description": "YesOrNoHouseholdMembersEmployed",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": 13869,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128281,
        "StepNumber": 9,
        "Description": "Clear Effective date",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'nullDate-inputEl')]",
        "ActionId": 8,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128282,
        "StepNumber": 10,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128283,
        "StepNumber": 11,
        "Description": "EffectiveDate_FutureDatedWithAdditionOf8Days",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12874,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128287,
        "StepNumber": 12,
        "Description": "EffectiveDate_BackDated",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12084,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128289,
        "StepNumber": 13,
        "Description": "Clear Effective Date",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'nullDate-inputEl')]",
        "ActionId": 8,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128276,
        "StepNumber": 14,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128279,
        "StepNumber": 15,
        "Description": "EffectiveDate_FutureDated21_Copy",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12876,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128278,
        "StepNumber": 16,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128288,
        "StepNumber": 17,
        "Description": "EffectiveDate_FutureDated",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12086,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128284,
        "StepNumber": 18,
        "Description": "Enter Effective Date",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'nullDate-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128291,
        "StepNumber": 19,
        "Description": "New SubmissionsSingle or Multiple PoliciesSingle",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,\"CreateSingle_true-inputEl\")]",
        "ActionId": 7,
        "ParameterName": "P_4_Single_or_Multiple_PoliciesSingle_oliciesSingle_RADIOBUTTONGROUP",
        "ParameterValue": "DT_StartPolicySubmission_Single_or_Multiple_PoliciesSingle_oliciesSingle_RADIOBUTTONGROUP",
        "CustomActionId": null,
        "ObjectDictionaryId": 10134,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128273,
        "StepNumber": 20,
        "Description": "Random click",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'NewSubmission:NewSubmissionScreen:ttlBar')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128277,
        "StepNumber": 21,
        "Description": "Meemic_HOME_NewSubmission",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(text(),'Select Meemic Home')]/parent::td/preceding-sibling::td/div/a",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 25,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128292,
        "StepNumber": 22,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "P_6_Wait",
        "ParameterValue": "10",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128280,
        "StepNumber": 23,
        "Description": "Click on Select Button",
        "LocatorTypeId": 7,
        "Locator": "(//a[text()='Select'])[1]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128296,
        "StepNumber": 24,
        "Description": "Click on Select Button",
        "LocatorTypeId": 7,
        "Locator": "(//a[text()='Select'])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 10,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128286,
        "StepNumber": 25,
        "Description": "Click Select Legacy",
        "LocatorTypeId": 7,
        "Locator": "(//a[text()='Select'])[3]",
        "ActionId": 9,
        "ParameterName": "OnlyForMILegacy",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "StartPolicySubmission_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12082,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyNewSubmissionScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ntry{\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'NewSubmission:NewSubmissionScreen:ttlBar')]\"))));\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'NewSubmission:NewSubmissionScreen:ttlBar')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"New Submissions\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'New Submissions' screen successfully\";\n\t\t}\n\t}\n\tcatch(Exception e){\n\t\tString exceptionMsg = e.getMessage();\n\t\tactionResult.status = false;\n           \tactionResult.comments =  \"'New Submissions' screen is not displayed\";\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyNewSubmissionScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12080,
    "Description": "To get the required effective date from system icon",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EffectiveDateFromSystem extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\nfor(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n        driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);       \r\n        WebElement defaultEffectiveDate=driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\"));\r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        String settingText=settingContents.getText();\r\n        int dateTimeIndex=settingText.indexOf(\"Date/Time:\");\r\n        String dateTime=settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        System.out.println(\"date:\"+effectiveDate);\r\n        System.setProperty(\"EffectiveDate\", effectiveDate);\r\n              \r\n                    WebDriverWait wait=new WebDriverWait(driver, 20);\r\n            wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\"))));\r\n            WebElement effectiveDateEle=driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\"));\r\n            String s=Keys.chord(Keys.CONTROL,\"a\");\r\n            effectiveDateEle.sendKeys(s);\r\n            effectiveDateEle.sendKeys(Keys.DELETE);\r\n             //driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\")).clear();\r\n             Thread.sleep(2000);\r\n             effectiveDateEle.sendKeys(effectiveDate);\r\n        //driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\")).sendKeys(effectiveDate);\r\n            actionResult.SaveParameterValue(\"DT_EffectiveDate\", effectiveDate);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"effective date entered\";\r\n            \r\n              /*  Build Number and Environment   */\r\n            \r\n            int builtNum=settingText.indexOf(\"Jenkins Build #:\");\r\n        String buildNumber=settingText.substring(builtNum).substring(0,21);\r\n        //System.out.println(\"Build Number is :\"+buildNumber);\r\n        \r\n        int serveriD=settingText.indexOf(\"Server ID:\");\r\n        String serverID=settingText.substring(serveriD).substring(0);\r\n        //System.out.println(\"Server is :\"+serverID);\r\n        \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"effective date entered and Build Number is :\"+buildNumber+ \"and Server is: \"+serverID;\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EffectiveDateFromSystem",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12087,
    "Description": "Change the Effective Date prior to 30 Days.",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.Calendar;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EffectiveDate_FutureDatedWith30days extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n       for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n        driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);       \r\n        WebElement defaultEffectiveDate=driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\"));\r\n        Thread.sleep(2000);\r\n        defaultEffectiveDate.clear();\r\n        Thread.sleep(2000);\r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        String settingText=settingContents.getText();\r\n        int dateTimeIndex=settingText.indexOf(\"Date/Time:\");\r\n        String dateTime=settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        \r\n        // String[] date = effectiveDate.split(\"/\");\r\n        //   effectiveDate = date[1].toString();\r\n        //      int days = Integer.parseInt(effectiveDate);\r\n        //    int reqDays = days-8;\r\n        //    System.out.println(reqDays);\r\n        //    if(reqDays<0) {\r\n            //           reqDays = Math.abs(reqDays);\r\n            //       System.out.println(reqDays);\r\n                     \r\n        // }\r\n        //    String targetDay =  Integer.toString(reqDays);\r\n        //    targetDay = date[1].replace(effectiveDate, targetDay).toString();\r\n        //    String backDatedDate = date[0].toString()+\"/\"+targetDay+\"/\"+date[2].toString();\r\n        //    System.out.println(backDatedDate);\r\n        \r\n        //SimpleDateFormat date1=new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        Calendar c = Calendar.getInstance();\r\n        c.setTime(targetFormat.parse(effectiveDate));\r\n        c.add(Calendar.DATE, +30);  // number of days to subtract\r\n        String futureDatedDate = targetFormat.format(c.getTime());\r\n        \r\n        Thread.sleep(2000);\r\n        //driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\")).clear();\r\n        //Thread.sleep(2000);\r\n        driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\")).sendKeys(futureDatedDate);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"effective date entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EffectiveDate_FutureDatedWith30days",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13869,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesOrNoHouseholdMembersEmployed extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\nfor(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {\r\n            WebElement educatedMemberYes = driver.findElement(By.xpath(\"//input[contains(@id, 'isAnyMemEducatorInd_true-inputEl')]\"));\r\n            WebElement educatedMemberNo  = driver.findElement(By.xpath(\"//input[contains(@id, 'isAnyMemEducatorInd_false-inputEl')]\"));\r\n        JavascriptExecutor js       = (JavascriptExecutor)driver;\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            js.executeScript(\"arguments[0].click()\",educatedMemberYes);\r\n            //AAADriveYesEle.click();\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"'Household members employed in education community' has been selected as : 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            js.executeScript(\"arguments[0].click()\",educatedMemberNo);\r\n            //AAADriveNoEle.click();\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"'Household members employed in education community' has been selected as : 'No'\";\r\n        }\r\n    \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoHouseholdMembersEmployed",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12874,
    "Description": "Change the Effective Date prior to 8 Days.",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.Calendar;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EffectiveDate_FutureDatedWithAdditionOf8Days extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n       for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n        driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);       \r\n        WebElement defaultEffectiveDate=driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\"));\r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        String settingText=settingContents.getText();\r\n        int dateTimeIndex=settingText.indexOf(\"Date/Time:\");\r\n        String dateTime=settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        \r\n        // String[] date = effectiveDate.split(\"/\");\r\n        //   effectiveDate = date[1].toString();\r\n        //      int days = Integer.parseInt(effectiveDate);\r\n        //    int reqDays = days-8;\r\n        //    System.out.println(reqDays);\r\n        //    if(reqDays<0) {\r\n            //           reqDays = Math.abs(reqDays);\r\n            //       System.out.println(reqDays);\r\n                     \r\n        // }\r\n        //    String targetDay =  Integer.toString(reqDays);\r\n        //    targetDay = date[1].replace(effectiveDate, targetDay).toString();\r\n        //    String backDatedDate = date[0].toString()+\"/\"+targetDay+\"/\"+date[2].toString();\r\n        //    System.out.println(backDatedDate);\r\n        \r\n        //SimpleDateFormat date1=new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        Calendar c = Calendar.getInstance();\r\n        c.setTime(targetFormat.parse(effectiveDate));\r\n        c.add(Calendar.DATE, +8);  // number of days to subtract\r\n        String futureDatedDate = targetFormat.format(c.getTime());\r\n        \r\n        System.out.println(futureDatedDate);\r\n        actionResult.SaveParameterValue(\"DT_FutureEffectiveDate\", futureDatedDate);\r\n\r\n        \r\n        driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\")).sendKeys(futureDatedDate);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"effective date entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EffectiveDate_FutureDatedWithAdditionOf8Days",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12084,
    "Description": "Change the Effective Date prior to 7 Days.",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.Calendar;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EffectiveDate_BackDated extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n       for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n        driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);       \r\n        WebElement defaultEffectiveDate=driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\"));\r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        String settingText=settingContents.getText();\r\n        int dateTimeIndex=settingText.indexOf(\"Date/Time:\");\r\n        String dateTime=settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        \r\n        // String[] date = effectiveDate.split(\"/\");\r\n        //   effectiveDate = date[1].toString();\r\n        //      int days = Integer.parseInt(effectiveDate);\r\n        //    int reqDays = days-8;\r\n        //    System.out.println(reqDays);\r\n        //    if(reqDays<0) {\r\n            //           reqDays = Math.abs(reqDays);\r\n            //       System.out.println(reqDays);\r\n                     \r\n        // }\r\n        //    String targetDay =  Integer.toString(reqDays);\r\n        //    targetDay = date[1].replace(effectiveDate, targetDay).toString();\r\n        //    String backDatedDate = date[0].toString()+\"/\"+targetDay+\"/\"+date[2].toString();\r\n        //    System.out.println(backDatedDate);\r\n        \r\n        //SimpleDateFormat date1=new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        Calendar c = Calendar.getInstance();\r\n        c.setTime(targetFormat.parse(effectiveDate));\r\n        c.add(Calendar.DATE, -8);  // number of days to subtract\r\n        String backDatedDate = targetFormat.format(c.getTime());\r\n\r\n        \r\n        driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\")).sendKeys(backDatedDate);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"effective date entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EffectiveDate_BackDated",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12876,
    "Description": "Change the Effective Date prior to 21 Days.",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.Calendar;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EffectiveDate_FutureDated21_Copy extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n       for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n        driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);       \r\n        WebElement defaultEffectiveDate=driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\"));\r\n        Thread.sleep(2000);\r\n        defaultEffectiveDate.clear();\r\n        Thread.sleep(2000);\r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        String settingText=settingContents.getText();\r\n        int dateTimeIndex=settingText.indexOf(\"Date/Time:\");\r\n        String dateTime=settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        \r\n        // String[] date = effectiveDate.split(\"/\");\r\n        //   effectiveDate = date[1].toString();\r\n        //      int days = Integer.parseInt(effectiveDate);\r\n        //    int reqDays = days-8;\r\n        //    System.out.println(reqDays);\r\n        //    if(reqDays<0) {\r\n            //           reqDays = Math.abs(reqDays);\r\n            //       System.out.println(reqDays);\r\n                     \r\n        // }\r\n        //    String targetDay =  Integer.toString(reqDays);\r\n        //    targetDay = date[1].replace(effectiveDate, targetDay).toString();\r\n        //    String backDatedDate = date[0].toString()+\"/\"+targetDay+\"/\"+date[2].toString();\r\n        //    System.out.println(backDatedDate);\r\n        \r\n        //SimpleDateFormat date1=new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        Calendar c = Calendar.getInstance();\r\n        c.setTime(targetFormat.parse(effectiveDate));\r\n        c.add(Calendar.DATE, +21);  // number of days to subtract\r\n        String futureDatedDate = targetFormat.format(c.getTime());\r\n        \r\n        Thread.sleep(2000);\r\n        //driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\")).clear();\r\n        //Thread.sleep(2000);\r\n        driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\")).sendKeys(futureDatedDate);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"effective date entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EffectiveDate_FutureDated21_Copy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12086,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EffectiveDate_FutureDated extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n       for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n        driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);       \r\n        WebElement defaultEffectiveDate=driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\"));\r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        String settingText=settingContents.getText();\r\n        int dateTimeIndex=settingText.indexOf(\"Date/Time:\");\r\n        String dateTime=settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n        int nextMonthDay = 0;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        \r\n        String[] date = effectiveDate.split(\"/\");\r\n              effectiveDate = date[1].toString();\r\n              int days      = Integer.parseInt(effectiveDate);\r\n              int noOfDaysAhead = Integer.parseInt(inputValue);\r\n              int reqDays   = days + noOfDaysAhead;\r\n              System.out.println(reqDays);\r\n              if(reqDays<0) {\r\n                     reqDays = Math.abs(reqDays);\r\n                     System.out.println(reqDays);\r\n                     \r\n               } else if(reqDays > 31) {\r\n                   int extraDays = reqDays - 31;\r\n                   reqDays = nextMonthDay + extraDays;\r\n               }\r\n              String targetDay       = Integer.toString(reqDays);\r\n//              targetDay              = date[1].replace(effectiveDate, targetDay).toString();\r\n              String futureDatedDate = date[0].toString()+\"/\"+targetDay+\"/\"+date[2].toString();\r\n              System.out.println(futureDatedDate);\r\n\r\n        \r\n              driver.findElement(By.xpath(\"//input[contains(@id,'nullDate-inputEl')]\")).sendKeys(futureDatedDate);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"effective date entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EffectiveDate_FutureDated",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10134,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//*[contains(@id,\"CreateSingle_true-inputEl\")]",
    "PageId": 1145,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "New SubmissionsSingle or Multiple PoliciesSingle",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1145,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "New Submissions",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9414,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127995,
        "StepNumber": 1,
        "Description": "VerifyQualificationScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11598,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127998,
        "StepNumber": 2,
        "Description": "Policy_Type_Selection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Homeowners (HO3)",
        "CustomActionId": 11597,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128003,
        "StepNumber": 3,
        "Description": "Meemic_Policy_Selection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Homeowners (HO3)",
        "CustomActionId": 13875,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128004,
        "StepNumber": 4,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128005,
        "StepNumber": 5,
        "Description": "QualificationQualificationSCREENAutofillBUTTON",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'AutoFill-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 10137,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127997,
        "StepNumber": 6,
        "Description": "Wait for page load",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128008,
        "StepNumber": 7,
        "Description": "EnterQualificationQuestions_Home",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_QualificationQuestions",
        "CustomActionId": 11601,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128000,
        "StepNumber": 8,
        "Description": "Are the premises used",
        "LocatorTypeId": 7,
        "Locator": "(//input[@data-ref='inputEl']) [29]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127999,
        "StepNumber": 9,
        "Description": "Do you rent your home",
        "LocatorTypeId": 7,
        "Locator": "(//input[@data-ref='inputEl']) [17]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128006,
        "StepNumber": 10,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128001,
        "StepNumber": 11,
        "Description": "rent home",
        "LocatorTypeId": 7,
        "Locator": "(//input[@data-ref='inputEl']) [22]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128002,
        "StepNumber": 12,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128007,
        "StepNumber": 13,
        "Description": "QualificationQualificationSCREENNext_BUTTON",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'Next-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 10138,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127996,
        "StepNumber": 14,
        "Description": "VarifyPageText",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Policy Info",
        "CustomActionId": 12443,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Qualification_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11598,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyQualificationScreen extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\n              WebDriverWait wait=new WebDriverWait(driver,15);\r\n              Thread.sleep(5000);\r\n        WebElement pageTitleEle = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'QualificationScreen:ttlBar')]\"))));\r\n\r\n\r\n        //WebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'QualificationScreen:ttlBar')]\"));\r\n        String actPageTitle = pageTitleEle.getText();\r\n        if(actPageTitle.equals(\"Qualification\")){\r\n        if( driver.findElements(By.xpath(\"//*[contains(@id,'closureAcg-inputEl')]\")).size()>0){\r\n        driver.findElement(By.xpath(\"//*[contains(@id,'closureAcg-inputEl')]\")).click();}\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Naviagted to 'Qualification' screen successfully\";\r\n        }\r\n    }\r\n    catch(Exception e){\r\n        String exceptionMsg = e.getMessage();\r\n        actionResult.status = false;\r\n            actionResult.comments =  \"'Qualification' screen is not displayed\";\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyQualificationScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11597,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Policy_Type_Selection extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n   driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);\r\n       for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        \r\n        WebDriverWait wait = new WebDriverWait(driver,60);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'PolicyType-inputEl') or contains(@id,'FLPKGHOPTRange-inputEl')]\"))));\r\n        \r\n        WebElement policyTypeEle=driver.findElement(By.xpath(\"//input[contains(@id,'PolicyType-inputEl') or contains(@id,'FLPKGHOPTRange-inputEl')]\"));\r\n    \r\n        policyTypeEle.click();\r\n        Thread.sleep(1000);\r\n        WebElement policyTypeValueEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'\"+inputValue+\"')]\"))));\r\n        policyTypeValueEle.click();\r\n        Thread.sleep(4000);\r\n        \r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        /* js.executeScript(\"window.scrollBy(0,250)\",\"\");\r\n         js.executeScript(\"arguments[0].scrollIntoView();\", babycare);\r\n         js.executeScript(\"arguments[0].click();\",babycare);*/\r\n        \r\n        \r\n         if(driver.findElements(By.xpath(\"//*[contains(text(),'Is there a daycare or licensed babysitting')]//parent::td//following-sibling::td//td[2]//input\")).size()>0)\r\n         {\r\n             WebElement babycare   = driver.findElement(By.xpath(\"//*[contains(text(),'Is there a daycare or licensed babysitting')]//parent::td//following-sibling::td//td[2]//input\"));\r\n             js.executeScript(\"window.scrollBy(0,250)\",\"\");\r\n             js.executeScript(\"arguments[0].scrollIntoView();\", babycare);\r\n             js.executeScript(\"arguments[0].click();\",babycare);\r\n             Thread.sleep(2000);\r\n        \r\n       \r\n       WebElement nextBtnEle = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//span[contains(@id,'ext') and contains(text(),'Next')]\")));\r\n\r\n        \r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", nextBtnEle);\r\n        js.executeScript(\"arguments[0].scrollIntoView();\", nextBtnEle);\r\n        js.executeScript(\"arguments[0].click();\",nextBtnEle);\r\n       \r\n    }\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Policy_Type_Selection",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13875,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Meemic_Policy_Selection extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        WebDriverWait wait = new WebDriverWait(driver,60);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id, 'MeemicHome-inputEl')]\"))));\r\n        \r\n        WebElement policyTypeEle=driver.findElement(By.xpath(\"//input[contains(@id, 'MeemicHome-inputEl')]\"));\r\n    \r\n        policyTypeEle.click();\r\n        Thread.sleep(1000);\r\n        WebElement policyTypeValueEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'\"+inputValue+\"')]\"))));\r\n        policyTypeValueEle.click();\r\n        Thread.sleep(2000);\r\n        \r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Meemic_Policy_Selection",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12444,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ClickOnNextBtn extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        try \r\n        {   \r\n            \r\n        WebElement nextBtnEle;\r\n        \r\n        driver.manage().timeouts().implicitlyWait(50, TimeUnit.SECONDS);\r\n        WebDriverWait wait = new WebDriverWait(driver,30);\r\n        Thread.sleep(2000);\r\n        nextBtnEle = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//span[contains(@id,'ext') and contains(text(),'Next')]\")));\r\n\r\n        //nextBtnEle=driver.findElement(By.xpath(\"//a[@id='SubmissionWizard:Next']\"));\r\n        //wait.until(ExpectedConditions.elementToBeClickable(nextBtnEle));\r\n\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", nextBtnEle);\r\n        js.executeScript(\"arguments[0].scrollIntoView();\", nextBtnEle);\r\n        js.executeScript(\"arguments[0].click();\",nextBtnEle);\r\n        \r\n        actionResult.status = true;\r\n         actionResult.comments =  \"Clicked On NEXT button\";\r\n        //break;    \r\n        \r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }       \r\n    \r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnNextBtn",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10137,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//*[contains(@id,'AutoFill-btnInnerEl')]",
    "PageId": 1146,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "QualificationQualificationSCREENAutofillBUTTON",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1146,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Qualification",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11601,
    "Description": "Parameter Syntax: QualificationQuestion1 AND Yes/No , QualificationQuestion2 AND Yes/No\r\nEg: Is there a trampoline AND Yes , Is the insured property in foreclosure AND No",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterQualificationQuestions_Home extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        WebDriverWait wait    = new WebDriverWait(driver,30);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        String[] qualInfo = inputValue.split(\" , \");\r\n        int qualCount= qualInfo.length;\r\n        \r\n        for(int i=0;i<=qualCount-1;i++)\r\n        {\r\n        String[] qualDetails = qualInfo[i].split(\" AND \");\r\n        String qualQuestions  = qualDetails[0].toString();\r\n        String qualValue      = qualDetails[1].toString();\r\n        String qualValueInput = \"\";\r\n        if(qualValueInput.equalsIgnoreCase(\"Yes\")){\r\n            qualValueInput = \"true\";\r\n            System.out.println(qualValueInput);\r\n            }else if(qualValueInput.equalsIgnoreCase(\"No\")){\r\n                qualValueInput = \"false\";\r\n                System.out.println(qualValueInput);\r\n            }\r\n        \r\n        try{            \r\n            WebElement radioElemt = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(text(),'\"+qualQuestions+\"')]/parent::td/following-sibling::td//input[contains(@id,'radio') and @inputvalue='\"+qualValueInput+\"']\"))));\r\n            System.out.println(qualValueInput);\r\n            js.executeScript(\"arguments[0].scrollIntoView();\", radioElemt);\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", radioElemt); \r\n            Thread.sleep(2000);\r\n            //js.executeScript(\"arguments[0].click();\",radioElemt);\r\n            radioElemt.click();\r\n            Thread.sleep(2000); \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Executed Successfully\";\r\n        }\r\n        catch(Exception e){\r\n            actionResult.comments = \"Exception at Value Element\"+e.getMessage();\r\n            actionResult.status   = false;\r\n        }\r\n        }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterQualificationQuestions_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10138,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//*[contains(@id,'Next-btnInnerEl')]",
    "PageId": 1146,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "QualificationQualificationSCREENNext_BUTTON",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12443,
    "Description": "Verify the expected text from the page body text",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VarifyPageText extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \nString bodyText=\"\";\n\n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\n\t\tWebDriverWait wait = new WebDriverWait(driver, 30);\t\t\t\n\t\tbodyText = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.tagName(\"body\")))).getText();\n\t\tif(bodyText.contains(inputValue))\n\t\t{\n\t\t\tactionResult.status = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tactionResult.status = false;\n\t\t}\n\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VarifyPageText",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9398,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127802,
        "StepNumber": 1,
        "Description": "Wait for page to display",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127793,
        "StepNumber": 2,
        "Description": "VerifyPolicyInfoScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11602,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127780,
        "StepNumber": 3,
        "Description": "Clear ",
        "LocatorTypeId": 7,
        "Locator": "(//input[@class='x-form-field x-form-text x-form-text-default  '])[2]",
        "ActionId": 8,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127748,
        "StepNumber": 4,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127779,
        "StepNumber": 5,
        "Description": "Effective date ",
        "LocatorTypeId": 7,
        "Locator": "(//input[@class='x-form-field x-form-text x-form-text-default  '])[2]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "12/01/2025",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127782,
        "StepNumber": 6,
        "Description": "EnterEffectiveDate",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "12/01/2025",
        "CustomActionId": 11632,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127789,
        "StepNumber": 7,
        "Description": "EffectiveDateFromSystem",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12080,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127790,
        "StepNumber": 8,
        "Description": "EnterEffectiveDateOnPolicyInfo",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12832,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127751,
        "StepNumber": 9,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127778,
        "StepNumber": 10,
        "Description": "ClickOnAutoFillButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "ForOnlyMILegacy",
        "ParameterValue": null,
        "CustomActionId": 12452,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127774,
        "StepNumber": 11,
        "Description": "Enter Legacy NI1 value",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'Legacy_NI_1-inputEl')]",
        "ActionId": 65,
        "ParameterName": "ForMILegacyOnly",
        "ParameterValue": "numeric:6",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127775,
        "StepNumber": 12,
        "Description": "PolicyType_Home",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "OnlyForMILegacy",
        "ParameterValue": "DT_PolicyType",
        "CustomActionId": 11630,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127784,
        "StepNumber": 13,
        "Description": "Verify Educational commuity",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'isAnyMemEducatorInd_false-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127773,
        "StepNumber": 14,
        "Description": "Click No Educational commuity",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'isAnyMemEducatorInd_false-inputEl')]",
        "ActionId": 9,
        "ParameterName": "ForFLPackage",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127797,
        "StepNumber": 15,
        "Description": "YesorNoPreviousAddress",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfoYesorNoPreviousAddress",
        "CustomActionId": 11603,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127803,
        "StepNumber": 16,
        "Description": "Wait ",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127798,
        "StepNumber": 17,
        "Description": "YesorNoAAAMembership",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfoYesorNoAAAMembership",
        "CustomActionId": 11604,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127750,
        "StepNumber": 18,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127785,
        "StepNumber": 19,
        "Description": "EnterMemberShipID",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'MembershipPNIInputSet:membership-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 20,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127786,
        "StepNumber": 20,
        "Description": "EnterMemberShipYear",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'MembershipPNIInputSet:membersince-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127752,
        "StepNumber": 21,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127772,
        "StepNumber": 22,
        "Description": "BypassMembership",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12626,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127753,
        "StepNumber": 23,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127760,
        "StepNumber": 24,
        "Description": "Verify ByPass validation",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'MembershipPNIInputSet:byPassValidation-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127749,
        "StepNumber": 25,
        "Description": "ClickByPassValidation",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11617,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127777,
        "StepNumber": 26,
        "Description": "PolicyInfo_MembershipDetails",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11619,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127805,
        "StepNumber": 27,
        "Description": "YesorNoFirstCompanyForInsurance",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfoYesorNoFirstCompanyForInsurance",
        "CustomActionId": 11605,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127754,
        "StepNumber": 28,
        "Description": "ClickByPassValidation",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11617,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127788,
        "StepNumber": 29,
        "Description": "Bypass validation",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'byPassValidation-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127799,
        "StepNumber": 30,
        "Description": "YesorNoForPaperlessComm",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfoYesorNoPaperlessComm",
        "CustomActionId": 11606,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127771,
        "StepNumber": 31,
        "Description": "ScrollToPaperless",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12941,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127770,
        "StepNumber": 32,
        "Description": "PaperlessAsNO",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'PaperlessPreferenceID-table')]/descendant::td[3]/descendant::div/input",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127800,
        "StepNumber": 33,
        "Description": "YesorNoDocsConsent",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfoYesorNoDocsConsent",
        "CustomActionId": 11607,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127764,
        "StepNumber": 34,
        "Description": "Click Yes for LIFE",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'AcgInputSet:life-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127755,
        "StepNumber": 35,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127762,
        "StepNumber": 36,
        "Description": "ACG Life Policy Number",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'acgLifePolicyNumber-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "1234567879",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127761,
        "StepNumber": 37,
        "Description": "Click Yes for Flood",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'AcgInputSet:flood-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127756,
        "StepNumber": 38,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127765,
        "StepNumber": 39,
        "Description": "ACG Flood Policy Number",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'acgFloodPolicyNumber-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "1234567879",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127791,
        "StepNumber": 40,
        "Description": "YesorNoHouseholdMembersEmployedIntheEducationalComunity",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfoYesorNoHouseholdmembersEmployed",
        "CustomActionId": 11616,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127768,
        "StepNumber": 41,
        "Description": "Verify SelectOrgNameAndProducerCode_Bindingagent",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(@id,'Producer1:SelectOrganization')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127787,
        "StepNumber": 42,
        "Description": "SelectOrgNameAndProducerCode_Bindingagent",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11640,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127794,
        "StepNumber": 43,
        "Description": "Policy InfoPolicy InfoSCREENNamed InsuredFORMPolicy InfoSCREENNamed InsuredFORMInsured NameHYPERLINK",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(@id,'AccountInfoInputSet:Name-bodyEl') and @data-ref='bodyEl']",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 9944,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 45,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127767,
        "StepNumber": 44,
        "Description": "Wait For Page Load",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "7",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127804,
        "StepNumber": 45,
        "Description": "EnterDateofBirthInContactDetails",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfoDOB",
        "CustomActionId": 11610,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127792,
        "StepNumber": 46,
        "Description": "EducationLevelStateWise",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfoEducationLevel",
        "CustomActionId": 11752,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127776,
        "StepNumber": 47,
        "Description": "Verify Education Level",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,':EducationLevel-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127806,
        "StepNumber": 48,
        "Description": "Education_Level",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Graduate Work or Degree",
        "CustomActionId": 11679,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127801,
        "StepNumber": 49,
        "Description": "EnterMaritalStatus",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicyInfoMaritalStatus",
        "CustomActionId": 11614,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127781,
        "StepNumber": 50,
        "Description": "PrimaryContactTypeAndValue",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11634,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127759,
        "StepNumber": 51,
        "Description": "EnterCensusTractNumberInPolicyInfoScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11661,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127795,
        "StepNumber": 52,
        "Description": "Named InsuredNamed InsuredSCREENOKBUTTON",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'ContactDetailScreen:Update-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 9950,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127783,
        "StepNumber": 53,
        "Description": "Verify Prior insurence ",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:LOBWizardStepGroup:SubmissionWizard_PolicyInfoScreen:SubmissionWizard_PolicyInfoDV:AccountInfoInputSet:PreviousAddInfo_AcgInputSet:prevstaylessthan3_false-inputEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": "NO",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127766,
        "StepNumber": 54,
        "Description": "Does anyone on the Policy own and occupy one of the following?",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'question_option3-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127757,
        "StepNumber": 55,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127769,
        "StepNumber": 56,
        "Description": "Has the Named Insured lived at the Policy Address for less than 3 years?",
        "LocatorTypeId": 7,
        "Locator": "//input[@id='SubmissionWizard:LOBWizardStepGroup:SubmissionWizard_PolicyInfoScreen:SubmissionWizard_PolicyInfoDV:AccountInfoInputSet:PreviousAddInfo_AcgInputSet:prevstaylessthan3_false-inputEl']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127758,
        "StepNumber": 57,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127763,
        "StepNumber": 58,
        "Description": "Verify MembershipWaiverExpirationDate",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(text(),'Membership Waiver Expiration Date')]",
        "ActionId": 62,
        "ParameterName": null,
        "ParameterValue": "Membership Waiver Expiration Date",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127796,
        "StepNumber": 59,
        "Description": "Policy InfoPolicy InfoSCREENNext_BUTTON",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:Next-btnInnerEl",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 9952,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Policy_Info_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11602,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyPolicyInfoScreen extends ActionResult\n   {\n        /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n\n\t//</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\n       actionResult.comments =  \"Before try block\";\n\tString screenTitle=\"\";\n\t\n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t    wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'PolicyInfoScreen:ttlBar')]\"))));\n\n\t\tWebElement titlePolicyInfoScreen = driver.findElement(By.xpath(\"//span[contains(@id,'PolicyInfoScreen:ttlBar')]\"));\n\t\tscreenTitle = titlePolicyInfoScreen.getText();\n\t\tactionResult.comments =  \"Before if block\"+screenTitle;\n\t\tif(screenTitle.equals(\"Policy Info\")){\n           \t\tactionResult.status = true;\n\t\t\tactionResult.comments =  \"Inside if block\"+screenTitle;\n\t\t\tactionResult.comments =  \"User is on :\"+screenTitle+\" Screen\";\n\t\t}\n\t\telse{\n           \t\tactionResult.status = false;\n\t\t\tactionResult.comments =  screenTitle+\" Screen is not displayed\";\n\n\n\t\t}\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\t\n\t       \n \t///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n\t   return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyPolicyInfoScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11632,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterEffectiveDate extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\t\t\n\t\tWebElement effectiveDate=driver.findElement(By.xpath(\"//input[contains(@id,'EffectiveDate-inputEl')]\"));\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\teffectiveDate.sendKeys(s);\n\t\teffectiveDate.sendKeys(Keys.DELETE);\nThread.sleep(400) ;\n\t\teffectiveDate.sendKeys(inputValue);\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";\n\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterEffectiveDate",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12832,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterEffectiveDateOnPolicyInfo extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n       \r\n        for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n        driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);       \r\n        WebElement defaultEffectiveDate=driver.findElement(By.xpath(\"//input[contains(@id,'EffectiveDate-inputEl')]\"));\r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        String settingText=settingContents.getText();\r\n        int dateTimeIndex=settingText.indexOf(\"Date/Time:\");\r\n        String dateTime=settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        System.out.println(\"date:\"+effectiveDate);\r\n        System.setProperty(\"EffectiveDate\", effectiveDate);\r\n              \r\n                    WebDriverWait wait=new WebDriverWait(driver, 20);\r\n            wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'EffectiveDate-inputEl')]\"))));\r\n            WebElement effectiveDateEle=driver.findElement(By.xpath(\"//input[contains(@id,'EffectiveDate-inputEl')]\"));\r\n            String s=Keys.chord(Keys.CONTROL,\"a\");\r\n            effectiveDateEle.sendKeys(s);\r\n            effectiveDateEle.sendKeys(Keys.DELETE);\r\n             //driver.findElement(By.xpath(\"//input[contains(@id,'EffectiveDate-inputEl')]\")).clear();\r\n             Thread.sleep(2000);\r\n             effectiveDateEle.sendKeys(effectiveDate);\r\n        //driver.findElement(By.xpath(\"//input[contains(@id,'EffectiveDate-inputEl')]\")).sendKeys(effectiveDate);\r\n            actionResult.SaveParameterValue(\"DT_EffectiveDate\", effectiveDate);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"effective date entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterEffectiveDateOnPolicyInfo",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12452,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnAutoFillButton extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\t\n\t\tWebElement autoFillBtnEle;\n   \t\tdriver.manage().timeouts().implicitlyWait(50, TimeUnit.SECONDS);\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tThread.sleep(2000);\n\t\tautoFillBtnEle = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[text()='Autofill']\")));\n\n\t       JavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t//js.executeScript(\"arguments[0].style.border='2px solid red'\", autoFillBtnEle);\n\t\tjs.executeScript(\"arguments[0].click();\",autoFillBtnEle);\n\n\t\tThread.sleep(3000);\n\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Clicked On AutoFill button\";\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = true;\n\t\t}\n\t}\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnAutoFillButton",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11630,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class PolicyType_Home extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\t//driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\tWebDriverWait wait = new WebDriverWait(driver,20);\n\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\tActions act = new Actions(driver);\n\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\tString inputValueVariable = inputValue;\n\n\tfor(int i =1; i<=5; i++) \n\t{\n\t\t\n\ttry \n\t\t{\t\n\t\t\t\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'HOPolicyType-inputEl')]\"))));\n\t\tWebElement policyTypeEle = driver.findElement(By.xpath(\"//input[contains(@id,'HOPolicyType-inputEl')]\"));\n\t\tjs.executeScript(\"arguments[0].setAttribute('style', 'border:2px solid red; background:yellow')\", policyTypeEle);\n\t\tjs.executeScript(\"arguments[0].click();\",policyTypeEle);\n\t\tpolicyTypeEle.sendKeys(selectText);\n\t\tact.moveToElement(policyTypeEle).sendKeys(Keys.DELETE).build().perform();\n\t\tjs.executeScript(\"arguments[0].value='\"+inputValueVariable+\"'\",policyTypeEle);\n\t\t//act.moveToElement(PriorAutoInsEle).sendKeys(Keys.ENTER).build().perform();\n\t\tact.moveToElement(policyTypeEle).sendKeys(Keys.TAB).build().perform();\n\t\t\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"The Value for the Field has been Selected as : \"+inputValueVariable;\n\n\t\tbreak;\n\t\t}\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\t\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PolicyType_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11603,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesorNoPreviousAddress extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++)\r\n    {   \r\n    try\r\n    {\r\n        WebElement previousAddrYes = driver.findElement(By.xpath(\"(//input[contains(@id,'prevstaylessthan3_true-inputEl')])[1]\"));\r\n        WebElement previousAddrNo  = driver.findElement(By.xpath(\"(//input[contains(@id,'prevstaylessthan3_false-inputEl')])[1]\"));\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            previousAddrYes.click();\r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Has the Named Insured lived at the Policy Address for less than 3 years? : Answered as 'Yes'\";;\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            previousAddrNo.click();\r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Has the Named Insured lived at the Policy Address for less than 3 years? : Answered as 'No'\";;\r\n        }\r\n    \r\n    \r\n\r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n    actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n    actionResult.status = false;\r\n    }\r\n    }\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesorNoPreviousAddress",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11604,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesorNoAAAMembership extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++)\n\t{\n\ttry\n\t{ \t\t\n\t\tWebElement AAAMembershipYes = driver.findElement(By.xpath(\"//input[contains(@id,'PNIMemberShipID_true-inputEl')]\"));\n\t\tWebElement AAAMembershipNo = driver.findElement(By.xpath(\"//input[contains(@id,'PNIMemberShipID_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\tAAAMembershipYes.click();\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Does Named Insured have a current AAA membership? - Answered as 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\tAAAMembershipNo.click();\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Does Named Insured have a current AAA membership? - Answered as 'No'\";\n\t\t}\n\t\n\nbreak;\n\t}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n//actionResult.comments = \"'Does Named Insured have a current AAA membership?' is not displayed on the Policy Info screen\";\nactionResult.status = false;\n}\n}\n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesorNoAAAMembership",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12626,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class BypassMembership extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n        Thread.sleep(2000);\r\n        WebDriverWait wait = new WebDriverWait(driver,20);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        WebElement byPasscheckbox;\r\n        byPasscheckbox = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[contains(@id,'byPassValidation-inputEl')]\")));\r\n\r\n        //js.executeScript(\"arguments[0].style.border='2px solid red'\", nextBtnEle);\r\n        js.executeScript(\"arguments[0].click();\",byPasscheckbox);\r\n        actionResult.status = true;\r\n        actionResult.comments =  \"Clicked On bypass button\";\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments = \"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status   = true;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>\r\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "BypassMembership",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11617,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ClickByPassValidation extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\nfor(int i =1; i<=5; i++)\r\n{       \r\n    try{\r\n            \r\n        WebElement byPass;\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        \r\n        byPass=driver.findElement(By.xpath(\"//input[contains(@id,'MembershipPNIInputSet:byPassValidation-inputEl')]\"));\r\n\r\n        WebDriverWait wait = new WebDriverWait(driver,25);\r\n    \r\n            wait.until(ExpectedConditions.visibilityOf(byPass));\r\n            js.executeScript(\"arguments[0].click()\",byPass);\r\n            \r\n            actionResult.status = true;\r\n                actionResult.comments =  \"Bypass Validation is Clicked successfully\";\r\n                break;\r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n            actionResult.comments = e.getMessage();\r\n\r\n    }\r\n}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>\r\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickByPassValidation",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11619,
    "Description": "Providing the Membership Details and Bypassing the Validation on Policy Info Screen.",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class PolicyInfo_MembershipDetails extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n        try{\r\n        driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n        WebDriverWait wait = new WebDriverWait(driver,20);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        if(actionResult.getDTParameter(\"DT_PolicyInfoYesorNoAAAMembership\").contains(\"Yes\")){\r\n        String[] membershipParams = inputValue.split(\" AND \");\r\n        String membershipID   = membershipParams[0].toString();\r\n        String membershipYear = membershipParams[1].toString();\r\n        Actions act           = new Actions(driver);\r\n        String selectText     = Keys.chord(Keys.CONTROL,\"a\");\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'PNIInputSet:membership-inputEl')]\"))));\r\n            WebElement membershipIDEle = driver.findElement(By.xpath(\"//input[contains(@id,'PNIInputSet:membership-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].click();\",membershipIDEle);\r\n            membershipIDEle.sendKeys(membershipID);\r\n            Thread.sleep(1000);\r\n            WebElement membershipSinceEle = driver.findElement(By.xpath(\"//input[contains(@id,'PNIInputSet:membersince-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].click();\",membershipSinceEle);\r\n            membershipSinceEle.sendKeys(membershipYear);\r\n            Thread.sleep(1000);\r\n                \r\n            //WebElement byPassValidationEle = driver.findElement(By.xpath(\"//input[contains(@id,'MembershipPNIInputSet:byPassValidation-inputEl')]\"));\r\n            //js.executeScript(\"arguments[0].click();\",byPassValidationEle);\r\n                \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Membership Information provided\";\r\n        }else{\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Membership not required\";\r\n        }\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PolicyInfo_MembershipDetails",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11605,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesorNoFirstCompanyForInsurance extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\n\t\tdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);\n\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'isFirst')][contains(@componentid,'true')]\")));\n\n\t\tWebElement firstCompanyYes = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'isFirst')][contains(@componentid,'true')]\"))));\n\t\tWebElement firstCompanyNo = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'isFirst')][contains(@componentid,'false')]\"))));\n\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\tjs.executeScript(\"arguments[0].click()\",firstCompanyYes);\n\t\t\tfirstCompanyYes.click();\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Are we the first company you have contacted for an auto insurance quote? : Answered as 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\tjs.executeScript(\"arguments[0].click()\",firstCompanyNo);\n\t\t\tfirstCompanyNo.click();\n\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Are we the first company you have contacted for an auto insurance quote? : Answered as 'No'\";\n\t\t}\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesorNoFirstCompanyForInsurance",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11606,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesorNoForPaperlessComm extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n       for(int i =1; i<=2; i++) \r\n    {\r\n        try \r\n        {\r\n        Thread.sleep(3000);\r\n        driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);\r\n        WebDriverWait wait=new WebDriverWait(driver,30);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n\r\n        WebElement PaperlessCommYes = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'PaperlessCommunication_true-inputEl') or contains(@id,'PaperlessDiscount_true-inputEl')]\")));\r\n        js.executeScript(\"arguments[0].scrollIntoView();\", PaperlessCommYes);\r\n        // driver.findElement(By.xpath(\"//input[contains(@id,'PaperlessCommunication_true-inputEl') or contains(@id,'PaperlessDiscount_true-inputEl')]\"));\r\n        WebElement PaperlessCommNo = driver.findElement(By.xpath(\"//input[contains(@id,'PaperlessCommunication_false-inputEl') or contains(@id,'PaperlessDiscount_false-inputEl')]\"));\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            Thread.sleep(2000);\r\n            PaperlessCommYes.click();\r\n                actionResult.status = true; \r\n                actionResult.comments =  \"'Sign up for 'Paperless Communication'?' : Answered as 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            Thread.sleep(2000);\r\n            PaperlessCommNo.click(); \r\n                actionResult.status = true;\r\n                actionResult.comments =  \"'Sign up for 'Paperless Communication'?' : Answered as 'No'\";\r\n        }\r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments = \"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status   = true;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesorNoForPaperlessComm",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12941,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ScrollToPaperless extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n       try \r\n        {           \r\n         WebDriverWait wait    = new WebDriverWait(driver,30);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        \r\n        WebElement paper = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[text()='Mobile Number']\"))));\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", paper);\r\n        js.executeScript(\"arguments[0].scrollIntoView();\", paper);\r\n        \r\n        actionResult.status   = true;\r\n        actionResult.comments = \"Scrolled to element\"; \r\n        }\r\n        catch(Exception e) {\r\n            actionResult.status   = false;\r\n            actionResult.comments = \"Element is not found\";\r\n        }\r\n    \r\n        \r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ScrollToPaperless",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11607,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesorNoDocsConsent extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n       for(int i =1; i<=3; i++) \r\n    {\r\n        try \r\n        {\r\n            //driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\r\n        WebDriverWait wait = new WebDriverWait(driver,10);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'GeneralDocumentsCTT_true')]\")));\r\n        WebElement GenDocsConsentYes= wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'GeneralDocumentsCTT_true')]\")));\r\n        WebElement GenDocsConsentNo= wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'GeneralDocumentsCTT_false')]\")));\r\n\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            GenDocsConsentYes.click(); \r\n                actionResult.status = true;\r\n                actionResult.comments =  \"'General Documents Consent to Text' : Answered as 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            GenDocsConsentNo.click(); \r\n                actionResult.status = true;\r\n                actionResult.comments =  \"'General Documents Consent to Text' : Answered as 'No'\";\r\n        }\r\n    \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments = \"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status   = true;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesorNoDocsConsent",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11616,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesorNoHouseholdMembersEmployedIntheEducationalComunity extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\t\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\n\t\tdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);\n\n\t\tWebDriverWait wait=new WebDriverWait(driver,30);\n\t\tWebElement pageTitleEle = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'isAnyMemEducatorInd_true-inputEl')]\"))));\n\t\t\n\t\tWebElement houseHoldYes = driver.findElement(By.xpath(\"//input[contains(@id,'isAnyMemEducatorInd_true-inputEl')]\"));\n\t\tWebElement houseHoldNo = driver.findElement(By.xpath(\"//input[contains(@id,'isAnyMemEducatorInd_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\thouseHoldYes.click();\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Are any household members employed in the educational community? : Answered as 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\thouseHoldNo.click();\n\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Are any household members employed in the educational community? : Answered as 'No'\";;\n\t\t}\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\t\n\t\t}\n\t\tactionResult.status = true;\n\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesorNoHouseholdMembersEmployedIntheEducationalComunity",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11640,
    "Description": "Searching and selecting the required Organization Name on Create Account screen.",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SelectOrgNameAndProducerCode_Bindingagent extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++)\r\n{\r\n    try{\r\n    \r\n        String[] orgProducerCodeParams = inputValue.split(\" AND \");\r\n        String organizationName = orgProducerCodeParams[0].toString();\r\n        String ProducerCode = orgProducerCodeParams[1].toString();\r\n        driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n        WebDriverWait wait = new WebDriverWait(driver,20);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        Actions act = new Actions(driver);\r\n        String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(@id,'Producer1:SelectOrganization')]\"))));\r\n            WebElement searchOrgEle = driver.findElement(By.xpath(\"//div[contains(@id,'Producer1:SelectOrganization')]\"));\r\n            js.executeScript(\"arguments[0].click();\",searchOrgEle);\r\n            Thread.sleep(2000);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'OrganizationSearchPopupScreen:ttlBar')]\"))));\r\n            WebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'OrganizationSearchPopupScreen:ttlBar')]\"));\r\n            String actPageTitle = pageTitleEle.getText();\r\n            if(actPageTitle.equals(\"Organizations\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"The 'Organizations' Screen has been displayed\";\r\n            }\r\n            else{\r\n                actionResult.status = false;\r\n                actionResult.comments =  \"The 'Organizations' Screen not displayed\";\r\n            }\r\n            \r\n            WebElement OrgTxtEle = driver.findElement(By.xpath(\"//input[contains(@id,'OrganizationSearchDV:GlobalContactNameInputSet:Name-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].click();\",OrgTxtEle);\r\n            OrgTxtEle.sendKeys(organizationName);\r\n            \r\n            WebElement searchBtnEle = driver.findElement(By.xpath(\"//a[contains(@id,'SearchLinksInputSet:Search')]\"));\r\n            js.executeScript(\"arguments[0].click();\",searchBtnEle);\r\n            Thread.sleep(2000);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//a[contains(@id,'OrganizationSearchResultsLV:0:_Select')]\"))));\r\n            WebElement selectOrgBtnEle = driver.findElement(By.xpath(\"//a[contains(@id,'OrganizationSearchResultsLV:0:_Select')]\"));\r\n            js.executeScript(\"arguments[0].click();\",selectOrgBtnEle);\r\n            Thread.sleep(2000);\r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'Screen:ttlBar')]\"))));\r\n            WebElement pageTitleEle1 = driver.findElement(By.xpath(\"//span[contains(@id,'Screen:ttlBar')]\"));\r\n            String actPageTitle1 = pageTitleEle1.getText();\r\n            if(actPageTitle1.equals(\"Create account\") || actPageTitle1.equals(\"New Submissions\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"The 'Create account' Screen has been displayed\";\r\n            }\r\n            else{\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"The 'Create account' Screen not displayed\";\r\n            }\r\n            \r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'ProducerCode4-inputEl')]\"))));\r\n            WebElement producerCodeEle = driver.findElement(By.xpath(\"//input[contains(@id,'ProducerCode4-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].click();\",producerCodeEle);\r\n            producerCodeEle.sendKeys(selectText);\r\n            Thread.sleep(1000);\r\n            producerCodeEle.sendKeys(Keys.DELETE);\r\n            Thread.sleep(500);\r\n            producerCodeEle.sendKeys(ProducerCode);\r\n            producerCodeEle.sendKeys(Keys.ENTER);\r\n            Thread.sleep(1000);\r\n\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"The required 'Organization' and 'Producer Code' have been selected\";\r\n \r\n        \r\n    break;\r\n    }\r\ncatch(Exception e) {\r\nactionResult.comments = \"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\nactionResult.status   = true;\r\n}\r\n}\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectOrgNameAndProducerCode_Bindingagent",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9944,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//div[contains(@id,'AccountInfoInputSet:Name-bodyEl') and @data-ref='bodyEl']",
    "PageId": 1147,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Policy InfoPolicy InfoSCREENNamed InsuredFORMPolicy InfoSCREENNamed InsuredFORMInsured NameHYPERLINK",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1147,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Policy Info",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11610,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterDateofBirthInContactDetails extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\tWebElement DateOfBirthtxtField = driver.findElement(By.xpath(\"//input[contains(@id,'DateOfBirth-inputEl')]\"));\t\t\n\t\tDateOfBirthtxtField.sendKeys(Keys.chord(Keys.CONTROL,\"a\"),inputValue);\n\t\t///DateOfBirthtxtField.sendKeys(inputValue);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"The Date Of Birth is enter as :\"+inputValue;\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterDateofBirthInContactDetails",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11752,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EducationLevelStateWise extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n\n\tWebDriverWait wait = new WebDriverWait(driver,40);\n\t\t\n\tWebElement education=driver.findElement(By.xpath(\"//input[contains(@id,':EducationLevel-inputEl')]\"));\n\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\teducation.sendKeys(s);\n\teducation.sendKeys(Keys.DELETE);\n       education.sendKeys(inputValue);\n\tThread.sleep(2000);\n\teducation.sendKeys(Keys.ENTER);\n\teducation.sendKeys(Keys.TAB);\n\tThread.sleep(2000);\n\n\n}\ncatch(Exception e){\n\n           actionResult.comments =  \"No Education Level Required\";\n}\n\nactionResult.status = true;\nactionResult.comments = \"Executed Successfully\"; \n\n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EducationLevelStateWise",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11679,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class Education_Level extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\t\t\n\t\t\tWebDriverWait wait=new WebDriverWait(driver, 20);\n\t\t\twait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,':EducationLevel-inputEl')]\"))));\n\t\t\t\n\t\t\tWebElement education=driver.findElement(By.xpath(\"//input[contains(@id,':EducationLevel-inputEl')]\"));\n\t\n\t\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\teducation.sendKeys(s);\n\t\t\teducation.sendKeys(Keys.DELETE);\n\t\t\teducation.sendKeys(inputValue);\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\teducation.sendKeys(Keys.ENTER);\n\t\t\teducation.sendKeys(Keys.TAB);\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tactionResult.status = true;\n\t\t\tactionResult.comments = \"Executed Successfully\"; \n\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Education_Level",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11614,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterMaritalStatus extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n\r\nfor(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n        WebElement gender=driver.findElement(By.xpath(\"//input[contains(@id,'MaritalStatus-inputEl')]\"));\r\n        String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        gender.sendKeys(s);\r\n        gender.sendKeys(Keys.DELETE);\r\n        gender.sendKeys(inputValue);\r\n        //gender.sendKeys(Keys.ENTER);\r\n        Thread.sleep(1500);\r\n        gender.sendKeys(Keys.TAB);\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterMaritalStatus",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11634,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class PrimaryContactTypeAndValue extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\tfor(int i =1; i<=5; i++) \n\t{\n\t\t\n\ttry \n\t\t{\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tActions act = new Actions(driver);\n\t\t\n\t\tWebElement primaryPhoneNo = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'PrimaryPhone-inputEl')]\"))));\n\t\t\n\t\tjs.executeScript(\"arguments[0].setAttribute('style', 'border:2px solid red; background:yellow')\", primaryPhoneNo);\n\t\tjs.executeScript(\"arguments[0].click();\",primaryPhoneNo);\n\t\tThread.sleep(1000);\n\t\t\n\t\tWebElement primaryPhoneNoType = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'Home')]\"))));\n\t\tjs.executeScript(\"arguments[0].click();\",primaryPhoneNoType);\n\t\tThread.sleep(2000);\n\t\t\n\t\tWebElement primaryPhoneNoValue = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'HomePhone:GlobalPhoneInputSet:NationalSubscriberNumber-inputEl')]\"))));\n\t\t\n\t\tjs.executeScript(\"arguments[0].setAttribute('style', 'border:2px solid red; background:yellow')\", primaryPhoneNoValue);\n\t\tjs.executeScript(\"arguments[0].click();\",primaryPhoneNoValue);\n\t\tprimaryPhoneNoValue.clear();\n\t\tThread.sleep(1000);\n\t\tjs.executeScript(\"arguments[0].click();\",primaryPhoneNoValue);\n\t\tprimaryPhoneNoValue.sendKeys(\"2311231234\");\n\t\tprimaryPhoneNoValue.sendKeys(Keys.TAB);\n\t\tThread.sleep(2000);\n\t\t\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";\n\n\t\tbreak;\n\t\t}\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PrimaryContactTypeAndValue",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11661,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterCensusTractNumberInPolicyInfoScreen extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n        JavascriptExecutor js  = (JavascriptExecutor)driver;\r\n        Actions act            = new Actions(driver);\r\n        \r\n            try \r\n            {   \r\n                WebElement censusTract = driver.findElement(By.xpath(\"//input[contains(@id,'PolicyAddressDisplayInputSet:censustract') or contains(@id,':censustract-inputEl')]\"));\r\n                //String censusTractValue = censusTract.getAttribute(\"value\");\r\n                censusTract.click();\r\n                js.executeScript(\"arguments[0].value='\"+inputValue+\"'\",censusTract);\r\n                Thread.sleep(1500);\r\n                act.moveToElement(censusTract).sendKeys(Keys.TAB).build().perform();\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"Entered CensusTract Value : \" + inputValue;\r\n                \r\n                 \r\n            }\r\n    \r\n            catch(Exception e) {\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"CensusTract value found: \";\r\n            }     \r\n            \r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterCensusTractNumberInPolicyInfoScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9950,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//*[contains(@id,'ContactDetailScreen:Update-btnInnerEl')]",
    "PageId": 1149,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Named InsuredNamed InsuredSCREENOKBUTTON",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1149,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Named Insured",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9952,
    "ProjectId": 99,
    "LocatorType": 3,
    "Locator": "SubmissionWizard:Next-btnInnerEl",
    "PageId": 1147,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Policy InfoPolicy InfoSCREENNext_BUTTON",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9407,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127891,
        "StepNumber": 1,
        "Description": "VerifyPriorInsuranceScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12112,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127883,
        "StepNumber": 2,
        "Description": "TenureDate",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "12/10/2023",
        "CustomActionId": 11692,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127904,
        "StepNumber": 3,
        "Description": "ACGTenureDate",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12117,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127885,
        "StepNumber": 4,
        "Description": "YesOrNoPriorHomeownersInsurance",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": 12110,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127889,
        "StepNumber": 5,
        "Description": "ExpirationDate",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "01/10/2024",
        "CustomActionId": 11691,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127888,
        "StepNumber": 6,
        "Description": "Carrier_Name",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "21st Century Assurance Company",
        "CustomActionId": 11681,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127892,
        "StepNumber": 7,
        "Description": "CarrierName_Home",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "AlternateForStep5",
        "ParameterValue": "DT_CarrierName",
        "CustomActionId": 12114,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127890,
        "StepNumber": 8,
        "Description": "Policy_Type_Selection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Condominium (HO6)",
        "CustomActionId": 11597,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127887,
        "StepNumber": 9,
        "Description": "Click",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HOPriorInsuranceHOEScreen:AdditionalDetailsHome_AcgDV:PNIPremiumHome-inputEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127886,
        "StepNumber": 10,
        "Description": "CompletedYearsWithPriorCarrier",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "1",
        "CustomActionId": 12111,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127897,
        "StepNumber": 11,
        "Description": "ACGTenureDateForSNI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12118,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127893,
        "StepNumber": 12,
        "Description": "YesOrNoSameAsNamedInsured",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12115,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127894,
        "StepNumber": 13,
        "Description": "SecondNamedInsuredPriorHomeownerInsurance",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12116,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127898,
        "StepNumber": 14,
        "Description": "ExpirationDate_ForSNI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12121,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127895,
        "StepNumber": 15,
        "Description": "CarrierName_Home_For_SNI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12119,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127899,
        "StepNumber": 16,
        "Description": "Policy_Type_Selection_forSNI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12122,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127896,
        "StepNumber": 17,
        "Description": "CompletedYearsWithPriorCarrierForSNI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12120,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127900,
        "StepNumber": 18,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127901,
        "StepNumber": 19,
        "Description": "CompletedYearsWithPriorCarrier",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "1",
        "CustomActionId": 12111,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127902,
        "StepNumber": 20,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127903,
        "StepNumber": 21,
        "Description": "CompletedYearsWithPriorCarrierForSNI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12120,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127884,
        "StepNumber": 22,
        "Description": "Click Next",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:Next-btnInnerEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Prior_Insurance",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12112,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.StaleElementReferenceException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyPriorInsuranceScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,40);\t\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[contains(@id,'HOPriorInsuranceHOEScreen:ttlBar')]\")));\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'HOPriorInsuranceHOEScreen:ttlBar')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Prior Insurance\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Prior Insurance' screen successfully\";\n\t\t}\n\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyPriorInsuranceScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11692,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class TenureDate extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\ntry{\n\t\tWebElement tenureDate;\n\t\ttenureDate=driver.findElement(By.xpath(\"//input[contains(@id,'Tenure')]\"));\n\t\ttenureDate.click();\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\ttenureDate.sendKeys(s);\n\t\ttenureDate.sendKeys(Keys.DELETE);\n\t\ttenureDate.sendKeys(inputValue);\n\t\tKeys.chord(Keys.TAB);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"The Prior Insurance Expiration Date entered as:\"+inputValue;\n\t}\n\tcatch(Exception e){\n           actionResult.status = false;\n           actionResult.comments =  e.getMessage();;\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "TenureDate",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12117,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.*;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ACGTenureDate extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {   \r\n        \r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//input[contains(@id,'AcgTenure-inputEl')])[1]\")));\r\n        WebElement ACGTenureDate = driver.findElement(By.xpath(\"(//input[contains(@id,'AcgTenure-inputEl')])[1]\"));\r\n        String s                    = Keys.chord(Keys.CONTROL,\"a\");\r\n        ACGTenureDate.sendKeys(s);\r\n        ACGTenureDate.sendKeys(Keys.DELETE);\r\n        ACGTenureDate.sendKeys(inputValue);\r\n        Thread.sleep(2000);\r\n        ACGTenureDate.sendKeys(Keys.ENTER);\r\n        ACGTenureDate.sendKeys(Keys.TAB);\r\n        Thread.sleep(2000);\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n\r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ACGTenureDate",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12110,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException; \nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoPriorHomeownersInsurance extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement priorYesEle;\n\t\tWebElement priorNoEle;\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'HasPriorPolicyHome_true-inputEl')]\")));\n\n\t\tpriorYesEle=driver.findElement(By.xpath(\"//input[contains(@id,'HasPriorPolicyHome_true-inputEl')]\"));\n\t\tpriorNoEle=driver.findElement(By.xpath(\"//input[contains(@id,'HasPriorPolicyHome_false-inputEl')]\"));\n\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t//priorYesEle.click();\n\t\t\tJavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\t\texecutor.executeScript(\"arguments[0].click();\", priorYesEle);\n\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Does Named Insured have Prior Homeowners Insurance? has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//priorNoEle.click();\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", priorNoEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Does Named Insured have Prior Homeowners Insurance? has been selected as : 'No'\";\n\t\t}\n\t\tThread.sleep(1500);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"'Does Named Insured have Prior Homeowners Insurance?' field is not available in Additonal Details Tab\"+MsgDetails;\n\t\t}\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoPriorHomeownersInsurance",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11691,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ExpirationDate extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'ExpirationDate')]\")));\n\t\tWebElement expirationDate;\n\t\texpirationDate=driver.findElement(By.xpath(\"//input[contains(@id,'ExpirationDate')]\"));\n\t\texpirationDate.click();\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\texpirationDate.sendKeys(s);\n\t\texpirationDate.sendKeys(Keys.DELETE);\n\t\texpirationDate.sendKeys(inputValue);\n\t\tKeys.chord(Keys.TAB);\n\t\tThread.sleep(2000);\n\t\tactionResult.status = true;\n        actionResult.comments =  \"The Prior Insurance Expiration Date entered as:\"+inputValue;\n \n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ExpirationDate",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11681,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Carrier_Name extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n      \r\n        try\r\n    {\r\n      for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        //driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n        WebDriverWait wait=new WebDriverWait(driver, 20);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'CarrierName')]\"))));\r\n\r\n        //WebElement carrierNameEle = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'CarrierName')]\"))));\r\n\r\n        WebElement carrierNameEle=driver.findElement(By.xpath(\"//input[contains(@id,'CarrierName')]\"));\r\n        String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        carrierNameEle.sendKeys(s);\r\n        carrierNameEle.sendKeys(Keys.DELETE);\r\n        Thread.sleep(500);\r\n        Actions act = new Actions(driver);\r\n        act.sendKeys(carrierNameEle,inputValue).build().perform();\r\n        Thread.sleep(300);\r\n        //carrierNameEle.sendKeys(Keys.ENTER);\r\n        //driver.findElement(By.xpath(\"//input[contains(@id,':EducationLevel-inputEl')]\")).click();\r\n        carrierNameEle.sendKeys(Keys.TAB);\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n\r\n        break;\r\n        }\r\n        catch(Exception e)\r\n        {\r\n        actionResult.comments = e.getMessage();\r\n        retry++;\r\n        }\r\n      }\r\n    }   \r\n    catch(Exception e)\r\n    {\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n    }\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Carrier_Name",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12114,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class CarrierName_Home extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\t\t//driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\tWebDriverWait wait=new WebDriverWait(driver, 20);\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'CarrierName')]\"))));\n\n\t\t//WebElement carrierNameEle = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'CarrierName')]\"))));\n\n\t\tWebElement carrierNameEle=driver.findElement(By.xpath(\"//input[contains(@id,'CarrierName')]\"));\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tcarrierNameEle.sendKeys(s);\n\t\tcarrierNameEle.sendKeys(Keys.DELETE);\n\t\tThread.sleep(500);\n\t\t//Actions act = new Actions(driver);\n\t\t//act.sendKeys(carrierNameEle,inputValue).build().perform();\n\t\tcarrierNameEle.sendKeys(inputValue);\n\t\tThread.sleep(300);\n\t\tcarrierNameEle.sendKeys(Keys.ENTER);\n\t\tcarrierNameEle.sendKeys(Keys.TAB);\n      \t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\"; \n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CarrierName_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12111,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.StaleElementReferenceException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class CompletedYearsWithPriorCarrier extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {   \r\n        \r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'YearsWithPriorCarrier-inputEl')]\")));\r\n        WebElement carrier=driver.findElement(By.xpath(\"//input[contains(@id,'YearsWithPriorCarrier-inputEl')]\"));\r\n        String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        carrier.sendKeys(s);\r\n        carrier.sendKeys(Keys.DELETE);\r\n        carrier.sendKeys(inputValue);\r\n        carrier.sendKeys(Keys.ENTER);\r\n        Thread.sleep(750);\r\n        carrier.sendKeys(Keys.TAB);\r\n        Thread.sleep(3000);\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CompletedYearsWithPriorCarrier",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12118,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.*;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ACGTenureDateForSNI extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {   \r\n        \r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//input[contains(@id,'AcgTenure-inputEl')])[2]\")));\r\n        WebElement ACGTenureDate = driver.findElement(By.xpath(\"(//input[contains(@id,'AcgTenure-inputEl')])[2]\"));\r\n        String s                 = Keys.chord(Keys.CONTROL,\"a\");\r\n        ACGTenureDate.sendKeys(s);\r\n        ACGTenureDate.sendKeys(Keys.DELETE);\r\n        ACGTenureDate.sendKeys(inputValue);\r\n        Thread.sleep(2000);\r\n        ACGTenureDate.sendKeys(Keys.ENTER);\r\n        ACGTenureDate.sendKeys(Keys.TAB);\r\n        Thread.sleep(2000);\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n\r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ACGTenureDateForSNI",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12115,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException; \r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesOrNoSameAsNamedInsured extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n        WebElement YesSameAsNamedInsured;\r\n        WebElement NoSameAsNamedInsured;\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'SNISameAsPNI_false-inputEl')]\")));\r\n\r\n        YesSameAsNamedInsured = driver.findElement(By.xpath(\"//input[contains(@id,'SNISameAsPNI_true-inputEl')]\"));\r\n        NoSameAsNamedInsured  = driver.findElement(By.xpath(\"//input[contains(@id,'SNISameAsPNI_false-inputEl')]\"));\r\n        \r\n\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            //priorYesEle.click();\r\n            JavascriptExecutor executor = (JavascriptExecutor)driver;\r\n            executor.executeScript(\"arguments[0].click();\", YesSameAsNamedInsured);\r\n\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"Same As NamedInsured : 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            //priorNoEle.click();\r\n            \r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", NoSameAsNamedInsured);\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"Same As NamedInsured: 'No'\";\r\n        }\r\n        Thread.sleep(1500);\r\n        }\r\n        catch(Exception e){\r\n            String MsgDetails     = e.getMessage();\r\n            actionResult.status   = false;\r\n            actionResult.comments = \"YesOrNoSameasnamedInsured\"+MsgDetails;\r\n        }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoSameAsNamedInsured",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12116,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException; \r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SecondNamedInsuredPriorHomeownerInsurance extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n        WebElement YesSecondNamedInsuredPriorHomeownerInsurance;\r\n        WebElement NoSecondNamedInsuredPriorHomeownerInsurance;\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'SNIHasPriorPolicyHome_false-inputEl')]\")));\r\n\r\n        YesSecondNamedInsuredPriorHomeownerInsurance = driver.findElement(By.xpath(\"//input[contains(@id,'SNIHasPriorPolicyHome_true-inputEl')]\"));\r\n        NoSecondNamedInsuredPriorHomeownerInsurance  = driver.findElement(By.xpath(\"//input[contains(@id,'SNIHasPriorPolicyHome_false-inputEl')]\"));\r\n        \r\n\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            //priorYesEle.click();\r\n            JavascriptExecutor executor = (JavascriptExecutor)driver;\r\n            executor.executeScript(\"arguments[0].click();\", YesSecondNamedInsuredPriorHomeownerInsurance);\r\n\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"SecondNamed Insured Prior Homeowner Insurance : 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            //priorNoEle.click();\r\n            \r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", NoSecondNamedInsuredPriorHomeownerInsurance);\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"SecondNamed Insured Prior Homeowner Insurance : 'No'\";\r\n        }\r\n        Thread.sleep(1500);\r\n        }\r\n        catch(Exception e){\r\n            String MsgDetails     = e.getMessage();\r\n            actionResult.status   = false;\r\n            actionResult.comments = \"YesOrNoSecondNamedInsuredPriorHomeownerInsurance\"+MsgDetails;\r\n        }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SecondNamedInsuredPriorHomeownerInsurance",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12121,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ExpirationDate_ForSNI extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//input[contains(@id,'ExpirationDate')])[2]\")));\r\n        WebElement expirationDate;\r\n        expirationDate = driver.findElement(By.xpath(\"(//input[contains(@id,'ExpirationDate')])[2]\"));\r\n        expirationDate.click();\r\n        String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        expirationDate.sendKeys(s);\r\n        expirationDate.sendKeys(Keys.DELETE);\r\n        expirationDate.sendKeys(inputValue);\r\n        Keys.chord(Keys.TAB);\r\n        Thread.sleep(2000);\r\n        actionResult.status = true;\r\n        actionResult.comments =  \"The Prior Insurance Expiration Date entered as:\"+inputValue;\r\n \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ExpirationDate_ForSNI",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12119,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class CarrierName_Home_For_SNI extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {   \r\n        \r\n        //driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n        WebDriverWait wait=new WebDriverWait(driver, 20);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"(//input[contains(@id,'CarrierName')])[2]\"))));\r\n\r\n        //WebElement carrierNameEle = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'CarrierName')]\"))));\r\n\r\n        WebElement carrierNameEle=driver.findElement(By.xpath(\"(//input[contains(@id,'CarrierName')])[2]\"));\r\n        String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        carrierNameEle.sendKeys(s);\r\n        carrierNameEle.sendKeys(Keys.DELETE);\r\n        Thread.sleep(500);\r\n        //Actions act = new Actions(driver);\r\n        //act.sendKeys(carrierNameEle,inputValue).build().perform();\r\n        carrierNameEle.sendKeys(inputValue);\r\n        Thread.sleep(300);\r\n        carrierNameEle.sendKeys(Keys.ENTER);\r\n        carrierNameEle.sendKeys(Keys.TAB);\r\n            actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CarrierName_Home_For_SNI",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12122,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Policy_Type_Selection_forSNI extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        WebDriverWait wait = new WebDriverWait(driver,60);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"(//input[contains(@id,'PolicyType-inputEl') or contains(@id,'FLPKGHOPTRange-inputEl')])[2]\"))));\r\n        \r\n        WebElement policyTypeEle = driver.findElement(By.xpath(\"(//input[contains(@id,'PolicyType-inputEl') or contains(@id,'FLPKGHOPTRange-inputEl')])[2]\"));\r\n    \r\n        policyTypeEle.click();\r\n        Thread.sleep(1000);\r\n        WebElement policyTypeValueEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'\"+inputValue+\"')]\"))));\r\n        policyTypeValueEle.click();\r\n        Thread.sleep(2000);\r\n        \r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Policy_Type_Selection_forSNI",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12120,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.StaleElementReferenceException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class CompletedYearsWithPriorCarrierForSNI extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {   \r\n        \r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//input[contains(@id,'YearsWithPriorCarrier-inputEl')])[2]\")));\r\n        WebElement carrier=driver.findElement(By.xpath(\"(//input[contains(@id,'YearsWithPriorCarrier-inputEl')])[2]\"));\r\n        String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        carrier.sendKeys(s);\r\n        carrier.sendKeys(Keys.DELETE);\r\n        carrier.sendKeys(inputValue);\r\n        carrier.sendKeys(Keys.ENTER);\r\n        Thread.sleep(750);\r\n        carrier.sendKeys(Keys.TAB);\r\n        Thread.sleep(3000);\r\n        //Keys.chord(Keys.TAB);\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CompletedYearsWithPriorCarrierForSNI",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9360,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 126866,
        "StepNumber": 1,
        "Description": "VerifyDwellingScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12135,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126903,
        "StepNumber": 2,
        "Description": "ClickOnAutoFillButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12452,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126945,
        "StepNumber": 3,
        "Description": "Click On locationDropDown",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'HODwellingLocationInputMenuIcon')]/img",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126946,
        "StepNumber": 4,
        "Description": "Click On editLocation",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'EditDwellingLocation-textEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126947,
        "StepNumber": 5,
        "Description": "WaitForPageLoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126948,
        "StepNumber": 6,
        "Description": "Verify censusTract IsEmpty",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'LocationDetail_AcgInputSet:censustract')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126949,
        "StepNumber": 7,
        "Description": "Click On censusTract",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'LocationDetail_AcgInputSet:censustract')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126950,
        "StepNumber": 8,
        "Description": "Enter censusTract",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'censustract-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126951,
        "StepNumber": 9,
        "Description": "Click On OK Btn",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'Update-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126952,
        "StepNumber": 10,
        "Description": "WaitForPageLoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126855,
        "StepNumber": 11,
        "Description": "ResidenceType",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Primary",
        "CustomActionId": 12123,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126883,
        "StepNumber": 12,
        "Description": "NumberOfFamilies",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "1",
        "CustomActionId": 12148,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126904,
        "StepNumber": 13,
        "Description": "ZoneSelection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "OnlyForMILegacy",
        "ParameterValue": null,
        "CustomActionId": 12153,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126868,
        "StepNumber": 14,
        "Description": "NumberOfOccupants",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": 12136,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126884,
        "StepNumber": 15,
        "Description": "NumberOfFamilies",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12148,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126894,
        "StepNumber": 16,
        "Description": "Verify Purchase or Completion date",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'HomePurchaseDate-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126867,
        "StepNumber": 17,
        "Description": "Enter Purchase or Completion date",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'HomePurchaseDate-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "2012",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126869,
        "StepNumber": 18,
        "Description": "YesOrNoIsTheNameInsuredOriginalOwner",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": 12137,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126916,
        "StepNumber": 19,
        "Description": "YesOrNoDwellingVisibleFromPublicRoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12172,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126917,
        "StepNumber": 20,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126915,
        "StepNumber": 21,
        "Description": "YesOrNoIsPrimaryResidenceInsuredWithAAA",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12156,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126913,
        "StepNumber": 22,
        "Description": "Nearest_Primary_Residence_Location",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12171,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126918,
        "StepNumber": 23,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126856,
        "StepNumber": 24,
        "Description": "YesOrNoSmokerResidingInHouse",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12124,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126874,
        "StepNumber": 25,
        "Description": "YesOrNoStromShutters",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12138,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126941,
        "StepNumber": 26,
        "Description": "StormShutters",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12166,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126914,
        "StepNumber": 27,
        "Description": "YesOrNoWillDwellingBeLeftUnprotected",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12125,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126931,
        "StepNumber": 28,
        "Description": "WindMitigationCertification",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": 12160,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126935,
        "StepNumber": 29,
        "Description": "InspectionDateInDwellingScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_InspectionDate",
        "CustomActionId": 12165,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126932,
        "StepNumber": 30,
        "Description": "Roof_Covering",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12161,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126933,
        "StepNumber": 31,
        "Description": "Roof_to_Wall_Connection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12162,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126934,
        "StepNumber": 32,
        "Description": "Roof_Deck_Attachment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12163,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126936,
        "StepNumber": 33,
        "Description": "SecondaryWaterResistance",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Unknown ",
        "CustomActionId": 12164,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126875,
        "StepNumber": 34,
        "Description": "YesOrNoLaminatedWindows",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12139,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126876,
        "StepNumber": 35,
        "Description": "YesOrNoSecondaryWaterResistance",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12140,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126877,
        "StepNumber": 36,
        "Description": "YesOrNoAttachedPoolEnclosur",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12141,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126879,
        "StepNumber": 37,
        "Description": "YesOrNoPool",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12143,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126880,
        "StepNumber": 38,
        "Description": "YesOrNoPoolSlide",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12144,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126881,
        "StepNumber": 39,
        "Description": "YesOrNoDivingBoards",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12145,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126882,
        "StepNumber": 40,
        "Description": "YesOrNoTrampoline",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12146,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126878,
        "StepNumber": 41,
        "Description": "NumberOfDogs",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "1",
        "CustomActionId": 12142,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126871,
        "StepNumber": 42,
        "Description": "Click to Load Page",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingHOEScreen:HODwellingSingleHOEPanelSet:HODwellingDetailsHOEDV:HomeRented-inputEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126921,
        "StepNumber": 43,
        "Description": "DaysHomeRentedToOthers",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12158,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126870,
        "StepNumber": 44,
        "Description": "YesOrNoWillDwellingBeLeftUnprotected",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12125,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126929,
        "StepNumber": 45,
        "Description": "YesOrNoDwellingUnderConstruction",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12167,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126897,
        "StepNumber": 46,
        "Description": "Will Dwelling be left unoccupied or vacant for over 60 consecutive days?",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingHOEScreen:HODwellingSingleHOEPanelSet:HODwellingDetailsHOEDV:DwellingUnoccupied_false-inputEl\"]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126896,
        "StepNumber": 47,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126920,
        "StepNumber": 48,
        "Description": "VerifyModernConstruction",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'modernCobnstructionValue_true-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126919,
        "StepNumber": 49,
        "Description": "Modern Construction Value",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'modernCobnstructionValue_true-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126895,
        "StepNumber": 50,
        "Description": "Systemetic Home Protection",
        "LocatorTypeId": 7,
        "Locator": "//input[@id='SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingHOEScreen:HODwellingSingleHOEPanelSet:HODwellingDetailsHOEDV:IsSysHomeInsOrdered_Acg_true-inputEl']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126923,
        "StepNumber": 51,
        "Description": "DwellingScreen_HO4",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12170,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126898,
        "StepNumber": 52,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126901,
        "StepNumber": 53,
        "Description": "YesOrNoIsPrimaryResidenceInsuredWithAAA",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12156,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126900,
        "StepNumber": 54,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126899,
        "StepNumber": 55,
        "Description": "Verify Dwelling Address",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'HODwellingLocationInput-inputEl')]",
        "ActionId": 62,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126902,
        "StepNumber": 56,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126888,
        "StepNumber": 57,
        "Description": "Click to Load Page",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingHOEScreen:HODwellingSingleHOEPanelSet:HODwellingDetailsHOEDV:HomeRented-inputEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126889,
        "StepNumber": 58,
        "Description": "ProtectionDetailsTabClick",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12147,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126857,
        "StepNumber": 59,
        "Description": "Click on Protection Details",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingHOEScreen:HODwellingSingleHOEPanelSet:DwellingSingleProtectionIdTab-btnInnerEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 25,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126890,
        "StepNumber": 60,
        "Description": "ClickOnAutoFillButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12452,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126891,
        "StepNumber": 61,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "4",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126887,
        "StepNumber": 62,
        "Description": "Verify YesOrNo1000FeetFireHydrant",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'distanceTofireHydrant_true-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executeNextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126873,
        "StepNumber": 63,
        "Description": "YesOrNo1000FeetFireHydrant",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12126,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126892,
        "StepNumber": 64,
        "Description": "YesOrNo1000FeetFireHydrant",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingHOEScreen:HODwellingSingleHOEPanelSet:HODwellingProtectionDetailsHOEDV:distanceTofireHydrant_true-inputEl\"]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126954,
        "StepNumber": 65,
        "Description": "RiskAddressDistance",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "5 miles or less",
        "CustomActionId": 12174,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126893,
        "StepNumber": 66,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126928,
        "StepNumber": 67,
        "Description": "verifyProtectionClassExists",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'protectionClass-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126905,
        "StepNumber": 68,
        "Description": "ProtectionClassSelection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_ProtectionClass",
        "CustomActionId": 12152,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126906,
        "StepNumber": 69,
        "Description": "CountrySelection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_Country",
        "CustomActionId": 12154,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126858,
        "StepNumber": 70,
        "Description": "YesOrNoSprinklerSystem",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12127,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126886,
        "StepNumber": 71,
        "Description": "Verify Responding Fire Department",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'respondingFireDepartmentId-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executeNextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126872,
        "StepNumber": 72,
        "Description": "RespondingFireDepartment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "TENNESSEE RIDGE FS",
        "CustomActionId": 12134,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126885,
        "StepNumber": 73,
        "Description": "RespondingFireDeptRandomSelection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12151,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126910,
        "StepNumber": 74,
        "Description": "Verify Within Wind Pool Area",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(text(),'Within Wind Pool Area')]",
        "ActionId": 23,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126911,
        "StepNumber": 75,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "3",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126912,
        "StepNumber": 76,
        "Description": "Verify Within Wind Pool Area is selected as No",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(@id,'WithinWindPoolArea-inputEl')]",
        "ActionId": 23,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126859,
        "StepNumber": 77,
        "Description": "YesOrNoDeadbolt",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12128,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126860,
        "StepNumber": 78,
        "Description": "FireAlarm",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Localized",
        "CustomActionId": 12129,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126861,
        "StepNumber": 79,
        "Description": "YesOrNoFireExtinguisher",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12130,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126862,
        "StepNumber": 80,
        "Description": "YesOrNoSmokeAlarm",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12131,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126863,
        "StepNumber": 81,
        "Description": "BurglarAlarm",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Centralized",
        "CustomActionId": 12132,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126907,
        "StepNumber": 82,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126908,
        "StepNumber": 83,
        "Description": "Click on Details Tab",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='Details']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126909,
        "StepNumber": 84,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126864,
        "StepNumber": 85,
        "Description": "WaterDetectionDevice",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Single Point Detection",
        "CustomActionId": 12133,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126938,
        "StepNumber": 86,
        "Description": "OVERRIDE",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'override-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126942,
        "StepNumber": 87,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126937,
        "StepNumber": 88,
        "Description": "Clear the value",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'HurricaneTerrainExposure-inputEl')]",
        "ActionId": 8,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126939,
        "StepNumber": 89,
        "Description": "Hurricane Terrain Exposure",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'HurricaneTerrainExposure-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "HVHZ",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126940,
        "StepNumber": 90,
        "Description": "OVERRIDE",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'override-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126943,
        "StepNumber": 91,
        "Description": "Verify Responding Fire Department",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'respondingFireDepartmentId-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executeNextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126922,
        "StepNumber": 92,
        "Description": "RespondingFireDepartment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "TENNESSEE RIDGE FS",
        "CustomActionId": 12134,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126944,
        "StepNumber": 93,
        "Description": "RespondingFireDeptRandomSelection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12151,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126924,
        "StepNumber": 94,
        "Description": "Verify YesOrNo1000FeetFireHydrant",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'distanceTofireHydrant_true-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executeNextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126925,
        "StepNumber": 95,
        "Description": "YesOrNo1000FeetFireHydrant",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12126,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126953,
        "StepNumber": 96,
        "Description": "Verify RiskAddressDistance",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(text(),'What is the risk address distance')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executeNextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126930,
        "StepNumber": 97,
        "Description": "RiskAddressDistance",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12174,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126865,
        "StepNumber": 98,
        "Description": "Click Next",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:Next-btnEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126926,
        "StepNumber": 99,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126927,
        "StepNumber": 100,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Dwelling_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12135,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyDwellingScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ntry{\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[contains(@id,'HODwellingHOEScreen:ttlBar')]\")));\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'HODwellingHOEScreen:ttlBar')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Dwelling\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Dwelling' screen successfully\";\n\t\t}\n\t}\n\tcatch(Exception e){\n\t\tString exceptionMsg = e.getMessage();\n\t\tactionResult.status = false;\n           \tactionResult.comments =  \"'Dwelling' screen is not displayed\";\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyDwellingScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12123,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ResidenceType extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry\n\t{\n\t  for(int retry=0; retry<5; retry++)\n\t  {\n\t\ttry\n\t\t{\n\n\t\tWebDriverWait wait=new WebDriverWait(driver, 20);\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'ResidenceType-inputEl')]\"))));\n\t\tWebElement residenceType=driver.findElement(By.xpath(\"//input[contains(@id,'ResidenceType-inputEl')]\"));\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tresidenceType.sendKeys(s);\n\t\tresidenceType.sendKeys(Keys.DELETE);\n\t\tresidenceType.sendKeys(inputValue);\n\t\tThread.sleep(2000);\n\t\t//residenceType.sendKeys(Keys.ENTER);\n\t\tresidenceType.sendKeys(Keys.TAB);\n\t\tThread.sleep(2000);\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";\n\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\tretry++;\n\t\t}\n\t  }\n\t}\t\n\tcatch(Exception e)\n\t{\n\t\tactionResult.status = false;\n       \tactionResult.comments =  e.getMessage();\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ResidenceType",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12148,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class NumberOfOccupants_Copy extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nWebElement occupants=driver.findElement(By.xpath(\"//input[contains(@id,'SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingHOEScreen:HODwellingSingleHOEPanelSet:HODwellingDetailsHOEDV:NumberofFamilies-inputEl')]\"));\n\t\n\toccupants.sendKeys(Keys.chord(Keys.CONTROL,\"a\"));\n\toccupants.sendKeys(Keys.DELETE);\n       occupants.sendKeys(inputValue);\n\tThread.sleep(2000);\n\toccupants.sendKeys(Keys.ENTER);\n\toccupants.sendKeys(Keys.TAB);\n\tThread.sleep(2000);\n\nactionResult.status = true;\nactionResult.comments = \"Executed Successfully\"; \n\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "NumberOfFamilies",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12153,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ZoneSelection extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\t//driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\tWebDriverWait wait = new WebDriverWait(driver,20);\n\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\tActions act = new Actions(driver);\n\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\tString inputValueVariable = inputValue;\n\n\tfor(int i =1; i<=5; i++) \n\t{\n\t\t\n\ttry \n\t\t{\t\n\t\t\t\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'HODwellingDetailsHOEDV:Zone')]\"))));\n\t\tWebElement zoneEle = driver.findElement(By.xpath(\"//input[contains(@id,'HODwellingDetailsHOEDV:Zone')]\"));\n\t\tjs.executeScript(\"arguments[0].setAttribute('style', 'border:2px solid red; background:yellow')\", zoneEle);\n\t\tjs.executeScript(\"arguments[0].click();\",zoneEle);\n\t\tzoneEle.sendKeys(selectText);\n\t\tact.moveToElement(zoneEle).sendKeys(Keys.DELETE).build().perform();\n\t\tjs.executeScript(\"arguments[0].value='\"+inputValueVariable+\"'\",zoneEle);\n\t\t//act.moveToElement(zoneEle).sendKeys(Keys.ENTER).build().perform();\n\t\tact.moveToElement(zoneEle).sendKeys(Keys.TAB).build().perform();\n\t\t\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"The Value for the Field has been Selected as : \"+inputValueVariable;\n\n\t\tbreak;\n\t\t}\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\t\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ZoneSelection",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12136,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class NumberOfOccupants extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nWebElement occupants=driver.findElement(By.xpath(\"//input[contains(@id,'NumberofOccupants-inputEl')]\"));\n\t\n\toccupants.sendKeys(Keys.chord(Keys.CONTROL,\"a\"));\n\toccupants.sendKeys(Keys.DELETE);\n       occupants.sendKeys(inputValue);\n\tThread.sleep(2000);\n\toccupants.sendKeys(Keys.ENTER);\n\toccupants.sendKeys(Keys.TAB);\n\tThread.sleep(2000);\n\nactionResult.status = true;\nactionResult.comments = \"Executed Successfully\"; \n\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "NumberOfOccupants",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12137,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoIsTheNameInsuredOriginalOwner extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement ownerYesEle = driver.findElement(By.xpath(\"//input[contains(@id,'IsNamedInsuredTheOriginalOwner_true-inputEl')]\"));\n\t\tWebElement ownerNoEle = driver.findElement(By.xpath(\"//input[contains(@id,'IsNamedInsuredTheOriginalOwner_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", ownerYesEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Is Named Insured the original owner? has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//smokerNoEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", ownerNoEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Is Named Insured the original owner? has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Is Named Insured the original owner? field is not available\"+MsgDetails;\n\t\t}\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoIsTheNameInsuredOriginalOwner",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12172,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesOrNoDwellingVisibleFromPublicRoad extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\ntry{\r\n    WebElement dwellingVisible    = driver.findElement(By.xpath(\"//input[contains(@id,'DwellingVisible_true-inputEl')]\"));\r\n    WebElement dwellingNotVisible = driver.findElement(By.xpath(\"//input[contains(@id,'DwellingVisible_false-inputEl')]\"));\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            \r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", dwellingVisible);\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"PublicRoad has been selected as : 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            //smokerNoEle.click();\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", dwellingNotVisible);\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"PublicRoad has been selected as : 'No'\";\r\n        }\r\n        \r\n        }\r\n        catch(Exception e){\r\n            String MsgDetails = e.getMessage();\r\n            actionResult.status = true;\r\n                actionResult.comments =  \"InsuredWithAAA field is not available\"+MsgDetails;\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoDwellingVisibleFromPublicRoad",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12156,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoIsPrimaryResidenceInsuredWithAAA extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebElement ownerYesEle = driver.findElement(By.xpath(\"//input[contains(@id,'InsuredWithAAA_true-inputEl')]\"));\n\t\tWebElement ownerNoEle = driver.findElement(By.xpath(\"//input[contains(@id,'InsuredWithAAA_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", ownerYesEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"InsuredWithAAA has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//smokerNoEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", ownerNoEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"InsuredWithAAA has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"InsuredWithAAA field is not available\"+MsgDetails;\n\t\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoIsPrimaryResidenceInsuredWithAAA",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12171,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Nearest_Primary_Residence_Location extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n       WebDriverWait wait = new WebDriverWait(driver,20);\r\n    JavascriptExecutor js = (JavascriptExecutor)driver;\r\n    Actions act = new Actions(driver);\r\n    String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n    String inputValueVariable = inputValue;\r\n    \r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        \r\n    try \r\n        {  \r\n    \r\n            WebElement nearestLocation = driver.findElement(By.xpath(\"//input[contains(@id,'ResidenceState-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", nearestLocation);\r\n            js.executeScript(\"arguments[0].click();\",nearestLocation);\r\n            Thread.sleep(1000);\r\n            WebElement nearestLocationValue = driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValueVariable+\"']\"));\r\n            js.executeScript(\"arguments[0].click();\",nearestLocationValue);\r\n            Thread.sleep(2000);\r\n\r\n           actionResult.status = true;\r\n        actionResult.comments = \"The Value for the Field has been Selected as : \"+inputValueVariable;\r\n\r\n        break;\r\n        }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Nearest_Primary_Residence_Location",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12124,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoSmokerResidingInHouse extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'SmokerResidingInHousehold_true-inputEl')]\"))));\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'SmokerResidingInHousehold_false-inputEl')]\"))));\n\t\t\n\t\tWebElement smokerYesEle = driver.findElement(By.xpath(\"//input[contains(@id,'SmokerResidingInHousehold_true-inputEl')]\"));\n\t\tWebElement smokerNoEle = driver.findElement(By.xpath(\"//input[contains(@id,'SmokerResidingInHousehold_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t//smokerYesEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", smokerYesEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Smoker Residing in household has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//smokerNoEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", smokerNoEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Smoker Residing in household has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Smoker Residing in household field is not available in Additonal Details Tab\"+MsgDetails;\n\t\t}\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoSmokerResidingInHouse",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12138,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoStromShutters extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement shutterYes= driver.findElement(By.xpath(\"//input[contains(@id,'StormShutters_true-inputEl')]\"));\n\t\tWebElement shutterNo= driver.findElement(By.xpath(\"//input[contains(@id,'StormShutters_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", shutterYes);\n           \t\t\n           \t\tactionResult.comments =  \"Storm Shutters has been selected as : 'Yes'\";\n\t\t\tactionResult.status = true;\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//smokerNoEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", shutterNo);\n           \t\t\n           \t\tactionResult.comments =  \"Storm Shutters has been selected as : 'No'\";\n\t\t\tactionResult.status = true;\n\t\t}\n\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\nif(MsgDetails.contains(\"no such element\")){\nactionResult.comments =  \"Storm Shutters field is not Applicable\";\nactionResult.status = true;\n}else{\nactionResult.comments =  \"Storm Shutters field is not available\"+MsgDetails;\nactionResult.status = false;\n}\n\n           \t\t\n\t\t}\n\t\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoStromShutters",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12166,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class StormShutters extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        WebDriverWait wait = new WebDriverWait(driver,60);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'StormShutters_Acg-inputEl')]\"))));\r\n        \r\n        WebElement policyTypeEle = driver.findElement(By.xpath(\"//*[contains(@id,'StormShutters_Acg-inputEl')]\"));\r\n    \r\n        policyTypeEle.click();\r\n        Thread.sleep(1000);\r\n        WebElement policyTypeValueEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'\"+inputValue+\"')]\"))));\r\n        policyTypeValueEle.click();\r\n        Thread.sleep(2000);\r\n        \r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "StormShutters",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12125,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoWillDwellingBeLeftUnprotected extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\t\t\n\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'DwellingUnoccupied_true-inputEl')]\")));\n\n\t\tWebElement dwellingYesEle= driver.findElement(By.xpath(\"//input[contains(@id,'DwellingUnoccupied_true-inputEl')]\"));\n\t\tWebElement dwellingNoEle= driver.findElement(By.xpath(\"//input[contains(@id,'DwellingUnoccupied_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t//dwellingYesEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", dwellingYesEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Will Dwelling be left unoccupied or vacant for over 60 consecutive days? has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//dwellingNoEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", dwellingNoEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Will Dwelling be left unoccupied or vacant for over 60 consecutive days? has been selected as : 'No'\";\n\t\t}\n\t\tThread.sleep(750);\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Will Dwelling be left unoccupied or vacant for over 60 consecutive days? field is not available in Additonal Details Tab\"+MsgDetails;\n\t\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoWillDwellingBeLeftUnprotected",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12160,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class WindMitigationCertification extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        WebDriverWait wait = new WebDriverWait(driver,60);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'WindMitigationCertification_Acg-inputEl')]\"))));\r\n        \r\n        WebElement policyTypeEle=driver.findElement(By.xpath(\"//*[contains(@id,'WindMitigationCertification_Acg-inputEl')]\"));\r\n    \r\n        policyTypeEle.click();\r\n        Thread.sleep(1000);\r\n        WebElement policyTypeValueEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'\"+inputValue+\"')]\"))));\r\n        policyTypeValueEle.click();\r\n        Thread.sleep(2000);\r\n        \r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "WindMitigationCertification",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12165,
    "Description": "To get the required effective date from system icon",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class InspectionDateInDwellingScreen extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\nfor(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n        driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);       \r\n        WebElement defaultEffectiveDate=driver.findElement(By.xpath(\"//input[contains(@id,'InspectionDate-inputEl')]\"));\r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        String settingText=settingContents.getText();\r\n        int dateTimeIndex=settingText.indexOf(\"Date/Time:\");\r\n        String dateTime=settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        System.out.println(\"date:\"+effectiveDate);\r\n        System.setProperty(\"EffectiveDate\", effectiveDate);\r\n              \r\n                    WebDriverWait wait=new WebDriverWait(driver, 20);\r\n            wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'InspectionDate-inputEl')]\"))));\r\n            WebElement effectiveDateEle = driver.findElement(By.xpath(\"//input[contains(@id,'InspectionDate-inputEl')]\"));\r\n            String s                    = Keys.chord(Keys.CONTROL,\"a\");\r\n            effectiveDateEle.sendKeys(s);\r\n            effectiveDateEle.sendKeys(Keys.DELETE);\r\n             //driver.findElement(By.xpath(\"//input[contains(@id,'InspectionDate-inputEl')]\")).clear();\r\n             Thread.sleep(2000);\r\n             effectiveDateEle.sendKeys(effectiveDate);\r\n        //driver.findElement(By.xpath(\"//input[contains(@id,'InspectionDate-inputEl')]\")).sendKeys(effectiveDate);\r\n            actionResult.SaveParameterValue(\"DT_InspectionDate\", effectiveDate);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"effective date entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "InspectionDateInDwellingScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12161,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Roof_Covering extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        WebDriverWait wait = new WebDriverWait(driver,60);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'RoofCovering_Acg-inputEl')]\"))));\r\n        \r\n        WebElement policyTypeEle=driver.findElement(By.xpath(\"//*[contains(@id,'RoofCovering_Acg-inputEl')]\"));\r\n    \r\n        policyTypeEle.click();\r\n        Thread.sleep(1000);\r\n        WebElement policyTypeValueEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'\"+inputValue+\"')]\"))));\r\n        policyTypeValueEle.click();\r\n        Thread.sleep(2000);\r\n        \r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Roof_Covering",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12162,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Roof_to_Wall_Connection extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        WebDriverWait wait = new WebDriverWait(driver,60);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'RoofToWallConnection_Acg-inputEl')]\"))));\r\n        \r\n        WebElement policyTypeEle=driver.findElement(By.xpath(\"//*[contains(@id,'RoofToWallConnection_Acg-inputEl')]\"));\r\n    \r\n        policyTypeEle.click();\r\n        Thread.sleep(1000);\r\n        WebElement policyTypeValueEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'\"+inputValue+\"')]\"))));\r\n        policyTypeValueEle.click();\r\n        Thread.sleep(2000);\r\n        \r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Roof_to_Wall_Connection",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12163,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Roof_Deck_Attachment extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        WebDriverWait wait = new WebDriverWait(driver,60);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'RoofDeckAttachmentFlPkg_Acg-inputEl')]\"))));\r\n        \r\n        WebElement policyTypeEle=driver.findElement(By.xpath(\"//*[contains(@id,'RoofDeckAttachmentFlPkg_Acg-inputEl')]\"));\r\n    \r\n        policyTypeEle.click();\r\n        Thread.sleep(1000);\r\n        WebElement policyTypeValueEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'\"+inputValue+\"')]\"))));\r\n        policyTypeValueEle.click();\r\n        Thread.sleep(2000);\r\n        \r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Roof_Deck_Attachment",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12164,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SecondaryWaterResistance extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        WebDriverWait wait = new WebDriverWait(driver,60);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'SecondaryWaterResistance_Acg-inputEl')]\"))));\r\n        \r\n        WebElement policyTypeEle = driver.findElement(By.xpath(\"//*[contains(@id,'SecondaryWaterResistance_Acg-inputEl')]\"));\r\n    \r\n        policyTypeEle.click();\r\n        Thread.sleep(1000);\r\n        WebElement policyTypeValueEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[@role='option' and contains(text(),'\"+inputValue+\"')]\"))));\r\n        policyTypeValueEle.click();\r\n        Thread.sleep(2000);\r\n        \r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }       \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SecondaryWaterResistance",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12139,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesOrNoLaminatedWindows extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\ntry{\r\n        WebElement laminatedYes= driver.findElement(By.xpath(\"//input[contains(@id,'LaminatedWindows_true-inputEl')]\"));\r\n        WebElement laminatedNo= driver.findElement(By.xpath(\"//input[contains(@id,'LaminatedWindows_false-inputEl')]\"));\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            \r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", laminatedYes);\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Laminated Windows has been selected as : 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            //smokerNoEle.click();\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", laminatedNo);\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Laminated Windows has been selected as : 'No'\";\r\n        }\r\n        \r\n        }\r\n        catch(Exception e){\r\n            String MsgDetails   = e.getMessage();\r\n            actionResult.status = true;\r\n                actionResult.comments =  \"Laminated Windows field is not available\"+MsgDetails;\r\n        }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoLaminatedWindows",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12140,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesOrNoSecondaryWaterResistance extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n        WebElement waterYes= driver.findElement(By.xpath(\"//input[contains(@id,'SecondaryWaterResistance_true-inputEl')]\"));\r\n        WebElement waterNo= driver.findElement(By.xpath(\"//input[contains(@id,'SecondaryWaterResistance_false-inputEl')]\"));\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            \r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", waterYes);\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Secondary Water Resistance has been selected as : 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            //smokerNoEle.click();\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", waterNo);\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Secondary Water Resistance has been selected as : 'No'\";\r\n        }\r\n        \r\n        }\r\n        catch(Exception e){\r\n            String MsgDetails   = e.getMessage();\r\n            actionResult.status = true;\r\n                actionResult.comments =  \"Secondary Water Resistance field is not available\"+MsgDetails;\r\n        }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoSecondaryWaterResistance",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12141,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesOrNoAttachedPoolEnclosur extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n        WebElement poolYes= driver.findElement(By.xpath(\"//input[contains(@id,'AttachedPoolEnclosure_true-inputEl')]\"));\r\n        WebElement poolNo= driver.findElement(By.xpath(\"//input[contains(@id,'AttachedPoolEnclosure_false-inputEl')]\"));\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            \r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", poolYes);\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Attached Pool Enclosure has been selected as : 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            //smokerNoEle.click();\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            js.executeScript(\"arguments[0].click();\", poolNo);\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Attached Pool Enclosure has been selected as : 'No'\";\r\n        }\r\n        \r\n        }\r\n        catch(Exception e){\r\n            String MsgDetails   = e.getMessage();\r\n            actionResult.status = true;\r\n                actionResult.comments =  \"Attached Pool Enclosure field is not available\"+MsgDetails;\r\n        }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoAttachedPoolEnclosur",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12143,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoPool extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement swimmingPoolYes= driver.findElement(By.xpath(\"//input[contains(@id,'SwimmingPool_true-inputEl')]\"));\n\t\tWebElement swimmingPoolNo= driver.findElement(By.xpath(\"//input[contains(@id,'SwimmingPool_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", swimmingPoolYes);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Swimming Pool has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//smokerNoEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", swimmingPoolNo);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Swimming Pool has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Swimming Pool field is not available\"+MsgDetails;\n\t\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoPool",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12144,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoPoolSlide extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement poolHavingSlideYes= driver.findElement(By.xpath(\"//input[contains(@id,'PoolHavingSlide_true-inputEl')]\"));\n\t\tWebElement poolHavingSlideNo= driver.findElement(By.xpath(\"//input[contains(@id,'PoolHavingSlide_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", poolHavingSlideYes);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Pool Having Slide has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//smokerNoEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", poolHavingSlideNo);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Pool Having Slide has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Pool Having Slide field is not available\"+MsgDetails;\n\t\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoPoolSlide",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12145,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoDivingBoards extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement poolYes= driver.findElement(By.xpath(\"//input[contains(@id,'PoolDivingBoard_true-inputEl')]\"));\n\t\tWebElement poolNo= driver.findElement(By.xpath(\"//input[contains(@id,'PoolDivingBoard_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", poolYes);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Pool Diving Board has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//smokerNoEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", poolNo);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Pool Diving Board has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\t\n           \t\tactionResult.comments =  \"Pool Diving Board field is not available\"+MsgDetails;\n\t\t}\n\n\t\tactionResult.status = true;\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoDivingBoards",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12146,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoTrampoline extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement trampolineYes= driver.findElement(By.xpath(\"//input[contains(@id,'Trampoline_true-inputEl')]\"));\n\t\tWebElement trampolineNo= driver.findElement(By.xpath(\"//input[contains(@id,'Trampoline_false-inputEl')]\"));\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", trampolineYes);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Trampoline has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t//smokerNoEle.click();\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", trampolineNo);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Trampoline has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Trampoline field is not available\"+MsgDetails;\n\t\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoTrampoline",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12142,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class NumberOfDogs extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nWebElement dogs=driver.findElement(By.xpath(\"//input[contains(@id,'NumberOfDogs_Acg-inputEl')]\"));\n\t\n\tdogs.sendKeys(Keys.chord(Keys.CONTROL,\"a\"));\n\tdogs.sendKeys(Keys.DELETE);\n      dogs.sendKeys(inputValue);\n\tThread.sleep(2000);\n\tdogs.sendKeys(Keys.ENTER);\n\tdogs.sendKeys(Keys.TAB);\n\tThread.sleep(2000);\n\nactionResult.comments = \"Entered No.Of Dogs\"+inputValue; \n\n\n}\ncatch(Exception e){\n\n           actionResult.comments =  \"No.Of Dogs Field is not required\";\n}\n\nactionResult.status = true;\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "NumberOfDogs",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12158,
    "Description": "Enter the number of days home rented to others.",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException; \r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType; \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.time.Duration;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class DaysHomeRentedToOthers extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n            \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            WebDriverWait wait = new WebDriverWait(driver,20);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act = new Actions(driver);\r\n            String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n            \r\n            for(int retry=0; retry<=2;retry++){\r\n                    try{\r\n                        \r\n                        String homeRentedValue = inputValue.toString().trim();\r\n                        \r\n                        //Entering Number of Days home rented to others\r\n                        WebElement homeRented = driver.findElement(By.xpath(\"//input[contains(@id,'HomeRented-inputEl')]\"));\r\n                        js.executeScript(\"arguments[0].style.border='2px solid red'\", homeRented);\r\n                        js.executeScript(\"arguments[0].click();\",homeRented);\r\n                        Thread.sleep(1000);\r\n                        homeRented.sendKeys(Keys.DELETE);\r\n                        Thread.sleep(1000);\r\n                        js.executeScript(\"arguments[0].value='\"+homeRentedValue+\"'\",homeRented);\r\n                        act.moveToElement(homeRented).sendKeys(Keys.TAB).build().perform();\r\n                        Thread.sleep(1000);\r\n                                               \r\n                        break;\r\n                    }\r\n                    catch(Exception e) {\r\n                        actionResult.comments =\"Max No. of Attepts reached : \" +retry + \" Expection Type : \" + e.getMessage();\r\n                        actionResult.status = false;\r\n                    }\r\n                }\r\n\r\n            \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"Number of Days home rented to others field is filled successfully\";\r\n        \r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n\r\n    }\r\n\r\n\r\n\r\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n  \r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "DaysHomeRentedToOthers",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12167,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesOrNoDwellingUnderConstruction extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n        WebElement extinguisherYesEle = driver.findElement(By.xpath(\"//input[contains(@id,'DwellingUnderConstruction_true-inputEl')]\"));\r\n        WebElement extinguisherNoEle  = driver.findElement(By.xpath(\"//input[contains(@id,'DwellingUnderConstruction_false-inputEl')]\"));\r\n        JavascriptExecutor executor   = (JavascriptExecutor)driver;\r\n        if(inputValue.equalsIgnoreCase(\"Yes\")){\r\n            \r\n            executor.executeScript(\"arguments[0].click();\", extinguisherYesEle);\r\n            Thread.sleep(1000);\r\n                WebElement DwellingDayTrue = driver.findElement(By.xpath(\"//input[contains(@id,'HODwellingDetailsHOEDV:ConstructionDate_true-inputEl')]\"));\r\n            executor.executeScript(\"arguments[0].style.border='2px solid red'\", DwellingDayTrue);\r\n                executor.executeScript(\"arguments[0].click();\",DwellingDayTrue);\r\n                Thread.sleep(1000);\r\n            WebElement DwellingProffContractorTrue = driver.findElement(By.xpath(\"//input[contains(@id,'HODwellingDetailsHOEDV:professionalcontractor_true-inputEl')]\"));\r\n            executor.executeScript(\"arguments[0].style.border='2px solid red'\", DwellingProffContractorTrue);\r\n                executor.executeScript(\"arguments[0].click();\",DwellingProffContractorTrue);\r\n                Thread.sleep(1000);\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"Dwelling has been selected as : 'Yes'\";\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\")){\r\n            \r\n                executor.executeScript(\"arguments[0].click();\", extinguisherNoEle);\r\n                actionResult.status   = true;\r\n                actionResult.comments = \"Dwelling has been selected as : 'No'\";\r\n        }\r\n        \r\n        }\r\n        catch(Exception e){\r\n            String MsgDetails     = e.getMessage();\r\n            actionResult.status   = false;\r\n            actionResult.comments = \"Dwelling field is not available\"+MsgDetails;\r\n        }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoDwellingUnderConstruction",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12170,
    "Description": "Here Resident Type is chosen as Secondary and State as California",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class DwellingScreen_HO4 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n         \r\n       try{\r\n       \r\n            \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            WebDriverWait wait = new WebDriverWait(driver,20);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act = new Actions(driver);\r\n            String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n            String[] dwellingParams = inputValue.split(\" AND \");\r\n            String stateName = dwellingParams[0].toString();\r\n            String DDResType = dwellingParams[1].toString();\r\n            String DDNoofOccupants = dwellingParams[2].toString();\r\n            String DDNoofFamilies = dwellingParams[3].toString();\r\n            String DDNewConCompYear = dwellingParams[4].toString();\r\n            String DDNmdInsOrgOwn = dwellingParams[5].toString();\r\n            String DDSmokerInHouse = dwellingParams[6].toString();\r\n            String DDUnderCon = dwellingParams[7].toString();\r\n            String DDSysHInspecOrd = dwellingParams[8].toString();\r\n            String DDStormShut = dwellingParams[9].toString();\r\n            String DDLaminatedWin = dwellingParams[10].toString();\r\n            String DDWaterRes = dwellingParams[11].toString();\r\n            String DDAttdPoolEncls = dwellingParams[12].toString();\r\n            String DDUnOccu = dwellingParams[13].toString();\r\n            String DDSwimPool = dwellingParams[14].toString();\r\n            String DDPoolSlide = dwellingParams[15].toString();\r\n            String DDDivingBrd = dwellingParams[16].toString();\r\n            String DDTrampoline = dwellingParams[17].toString();\r\n            String DDNoOfDogs = dwellingParams[18].toString();\r\n            String DPDPrtctCalss = dwellingParams[19].toString();\r\n            String DPDFireDept = dwellingParams[20].toString();\r\n            String DPDSprinkSys = dwellingParams[21].toString();\r\n            String DPDDeadbolts = dwellingParams[22].toString();\r\n            String DPDFireAlm = dwellingParams[23].toString();\r\n            String DPDFireExt = dwellingParams[24].toString();\r\n            String DPDSmokeDect = dwellingParams[25].toString();\r\n            String DPDBurglarAlm = dwellingParams[26].toString();\r\n            String DPDWaterDect = dwellingParams[27].toString();\r\n            \r\n            \r\n            \r\n            \r\n            ////////     Verifying the 'Dwelling' Screen      //////////////////////\r\n            \r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'HODwellingHOEScreen:ttlBar')]\"))));\r\n            WebElement DwellingPageTtlEle = driver.findElement(By.xpath(\"//span[contains(@id,'HODwellingHOEScreen:ttlBar')]\"));\r\n            \r\n            String actDwellingPageTtlEle = DwellingPageTtlEle.getText();\r\n            if(actDwellingPageTtlEle.equals(\"Dwelling\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \" 'Dwelling' screen has been displayed\";\r\n                \r\n            }\r\n            \r\n            ///////////// Verify the 'Details' Tab has opened or not   ///////////////\r\n            \r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//a[contains(@id,'DwellingDetailsSingleIDTab')]\"))));\r\n            WebElement DwellingDetailTabEle = driver.findElement(By.xpath(\"//a[contains(@id,'DwellingDetailsSingleIDTab')]\"));\r\n            String getDwellingDetailTabEleIndex = DwellingDetailTabEle.getAttribute(\"tabindex\");\r\n            if(getDwellingDetailTabEleIndex.equals(\"0\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"User is on 'Dwelling Details Tab' in Dwelling screen\";\r\n            }\r\n            else{\r\n                Thread.sleep(3000);\r\n                js.executeScript(\"arguments[0].click();\",DwellingDetailTabEle);\r\n                actionResult.status = true;\r\n                actionResult.comments =  \" Navigated to the 'Dwelling Details Tab' successfully\";\r\n            }\r\n            \r\n            ////// Residense Type ////////\r\n            for(int retry =1; retry<=5; retry++) \r\n            {\r\n            \r\n            try \r\n            {   \r\n                \r\n            wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'ResidenceType-inputEl')]\"))));\r\n            WebElement DDResTypeEle = driver.findElement(By.xpath(\"//input[contains(@id,'ResidenceType-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", DDResTypeEle);\r\n            js.executeScript(\"arguments[0].click();\",DDResTypeEle);\r\n            DDResTypeEle.sendKeys(selectText);\r\n            act.moveToElement(DDResTypeEle).sendKeys(Keys.DELETE).build().perform();\r\n            js.executeScript(\"arguments[0].value='\"+DDResType+\"'\",DDResTypeEle);\r\n            //act.moveToElement(DDResTypeEle).sendKeys(Keys.ENTER).build().perform();\r\n            Thread.sleep(2000);\r\n            act.moveToElement(DDResTypeEle).sendKeys(Keys.TAB).build().perform();\r\n            \r\n            actionResult.status = true;\r\n            actionResult.comments = \"The 'Residence Type' has been Selected as : \"+DDResType;\r\n\r\n            break;\r\n            }\r\n            catch(Exception e) {\r\n            actionResult.comments =\"Max No. of Attepts reached : \" +retry + \" Expection Type : \" + e.getMessage();\r\n            actionResult.status = false;\r\n            }\r\n            }\r\n            \r\n            ////// Is Primary Residence insured with AAA ////////\r\n            try \r\n            {   \r\n            Thread.sleep(3000); \r\n            WebElement insuredWithAAA = driver.findElement(By.xpath(\"//input[contains(@id,'InsuredWithAAA_false-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", insuredWithAAA);\r\n            js.executeScript(\"arguments[0].click();\",insuredWithAAA);\r\n            Thread.sleep(2000);\r\n            \r\n            WebElement dwellingVisible = driver.findElement(By.xpath(\"//input[contains(@id,'DwellingVisible_true-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", dwellingVisible);\r\n            js.executeScript(\"arguments[0].click();\",dwellingVisible);\r\n            Thread.sleep(2000);\r\n            \r\n            WebElement nearestLocation = driver.findElement(By.xpath(\"//input[contains(@id,'ResidenceState-inputEl')]\"));\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", nearestLocation);\r\n            js.executeScript(\"arguments[0].click();\",nearestLocation);\r\n            Thread.sleep(1000);\r\n            WebElement nearestLocationValue = driver.findElement(By.xpath(\"//li[@role='option' and text()='California']\"));\r\n            js.executeScript(\"arguments[0].click();\",nearestLocationValue);\r\n            Thread.sleep(2000);\r\n            \r\n            actionResult.status = true;\r\n            actionResult.comments = \"Executed Successfully\";\r\n            }\r\n            catch(Exception e) {\r\n            actionResult.comments =e.getMessage();\r\n            actionResult.status = true;\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "DwellingScreen_HO4",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12147,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ProtectionDetailsTabClick extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n        \tWebElement protectionDetails= driver.findElement(By.xpath(\"//span[contains(@id,'DwellingSingleProtectionIdTab-btnInnerEl')]\"));\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\twait.until(ExpectedConditions.elementToBeClickable(protectionDetails));\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", protectionDetails);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Navigated to Protection Details Screen\";\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ProtectionDetailsTabClick",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12126,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNo1000FeetFireHydrant extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\ntry{\n\n\t\t\n\t\tWebElement hydrantYesEle=driver.findElement(By.xpath(\"//input[contains(@id,'distanceTofireHydrant_true-inputEl')]\"));\n\t\tWebElement hydrantNoEle=driver.findElement(By.xpath(\"//input[contains(@id,'distanceTofireHydrant_false-inputEl')]\"));\n\t\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\tJavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\t\texecutor.executeScript(\"arguments[0].click();\", hydrantYesEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Is the Risk Address within 1000 feet of the nearest fire hydrant? has been selected as : 'Yes'\";\n\t\t}\n\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", hydrantNoEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Is the Risk Address within 1000 feet of the nearest fire hydrant? has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\t\nif(MsgDetails.contains(\"no such element\")){\nactionResult.comments =  \"'Is the Risk Address within 1000 feet of the nearest fire hydrant?' field is not APPLICABLE\"+MsgDetails;\nactionResult.status = true;\n}else{\nactionResult.comments =  \"'Is the Risk Address within 1000 feet of the nearest fire hydrant?' field is not available\"+MsgDetails;\nactionResult.status = false;\n}\n\n           \t\t\n\t\t}\n       \n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNo1000FeetFireHydrant",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12174,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class RiskAddressDistance extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n    \r\n     WebElement respondingFireDepartment = driver.findElement(By.xpath(\"//input[contains(@id,'HODwellingProtectionDetailsHOEDV:FireDepartment-inputEl')]\"));\r\n    \r\n\r\n    String s=Keys.chord(Keys.CONTROL,\"a\");\r\n    respondingFireDepartment.sendKeys(s);\r\n    respondingFireDepartment.sendKeys(Keys.DELETE);\r\n    respondingFireDepartment.sendKeys(inputValue);\r\n    Thread.sleep(2000);\r\n    //respondingFireDepartment.sendKeys(Keys.ENTER);\r\n    respondingFireDepartment.sendKeys(Keys.TAB);\r\n    Thread.sleep(4000);\r\n\r\nactionResult.status = true;\r\nactionResult.comments = \"Executed Successfully\"; \r\n\r\n}\r\ncatch(Exception e){\r\n\r\nactionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "RiskAddressDistance",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12152,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ProtectionClassSelection extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    //driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n    WebDriverWait wait = new WebDriverWait(driver,20);\r\n    JavascriptExecutor js = (JavascriptExecutor)driver;\r\n    Actions act = new Actions(driver);\r\n    String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n    String inputValueVariable = inputValue;\r\n\r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        \r\n    try \r\n        {   \r\n            \r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'protectionClass')]\"))));\r\n        WebElement protectionClassEle = driver.findElement(By.xpath(\"//input[contains(@id,'protectionClass')]\"));\r\n        js.executeScript(\"arguments[0].setAttribute('style', 'border:2px solid red; background:yellow')\", protectionClassEle);\r\n        js.executeScript(\"arguments[0].click();\",protectionClassEle);\r\n        protectionClassEle.sendKeys(selectText);\r\n        act.moveToElement(protectionClassEle).sendKeys(Keys.DELETE).build().perform();\r\n        js.executeScript(\"arguments[0].value='\"+inputValueVariable+\"'\",protectionClassEle);\r\n        //act.moveToElement(protectionClassEle).sendKeys(Keys.ENTER).build().perform();\r\n        act.moveToElement(protectionClassEle).sendKeys(Keys.TAB).build().perform();\r\n        \r\n        actionResult.status = true;\r\n        actionResult.comments = \"The Value for the Field has been Selected as : \"+inputValueVariable;\r\n\r\n        break;\r\n        }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = true;\r\n        }\r\n    }\r\n    \r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ProtectionClassSelection",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12154,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class CountrySelection extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\t//driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\tWebDriverWait wait = new WebDriverWait(driver,20);\n\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\tActions act = new Actions(driver);\n\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\tString inputValueVariable = inputValue;\n\n\tfor(int i =1; i<=5; i++) \n\t{\n\t\t\n\ttry \n\t\t{\t\n\t\t\t\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'HODwellingProtectionDetailsHOEDV:County-inputEl')]\"))));\n\t\tWebElement countryEle = driver.findElement(By.xpath(\"//input[contains(@id,'HODwellingProtectionDetailsHOEDV:County-inputEl')]\"));\n\t\tjs.executeScript(\"arguments[0].setAttribute('style', 'border:2px solid red; background:yellow')\", countryEle);\n\t\tjs.executeScript(\"arguments[0].click();\",countryEle);\n\t\tcountryEle.sendKeys(selectText);\n\t\tact.moveToElement(countryEle).sendKeys(Keys.DELETE).build().perform();\n\t\tjs.executeScript(\"arguments[0].value='\"+inputValueVariable+\"'\",countryEle);\n\t\t//act.moveToElement(countryEle).sendKeys(Keys.ENTER).build().perform();\n\t\tact.moveToElement(countryEle).sendKeys(Keys.TAB).build().perform();\n\t\t\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"The Value for the Field has been Selected as : \"+inputValueVariable;\n\n\t\tbreak;\n\t\t}\n\n\tcatch(Exception e) \n\t\t{\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\t\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CountrySelection",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12127,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoSprinklerSystem extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement sprinklerYesEle=driver.findElement(By.xpath(\"//input[contains(@id,'SprinklerSystem_true-inputEl')]\"));\n\t\tWebElement sprinklerNoEle=driver.findElement(By.xpath(\"//input[contains(@id,'SprinklerSystem_false-inputEl')]\"));\n\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\tJavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\t\texecutor.executeScript(\"arguments[0].click();\", sprinklerYesEle);\n\t\t\tsprinklerYesEle.click();\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Sprinkler System has been selected as : 'Yes'\";\n\t\t}\n\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", sprinklerNoEle);\n\t\t\tsprinklerNoEle.click();\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Sprinkler System has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Sprinkler System field is not available\"+MsgDetails;\n\t\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoSprinklerSystem",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12134,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class RespondingFireDepartment extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\n\r\nWebElement respondingFireDepartment=driver.findElement(By.xpath(\"//input[contains(@id,'respondingFireDepartmentId-inputEl')]\"));\r\n    \r\n\r\n    String s=Keys.chord(Keys.CONTROL,\"a\");\r\n    respondingFireDepartment.sendKeys(s);\r\n    respondingFireDepartment.sendKeys(Keys.DELETE);\r\n    respondingFireDepartment.sendKeys(inputValue);\r\n    Thread.sleep(2000);\r\n    //respondingFireDepartment.sendKeys(Keys.ENTER);\r\n    respondingFireDepartment.sendKeys(Keys.TAB);\r\n    Thread.sleep(4000);\r\n\r\nactionResult.status = true;\r\nactionResult.comments = \"Executed Successfully\"; \r\n\r\n\r\n}\r\ncatch(Exception e){\r\n\r\nactionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "RespondingFireDepartment",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12151,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.List;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class RespondingFireDeptRandomSelection extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try{\r\n        WebDriverWait wait = new WebDriverWait(driver,20);\r\n        Actions act = new Actions(driver);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'respondingFireDepartmentId-inputEl')]\"))));\r\n        \r\n        WebElement respondingFireDepartment=driver.findElement(By.xpath(\"//input[contains(@id,'respondingFireDepartmentId-inputEl')]\"));\r\n    \r\n        respondingFireDepartment.click();\r\n        Thread.sleep(1000);\r\n        List<WebElement> respondingFireDeptEle = driver.findElements(By.xpath(\"//li[@role='option' and contains(text(),'<none>')]/following-sibling::li\"));\r\n        \r\n        int n = respondingFireDeptEle.size();\r\n        System.out.println(\"Size of the Elements\"+n);\r\n        \r\n        if(n >= 1){\r\n        Thread.sleep(1000);\r\n        respondingFireDeptEle.get(1).click();\r\n        }else{\r\n        act.moveToElement(respondingFireDepartment).sendKeys(Keys.ARROW_DOWN).build().perform();\r\n        act.moveToElement(respondingFireDepartment).sendKeys(Keys.ENTER).build().perform();\r\n        Thread.sleep(2000);\r\n        }\r\n        \r\n        Thread.sleep(2000);\r\n        try{\r\n        driver.findElement(By.xpath(\"//input[contains(@id,'distanceTofireHydrant_false-inputEl')]\")).click();\r\n        }\r\n        catch(Exception e){\r\n        System.out.println(e.getMessage());\r\n        }\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n    \r\n    break;\r\n    }\r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = true;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "RespondingFireDeptRandomSelection",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12128,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoDeadbolt extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement deadboltYesEle=driver.findElement(By.xpath(\"//input[contains(@id,'Deadbolt_true-inputEl')]\"));\n\t\tWebElement deadboltNoEle=driver.findElement(By.xpath(\"//input[contains(@id,'Deadbolt_false-inputEl')]\"));\n\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\tJavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\t\texecutor.executeScript(\"arguments[0].click();\", deadboltYesEle);\n\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Deadbolt has been selected as : 'Yes'\";\n\t\t}\n\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", deadboltNoEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Deadbolt has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Deadbolt field is not available\"+MsgDetails;\n\t\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoDeadbolt",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12129,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.*;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FireAlarm extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\nWebDriverWait wait = new WebDriverWait(driver,30);          \r\nwait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'FireAlarmType')]\")));\r\nThread.sleep(750);\r\nWebElement fireAlarmType=driver.findElement(By.xpath(\"//input[contains(@id,'FireAlarmType')]\"));\r\n    \r\n\r\n    String s=Keys.chord(Keys.CONTROL,\"a\");\r\n    fireAlarmType.sendKeys(s);\r\n    fireAlarmType.sendKeys(Keys.DELETE);\r\n       fireAlarmType.sendKeys(inputValue);\r\n    Thread.sleep(2000);\r\n    //fireAlarmType.sendKeys(Keys.ENTER);\r\n    fireAlarmType.sendKeys(Keys.TAB);\r\n    Thread.sleep(2000);\r\n\r\nactionResult.status = true;\r\nactionResult.comments = \"Executed Successfully\"; \r\n\r\n\r\n}\r\ncatch(Exception e){\r\n\r\nactionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n}\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FireAlarm",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12130,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoFireExtinguisher extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement extinguisherYesEle=driver.findElement(By.xpath(\"//input[contains(@id,'FireExtinguisher_true-inputEl')]\"));\n\t\tWebElement extinguisherNoEle=driver.findElement(By.xpath(\"//input[contains(@id,'FireExtinguisher_false-inputEl')]\"));\n\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\tJavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\t\texecutor.executeScript(\"arguments[0].click();\", extinguisherYesEle);\n\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Fire Extinguisher has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", extinguisherNoEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Fire Extinguisher has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Fire Extinguisher field is not available\"+MsgDetails;\n\t\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoFireExtinguisher",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12131,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoSmokeAlarm extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement smokeYesEle=driver.findElement(By.xpath(\"//input[contains(@id,'SmokeAlarm_true-inputEl')]\"));\n\t\tWebElement smokeNoEle=driver.findElement(By.xpath(\"//input[contains(@id,'SmokeAlarm_false-inputEl')]\"));\n\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\tJavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\t\texecutor.executeScript(\"arguments[0].click();\", smokeYesEle);\n\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Smoke Alarm has been selected as : 'Yes'\";\n\t\t}\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", smokeNoEle);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Smoke Alarm has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Smoke Alarm field is not available\"+MsgDetails;\n\t\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoSmokeAlarm",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12132,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\nimport java.util.*;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class BurglarAlarm extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'BurglarAlarm-inputEl')]\")));\n\t\tWebElement burglarAlarmType=driver.findElement(By.xpath(\"//input[contains(@id,'BurglarAlarm-inputEl')]\"));\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tburglarAlarmType.sendKeys(s);\n\t\tburglarAlarmType.sendKeys(Keys.DELETE);\n\t\tburglarAlarmType.sendKeys(inputValue);\n\t\tThread.sleep(2000);\n\t\tburglarAlarmType.sendKeys(Keys.ENTER);\n\t\tburglarAlarmType.sendKeys(Keys.TAB);\n\t\tThread.sleep(2000);\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\"; \n\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "BurglarAlarm",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12133,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class WaterDetectionDevice extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\n\r\nWebElement waterType=driver.findElement(By.xpath(\"//input[contains(@id,'WaterDetection-inputEl')]\"));\r\n    \r\n\r\n    String s=Keys.chord(Keys.CONTROL,\"a\");\r\n    waterType.sendKeys(s);\r\n    waterType.sendKeys(Keys.DELETE);\r\n       waterType.sendKeys(inputValue);\r\n    Thread.sleep(2000);\r\n    //waterType.sendKeys(Keys.ENTER);\r\n    waterType.sendKeys(Keys.TAB);\r\n    Thread.sleep(2000);\r\n\r\nactionResult.status   = true;\r\nactionResult.comments = \"Executed Successfully\"; \r\n\r\n}\r\ncatch(Exception e){\r\n\r\nactionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "WaterDetectionDevice",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12556,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class AjaxWait extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry {\n\n\t\t\tJavascriptExecutor js = (JavascriptExecutor) driver;\n\t\t\tboolean status = false;\n\t\t\tfor (int i = 0; i <= 120; i++) {\n\t\t\t\tstatus = Boolean.valueOf((boolean) js.executeScript(\"return Ext.Ajax.isLoading();\"));\n\t\t\t\tSystem.out.println(status);\n\t\t\t\ttry {\n\t\t\t\t\tThread.sleep(500);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (!status) {\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tactionResult.status = true;\n\t\t\tactionResult.comments = \"Wait Processed\";\n\n\t\t} catch (Exception e) {\n\t\t\tactionResult.comments =e.getMessage();\n\t\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AjaxWait",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9359,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 126812,
        "StepNumber": 1,
        "Description": "verifyDwellingConstructionScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12203,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126831,
        "StepNumber": 2,
        "Description": "ClickOnAutoFillButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12452,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126813,
        "StepNumber": 3,
        "Description": "ConstructionType",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Frame",
        "CustomActionId": 12204,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126814,
        "StepNumber": 4,
        "Description": "PrimaryHeating",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Electric",
        "CustomActionId": 12205,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126815,
        "StepNumber": 5,
        "Description": "SecondaryHeating",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Other",
        "CustomActionId": 12206,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126816,
        "StepNumber": 6,
        "Description": "UnitFloorNumber",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": 12207,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126828,
        "StepNumber": 7,
        "Description": "NoOfUnits",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "1",
        "CustomActionId": 12210,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126827,
        "StepNumber": 8,
        "Description": "RoofShapeSelection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Flat",
        "CustomActionId": 12211,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126822,
        "StepNumber": 9,
        "Description": "HailResistantRoof",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": 12212,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126823,
        "StepNumber": 10,
        "Description": "select Roofing upgreaded ",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'roofUpgrade-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126824,
        "StepNumber": 11,
        "Description": "wat",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126825,
        "StepNumber": 12,
        "Description": "Enter roofing upgrade year",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'yearRoofUpgrade-inputEl')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "2021",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126821,
        "StepNumber": 13,
        "Description": "YesOrNoRoofAgeVerified",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": 12213,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126820,
        "StepNumber": 14,
        "Description": "Navigate to Next Field",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 54,
        "ParameterName": null,
        "ParameterValue": "TAB+",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126826,
        "StepNumber": 15,
        "Description": "Click on yes for Roof age verified",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'roofAgeVerification_true-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 35,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126811,
        "StepNumber": 16,
        "Description": "ReplacementCostEstimator",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12208,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126838,
        "StepNumber": 17,
        "Description": "VerifyApproximate Square",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@name,'ApproxSqFoot')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126818,
        "StepNumber": 18,
        "Description": "Approximate Square",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@name,'ApproxSqFoot')]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "100",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126845,
        "StepNumber": 19,
        "Description": "YearBuilt_txt",
        "LocatorTypeId": 7,
        "Locator": "//input[@id='SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingConstructionHOEScreen:HODwellingConstructionDetailsHOEDV:rceCheck:YearBuilt-inputEl']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": 10282,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126810,
        "StepNumber": 20,
        "Description": "YearBuilt_txt",
        "LocatorTypeId": 7,
        "Locator": "//input[@id='SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingConstructionHOEScreen:HODwellingConstructionDetailsHOEDV:rceCheck:YearBuilt-inputEl']",
        "ActionId": 43,
        "ParameterName": "P_YearBuilt",
        "ParameterValue": "2021",
        "CustomActionId": null,
        "ObjectDictionaryId": 10282,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126832,
        "StepNumber": 21,
        "Description": "Roof Shape Selection",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'RoofShape_Acg-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126846,
        "StepNumber": 22,
        "Description": "RoofShapeSelection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_RoofShape",
        "CustomActionId": 12211,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126854,
        "StepNumber": 23,
        "Description": "ReplacementCostEstimator",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12208,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126833,
        "StepNumber": 24,
        "Description": "No of units",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'NoOfUnits_Acg-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126847,
        "StepNumber": 25,
        "Description": "NoOfUnits",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_NoOfUnits",
        "CustomActionId": 12210,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126829,
        "StepNumber": 26,
        "Description": "verify Furnance",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'FurnaceAvailable_false-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126830,
        "StepNumber": 27,
        "Description": "Furnance No Cllick",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'FurnaceAvailable_true-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126843,
        "StepNumber": 28,
        "Description": "ClickOnBackButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12454,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126839,
        "StepNumber": 29,
        "Description": "WaitForPageLoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "2",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126840,
        "StepNumber": 30,
        "Description": "Verify Modern Cons Value",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='Modern Construction Value']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126848,
        "StepNumber": 31,
        "Description": "Modern Value Click No",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'modernCobnstructionValue_true-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": 10360,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126842,
        "StepNumber": 32,
        "Description": "Verify MCA Error Message",
        "LocatorTypeId": 7,
        "Locator": "//div[@class='message' and contains(text(),'Modern Construction Value')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126849,
        "StepNumber": 33,
        "Description": "ClickOnBackButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12454,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126841,
        "StepNumber": 34,
        "Description": "WaitForPageLoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "5",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126844,
        "StepNumber": 35,
        "Description": "Click MCA_YES",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'modernCobnstructionValue_true-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126837,
        "StepNumber": 36,
        "Description": "WaitForPageLoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126835,
        "StepNumber": 37,
        "Description": "VeiryRetreveBtn",
        "LocatorTypeId": 7,
        "Locator": "//*[text()='Retrieve Default RCE']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126819,
        "StepNumber": 38,
        "Description": "Retrieve Default RCE",
        "LocatorTypeId": 7,
        "Locator": "//*[text()='Retrieve Default RCE']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126850,
        "StepNumber": 39,
        "Description": "WaitForPageLoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126836,
        "StepNumber": 40,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126834,
        "StepNumber": 41,
        "Description": "WaitForPageLoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "4",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126817,
        "StepNumber": 42,
        "Description": "Click on Next",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:Next-btnEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126851,
        "StepNumber": 43,
        "Description": "WaitForPageLoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126852,
        "StepNumber": 44,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126853,
        "StepNumber": 45,
        "Description": "WaitForPageLoad",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Dwelling_Construction_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12203,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class verifyDwellingConstructionScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[contains(@id,'HODwellingConstructionHOEScreen:ttlBar')]\")));\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'HODwellingConstructionHOEScreen:ttlBar')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Dwelling Construction\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Dwelling Construction' screen successfully\";\n\n\t\t}\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "verifyDwellingConstructionScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12204,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.StaleElementReferenceException;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ConstructionType extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n       for(int i =1; i<=3; i++) {\r\n            \r\n            try {\r\n            WebDriverWait wait          = new WebDriverWait(driver, 20);\r\n            WebElement constructionType = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'ConstructionType-inputEl') or contains(@id,'ConstructionType_PKG-inputEl')]\"))));\r\n            \r\n            String s=Keys.chord(Keys.CONTROL,\"a\");\r\n            constructionType.sendKeys(s);\r\n            constructionType.sendKeys(Keys.DELETE);\r\n            constructionType.sendKeys(inputValue);\r\n            Thread.sleep(500);\r\n            //constructionType.sendKeys(Keys.ENTER);\r\n            constructionType.sendKeys(Keys.TAB);\r\n            Thread.sleep(2000);\r\n\r\n            actionResult.status = true;\r\n            actionResult.comments = \"Executed Successfully\"; \r\n            //System.out.println(\"excepted\");\r\n            break;\r\n\r\n            }\r\n            \r\n        catch(Exception e){\r\n\r\n            actionResult.status = true;\r\n              actionResult.comments =  e.getMessage();\r\n               \r\n          }}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ConstructionType",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12205,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport org.openqa.selenium.StaleElementReferenceException;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class PrimaryHeating extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n    \r\nWebElement primaryHeatingValue = driver.findElement(By.xpath(\"//input[contains(@id,'PrimaryHeating-inputEl') and @value = 'Electric']\"));\r\n\r\nactionResult.status = true;\r\n    actionResult.comments = \"Primary Heating is already Present\"; \r\n    \r\n}\r\n\r\ncatch(Exception ex){\r\n    \r\ntry{\r\n\r\nWebElement primaryHeating=driver.findElement(By.xpath(\"//input[contains(@id,'PrimaryHeating-inputEl')]\"));\r\n    \r\n    String s=Keys.chord(Keys.CONTROL,\"a\");\r\n    primaryHeating.sendKeys(s);\r\n    primaryHeating.sendKeys(Keys.DELETE);\r\n       primaryHeating.sendKeys(inputValue);\r\n    Thread.sleep(500);\r\n    primaryHeating.sendKeys(Keys.ENTER);\r\n    primaryHeating.sendKeys(Keys.TAB);\r\n    Thread.sleep(2000);\r\n\r\n    actionResult.status = true;\r\n    actionResult.comments = \"Executed Successfully\"; \r\n\r\n\r\n}\r\ncatch(StaleElementReferenceException st) {\r\n\r\nWebElement primaryHeating=driver.findElement(By.xpath(\"//input[contains(@id,'PrimaryHeating-inputEl')]\"));\r\n    \r\n    String s=Keys.chord(Keys.CONTROL,\"a\");\r\n    primaryHeating.sendKeys(s);\r\n    primaryHeating.sendKeys(Keys.DELETE);\r\n       primaryHeating.sendKeys(inputValue);\r\n    Thread.sleep(500);\r\n    primaryHeating.sendKeys(Keys.ENTER);\r\n    primaryHeating.sendKeys(Keys.TAB);\r\n    Thread.sleep(2000);\r\n\r\n    actionResult.status = true;\r\n    actionResult.comments = \"Executed Successfully\"; \r\n\r\n            \r\n        }\r\ncatch(Exception e){\r\n\r\n    actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n}\r\n}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PrimaryHeating",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12206,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport org.openqa.selenium.StaleElementReferenceException;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SecondaryHeating extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n     \r\n      for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'SecondaryHeatingType-inputEl')]\")));\r\n        WebElement secHeating=driver.findElement(By.xpath(\"//input[contains(@id,'SecondaryHeatingType-inputEl')]\"));\r\n    \r\n        String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        secHeating.sendKeys(s);\r\n        secHeating.sendKeys(Keys.DELETE);\r\n        secHeating.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        secHeating.sendKeys(Keys.ENTER);\r\n        secHeating.sendKeys(Keys.TAB);\r\n        Thread.sleep(2000);\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n    catch(Exception e)\r\n    {\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n    }}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SecondaryHeating",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12207,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class UnitFloorNumber extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nWebElement unitFloor=driver.findElement(By.xpath(\"//input[contains(@id,'UnitFloor-inputEl') or contains(@id,'NoOfUnits_Acg-inputEl')]\"));\n\t\n\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\tunitFloor.sendKeys(s);\n\tunitFloor.sendKeys(Keys.DELETE);\n       unitFloor.sendKeys(inputValue);\n\tThread.sleep(500);\n\tunitFloor.sendKeys(Keys.ENTER);\n\tunitFloor.sendKeys(Keys.TAB);\n\tThread.sleep(1000);\n\n\tactionResult.status = true;\n\tactionResult.comments = \"Executed Successfully\"; \n\n\n}\ncatch(NoSuchElementException ea){\n\n\tactionResult.status = true;\n       actionResult.comments =  \"Element not applicable\";\n}\ncatch(Exception e){\n\n\tactionResult.status = false;\n       actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "UnitFloorNumber",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12210,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport org.openqa.selenium.StaleElementReferenceException;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class NoOfUnits extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n if(inputValue.equals(\"Label\")){\nactionResult.status = true;\n           actionResult.comments =  \"No of units is auto filled Bydefault \";\n\n}\nelse\n{\n\n  for(int retry=0; retry<3; retry++)\n\t  {\n\t\ttry\n\t\t{\n\t\t\n\t\tWebElement noOfUnits=driver.findElement(By.xpath(\"//input[contains(@id,'NoOfUnits_Acg-inputEl')]\"));\n\t\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tnoOfUnits.sendKeys(s);\n\t\tnoOfUnits.sendKeys(Keys.DELETE);\n\t\tnoOfUnits.sendKeys(inputValue);\n\t\tThread.sleep(500);\n\t\t//noOfUnits.sendKeys(Keys.ENTER);\n\t\tnoOfUnits.sendKeys(Keys.TAB);\n\t\tThread.sleep(2000);\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";  \n\t\t\n\t\tbreak;\n\t\t}\n\t\t\n\tcatch(Exception e)\n\t{\n\t\tactionResult.status = true;\n       \tactionResult.comments =  e.getMessage();\n\t}\n}}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "NoOfUnits",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12211,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport org.openqa.selenium.StaleElementReferenceException;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class RoofShapeSelection extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n     if(inputValue.equals(\"Label\")){\nactionResult.status = true;\n           actionResult.comments =  \"No of units is auto filled Bydefault \";\n\n}\nelse\n{\n\n\ttry\n\t{\n\t  for(int retry=0; retry<5; retry++)\n\t  {\n\t\ttry\n\t\t{\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\tThread.sleep(400);\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'RoofShape_Acg-inputEl')]\")));\n\t\tWebElement roofShape=driver.findElement(By.xpath(\"//input[contains(@id,'RoofShape_Acg-inputEl')]\"));\n\t\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\troofShape.sendKeys(s);\n\t\troofShape.sendKeys(Keys.DELETE);\n\t\troofShape.sendKeys(inputValue);\n\t\tThread.sleep(500);\n\t\t//roofShape.sendKeys(Keys.ENTER);\n\t\troofShape.sendKeys(Keys.TAB);\n\t\tThread.sleep(2000);\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";  \n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(StaleElementReferenceException e)\n\t\t{\n\t\t\tactionResult.comments =  e.getMessage();\n\t\t}\n\t  }\n\t}\n\t\n\tcatch(Exception e)\n\t{\n\t\tactionResult.status = false;\n       \tactionResult.comments =  e.getMessage();\n\t}}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "RoofShapeSelection",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12212,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\nimport java.util.*;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class HailResistantRoof extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\tWebElement HailResistance=driver.findElement(By.xpath(\"//label[text()='\"+inputValue+\"']/../input[contains(@id,'HailResistant')]\"));\nHailResistance.click();\n\t\t\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Hail Resistant Roof is selected as \"+inputValue; \n\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(NoSuchElementException ae) {\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Hail Resistant Roof is not applicable\";\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "HailResistantRoof",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12213,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class YesOrNoRoofAgeVerified extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebElement roofverifiedYes=driver.findElement(By.xpath(\"//input[contains(@id,'roofAgeVerification_true-inputEl')]\"));\n\t\tWebElement roofverifiedNo=driver.findElement(By.xpath(\"//input[contains(@id,'roofAgeVerification_false-inputEl')]\"));\n\n\t\tif(inputValue.equalsIgnoreCase(\"Yes\")){\n\t\t\tJavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\t\texecutor.executeScript(\"arguments[0].click();\", roofverifiedYes);\n\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Roof verified has been selected as : 'Yes'\";\n\t\t}\n\n\t\tif(inputValue.equalsIgnoreCase(\"No\")){\n\t\t\t\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", roofverifiedNo);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Roof verified has been selected as : 'No'\";\n\t\t}\n\t\t\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString MsgDetails = e.getMessage();\n\t\t\tactionResult.status = false;\n           \t\tactionResult.comments =  \"Roof verified field is not available\"+MsgDetails;\n\t\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoRoofAgeVerified",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12208,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ReplacementCostEstimator extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ntry{\n\n\nWebElement RCETabElement;\nWebElement retrevieElement;\n\nRCETabElement= driver.findElement(By.xpath(\"//span[contains(@id,'JobWizardToolbarButtonSet:replacementCost-btnEl')]\"));\nActions act = new Actions(driver);\nact.moveToElement(RCETabElement).moveByOffset(40,0).click().build().perform();\n\nretrevieElement= driver.findElement(By.xpath(\"//span[contains(@id,'JobWizardToolbarButtonSet:replacementCost:retrieve-textEl')]\"));\nact.moveToElement(retrevieElement).moveByOffset(40,0).click().build().perform();\nThread.sleep(5000);\nactionResult.status = true;\nactionResult.comments = \"Executed Successfully\"; \n\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ReplacementCostEstimator",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10282,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//input[@id='SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HODwellingConstructionHOEScreen:HODwellingConstructionDetailsHOEDV:rceCheck:YearBuilt-inputEl']",
    "PageId": 1187,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YearBuilt_txt",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1187,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Dwelling Construction",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12454,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException; \nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType; \nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnBackButton extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tActions act = new Actions(driver);\n\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\t   \n\t\tfor(int i =1; i<=5; i++) \n\t\t{\t\t\n\t\ttry \n\t\t{\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'Prev-btnInnerEl')]\"))));\n\t\t\tWebElement backBtn = driver.findElement(By.xpath(\"//span[contains(@id,'Prev-btnInnerEl')]\"));\n\t\t\tjs.executeScript(\"arguments[0].setAttribute('style', 'border:2px solid red; background:yellow')\", backBtn);\n\t\t\tjs.executeScript(\"arguments[0].click();\",backBtn);\n\n\t\t\tThread.sleep(2500);\n\n\t\t\tactionResult.status = true;\n\t\t\tactionResult.comments = \"Back button cicked successfully\";\n\t\t\tbreak;\n\t\t\n\t\t}\n\t\tcatch(Exception e) \n\t\t{\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t\t}\t\t\t\n\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnBackButton",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10360,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//input[contains(@id,'modernCobnstructionValue_true-inputEl')]",
    "PageId": null,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Modern Value Click No",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9426,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 128059,
        "StepNumber": 1,
        "Description": "VarifyPageText",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Reports",
        "CustomActionId": 12443,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128060,
        "StepNumber": 2,
        "Description": "InsuranceScoreOrdered",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No-Opt Out",
        "CustomActionId": 11846,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128115,
        "StepNumber": 3,
        "Description": "InsScoreOrderForPNIandSNI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11861,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128057,
        "StepNumber": 4,
        "Description": "ClickOnInsuranceScoreButton",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'orderInsuranceScore')]",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 9970,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128107,
        "StepNumber": 5,
        "Description": "Click BypassInsuranceScore",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'OverrideInsuranceScoreReport-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128099,
        "StepNumber": 6,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128100,
        "StepNumber": 7,
        "Description": "Click checkbox AdjustedPremierLevel",
        "LocatorTypeId": 7,
        "Locator": "(//img[@class='x-grid-checkcolumn'])[1]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128114,
        "StepNumber": 8,
        "Description": "FL_ReportScreen_AdjustedAndUltimateCheckbox",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13634,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128121,
        "StepNumber": 9,
        "Description": "FL_ReportScreen_AdjustedCheckbox",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13641,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128101,
        "StepNumber": 10,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128102,
        "StepNumber": 11,
        "Description": "FL_ReportScreen_AdjustedPremierLevel",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13632,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128113,
        "StepNumber": 12,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128103,
        "StepNumber": 13,
        "Description": "Click checkbox UltimatePremierLevel",
        "LocatorTypeId": 7,
        "Locator": "(//img[@class='x-grid-checkcolumn'])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128122,
        "StepNumber": 14,
        "Description": "FL_ReportScreen_UltimateCheckbox",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13642,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128104,
        "StepNumber": 15,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128105,
        "StepNumber": 16,
        "Description": "FL_ReportScreen_UltimatePremierLevel",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13633,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128106,
        "StepNumber": 17,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128123,
        "StepNumber": 18,
        "Description": "FL_ReportScreen_SNIAdjustedCheckbox",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13643,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128116,
        "StepNumber": 19,
        "Description": "WAit",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128117,
        "StepNumber": 20,
        "Description": "FL_ReportScreen_SNIAdjustedPremier",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13639,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128124,
        "StepNumber": 21,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128125,
        "StepNumber": 22,
        "Description": "FL_ReportScreen_SNIUltimateCheckbox",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13644,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128118,
        "StepNumber": 23,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128119,
        "StepNumber": 24,
        "Description": "FL_ReportScreen_SNIUltimatePremier",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13640,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128120,
        "StepNumber": 25,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "10",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128072,
        "StepNumber": 26,
        "Description": "Click on losses and violations ",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'lossesAndViolationsCardTab-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128098,
        "StepNumber": 27,
        "Description": "LossesandViolationsTabOpened",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11849,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128073,
        "StepNumber": 28,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128074,
        "StepNumber": 29,
        "Description": "Click yes on losses",
        "LocatorTypeId": 7,
        "Locator": "(//input[@data-ref='inputEl']) [4]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128068,
        "StepNumber": 30,
        "Description": "Yes or No Violations",
        "LocatorTypeId": 7,
        "Locator": "//*[.='Driving violations?']//following:: input[1]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128108,
        "StepNumber": 31,
        "Description": "ClickOnBypassAutoLoss",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11864,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128109,
        "StepNumber": 32,
        "Description": "ClickOnByepassMVR",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11863,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128110,
        "StepNumber": 33,
        "Description": "Click on HomeLosses Tab",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='Home Losses']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128111,
        "StepNumber": 34,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128112,
        "StepNumber": 35,
        "Description": "Click on BypassHomeLosses",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'HomeLossPanelSet:bypassHomeLoss-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128063,
        "StepNumber": 36,
        "Description": "YesOrNoHomeLosses",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "DT_YesOrNoHomeLosses",
        "ParameterValue": null,
        "CustomActionId": 11857,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128075,
        "StepNumber": 37,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128084,
        "StepNumber": 38,
        "Description": "Home Losses Yes",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'homeLosses_true-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128076,
        "StepNumber": 39,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128077,
        "StepNumber": 40,
        "Description": "Click on OrderRetriveLosses",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:Report_AcgScreen:Report_AcgPanelSet:InsuranceScoreCV:LossAndViolationPanelSet:autoLossPanel:autoLoss:orderAutoLH-btnInnerEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128078,
        "StepNumber": 41,
        "Description": "Click on None ",
        "LocatorTypeId": 7,
        "Locator": " //div[text()='<none>']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128086,
        "StepNumber": 42,
        "Description": "NameAssured_1",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13762,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128094,
        "StepNumber": 43,
        "Description": "Reports_FirstLossDate",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13772,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128095,
        "StepNumber": 44,
        "Description": "LossPeriod1",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13764,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128087,
        "StepNumber": 45,
        "Description": "CauseOfLoss_1",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13766,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128088,
        "StepNumber": 46,
        "Description": "TotalAmountPaid_1",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13770,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128089,
        "StepNumber": 47,
        "Description": "HomeLossLocation1",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13768,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128085,
        "StepNumber": 48,
        "Description": "Click Add",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'homeLossPanel:homeLoss:Add-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128090,
        "StepNumber": 49,
        "Description": "NameAssured_2",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13763,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128096,
        "StepNumber": 50,
        "Description": "Reports_SecondLossDate",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13773,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128097,
        "StepNumber": 51,
        "Description": "LossPeriod_2",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13765,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128091,
        "StepNumber": 52,
        "Description": "CauseOfLoss_2",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13767,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128092,
        "StepNumber": 53,
        "Description": "TotalAmountPaid_2",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13771,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128093,
        "StepNumber": 54,
        "Description": "HomeLossLocation_2",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13769,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128079,
        "StepNumber": 55,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128081,
        "StepNumber": 56,
        "Description": "Down & Enter Key",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 54,
        "ParameterName": null,
        "ParameterValue": "arrow_down+,Enter+",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128082,
        "StepNumber": 57,
        "Description": "Down Key",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 54,
        "ParameterName": null,
        "ParameterValue": "arrow_down+",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128083,
        "StepNumber": 58,
        "Description": "Enter Key",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 54,
        "ParameterName": null,
        "ParameterValue": "Enter+",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128080,
        "StepNumber": 59,
        "Description": "add user ",
        "LocatorTypeId": 3,
        "Locator": "ext-element-2103",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128064,
        "StepNumber": 60,
        "Description": "Verify Losses Needs to Added",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'homeLoss:Add-btnInnerEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128065,
        "StepNumber": 61,
        "Description": "ClickOnOrderRetrieveHomeLossHistory_Home",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11854,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128066,
        "StepNumber": 62,
        "Description": "AddHomeLosses",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11858,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128067,
        "StepNumber": 63,
        "Description": "ClickOnHomeLossHistoryReportTab",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11859,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128069,
        "StepNumber": 64,
        "Description": "AddDrivingViolations_MI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12758,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128070,
        "StepNumber": 65,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128071,
        "StepNumber": 66,
        "Description": "AddDrivingViolations",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12754,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128061,
        "StepNumber": 67,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128058,
        "StepNumber": 68,
        "Description": "ClickOnNextBtnOnReportsPage",
        "LocatorTypeId": 7,
        "Locator": "//a[@id='SubmissionWizard:Next']",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 9972,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 10,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128062,
        "StepNumber": 69,
        "Description": "ClickOnNextBtnAndVerifyCoveragePage",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11860,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Reports",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11846,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class InsuranceScoreOrdered extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n      \r\n      try {\r\n\r\n            JavascriptExecutor js = (JavascriptExecutor) driver;\r\n            boolean status = false;\r\n            for (int i = 0; i <= 120; i++) {\r\n                status = Boolean.valueOf((boolean) js.executeScript(\"return Ext.Ajax.isLoading();\"));\r\n                System.out.println(status);\r\n                try {\r\n                    Thread.sleep(500);\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                if (!status) {\r\n\r\n                    break;\r\n                }\r\n            }\r\n            actionResult.status = true;\r\n            actionResult.comments = \"Wait Processed\";\r\n\r\n        } catch (Exception e) {\r\n            actionResult.comments =e.getMessage();\r\n        }\r\n      \r\n       for(int i =1; i<=5; i++) \r\n         {       \r\n        try \r\n        {   \r\n         \r\n        WebDriverWait wait    = new WebDriverWait(driver,25);\r\n        actionResult.comments = \"start\";\r\n        wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//input[contains(@id,'ScoreType')]\")));\r\n        WebElement insuranceScoreOrderEle = driver.findElement(By.xpath(\"//input[contains(@id,'ScoreType')]\"));\r\n       \r\n        JavascriptExecutor js             = (JavascriptExecutor)driver;\r\n        \r\n        Thread.sleep(5000);\r\n        \r\n        String insuranceScoreOrderValue = driver.findElement(By.xpath(\"//input[contains(@id,'ScoreType')]\")).getAttribute(\"value\");\r\n        actionResult.comments           = insuranceScoreOrderValue;\r\n        /*  if(insuranceScoreOrderValue.equals(\"Manual Entry\")){\r\n        WebElement primerIndicator = driver.findElement(By.xpath(\"//*[contains(@id,'PremierIndicator-inputEl')]\"));\r\n        WebElement primerLevel     = driver.findElement(By.xpath(\"//*[contains(@id,'PremierLevel2-inputEl')]\"));\r\n        \r\n        js.executeScript(\"arguments[0].click()\",primerIndicator);\r\n        primerIndicator.sendKeys(\"Above Average\");\r\n        Thread.sleep(500);\r\n        primerIndicator.sendKeys(Keys.ENTER);\r\n         actionResult.status   = true;\r\n         // actionResult.comments = \"Primer indicator selected\";\r\n     \r\n        \r\n        js.executeScript(\"arguments[0].click()\",primerLevel);\r\n        primerLevel.sendKeys(\"P6\");\r\n        Thread.sleep(500);\r\n        primerLevel.sendKeys(Keys.ENTER);\r\n        actionResult.status   = true;\r\n        //actionResult.comments = \"Primer lavel selected\";\r\n        \r\n    }*/\r\n    if(insuranceScoreOrderValue.equals(\"Yes-Order/Retrieve\")){\r\n    WebElement orderRetrieveButton = driver.findElement(By.xpath(\"//*[contains(@id,'orderInsuranceScore')]\"));\r\n        js.executeScript(\"arguments[0].click()\",orderRetrieveButton);\r\n        Thread.sleep(4000);\r\n        actionResult.status   = true;\r\n       try{\r\n            driver.findElement(By.xpath(\"//input[contains(@id,'ScoreType')]\"));\r\n            js.executeScript(\"arguments[0].click()\",orderRetrieveButton);\r\n            Thread.sleep(4000);\r\n            }catch(Exception exc) {\r\n                actionResult.comments = exc.getMessage();\r\n            }\r\n        \r\n    }\r\n        \r\n   \r\n   else{      \r\n     js.executeScript(\"arguments[0].click()\",insuranceScoreOrderEle);\r\n        //insuranceScoreOrderEle.click();\r\n         insuranceScoreOrderEle.sendKeys(inputValue);\r\n          Thread.sleep(500);\r\n           insuranceScoreOrderEle.sendKeys(Keys.ENTER);\r\n         actionResult.status   = true;\r\n           actionResult.comments = \"The Insurance Score Order has been selected as:\"+inputValue; \r\n       }\r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "InsuranceScoreOrdered",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11861,
    "Description": "Ordering the Insurance Score for both the Named Insured persons (PNI and SNI).",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class InsScoreOrderForPNIandSNI extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    \r\nfor(int i =1; i<=5; i++) \r\n{  \r\ntry{        \r\n        WebDriverWait wait = new WebDriverWait(driver,25);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//input[contains(@id,'ScoreType')])[1]\")));\r\n        WebElement insuranceScoreOrderEle = driver.findElement(By.xpath(\"(//input[contains(@id,'ScoreType')])[1]\"));\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;     \r\n         String insuranceScoreOrderValue = driver.findElement(By.xpath(\"(//input[contains(@id,'ScoreType')])[1]\")).getAttribute(\"value\");\r\n         actionResult.comments           = insuranceScoreOrderValue;\r\n            if(insuranceScoreOrderValue.equals(\"Yes-Order/Retrieve\")){\r\n                WebElement orderRetrieveButton = driver.findElement(By.xpath(\"(//*[contains(@id,'orderInsuranceScore')])[1]\"));\r\n                js.executeScript(\"arguments[0].click()\",orderRetrieveButton);\r\n                Thread.sleep(10000);\r\n                actionResult.status = true;\r\n                try{\r\n                    driver.findElement(By.xpath(\"//input[contains(@id,':ScoreType')]\"));\r\n                    js.executeScript(\"arguments[0].click()\",orderRetrieveButton);\r\n                    Thread.sleep(4000);\r\n                    }catch(Exception exc) {\r\n                        actionResult.comments = exc.getMessage();\r\n                    }\r\n        \r\n                }\r\n                else{      \r\n                    js.executeScript(\"arguments[0].click()\",insuranceScoreOrderEle);\r\n                 //insuranceScoreOrderEle.click();\r\n                 insuranceScoreOrderEle.sendKeys(inputValue);\r\n                 Thread.sleep(500);\r\n                 insuranceScoreOrderEle.sendKeys(Keys.ENTER);\r\n                 actionResult.status   = true;\r\n                 actionResult.comments = \"The Insurance Score Order has been selected as:\"+inputValue; \r\n             }\r\n             WebElement insuranceSecondScoreOrderEle = driver.findElement(By.xpath(\"//input[contains(@id,'SecondScoreType')]\"));\r\n             String insuranceScoreOrderValue2        = driver.findElement(By.xpath(\"//input[contains(@id,'SecondScoreType')]\")).getAttribute(\"value\");\r\n             actionResult.comments                   = insuranceScoreOrderValue2;\r\n             if(insuranceScoreOrderValue2.equals(\"Yes-Order/Retrieve\")){\r\n             WebElement orderRetrieveButton = driver.findElement(By.xpath(\"(//*[contains(@id,'orderInsuranceScore')])[2]\"));\r\n             js.executeScript(\"arguments[0].click()\",orderRetrieveButton);\r\n             Thread.sleep(10000);\r\n             actionResult.status = true;\r\n             try{\r\n                 driver.findElement(By.xpath(\"//input[contains(@id,'SecondScoreType')]\"));\r\n                 js.executeScript(\"arguments[0].click()\",orderRetrieveButton);\r\n                 Thread.sleep(4000);\r\n                 }catch(Exception exc) {\r\n                     actionResult.comments = exc.getMessage();\r\n                 }\r\n                 \r\n             }\r\n             else{      \r\n                 js.executeScript(\"arguments[0].click()\",insuranceSecondScoreOrderEle);\r\n                 //insuranceSecondScoreOrderEle.click();\r\n                 insuranceSecondScoreOrderEle.sendKeys(inputValue);\r\n                 Thread.sleep(500);\r\n                 insuranceSecondScoreOrderEle.sendKeys(Keys.ENTER);\r\n                 actionResult.status   = true;\r\n                 actionResult.comments = \"The Insurance Score Order has been selected as:\"+inputValue; \r\n            }\r\n        break;\r\n      }\r\n   \r\n      catch(Exception e){\r\n          String exceptionDetails = e.getMessage();\r\n          actionResult.status     = false;\r\n          actionResult.comments   = \"'The Insurance Score Order' field is not available in 'Reports screen'\"+exceptionDetails;\r\n      }\r\n  }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>\r\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "InsScoreOrderForPNIandSNI",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9970,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//a[contains(@id,'orderInsuranceScore')]",
    "PageId": 1152,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnInsuranceScoreButton",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1152,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Reports",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13634,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FL_ReportScreen_AdjustedAndUltimateCheckbox extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n       // for(int i =1; i<=5; i++) \r\n       //{       \r\n           //  try \r\n           //  {   \r\n                \r\n            //WebElement PlanandDiscountTabEle = driver.findElement(By.xpath(\"//a[contains(@id,'lossesAndViolationsCardTab')]\"));\r\n            //     WebElement checkbox = driver.findElement(By.xpath(\"(//img[contains(@class,'x-grid-checkcolumn')])[1]\"));\r\n            // checkbox.click();\r\n            /* Thread.sleep(3000);\r\n         \r\n            // WebElement checkboxone = driver.findElement(By.xpath(\"(//img[contains(@class,'x-grid-checkcolumn')])[2]\"));\r\n            //  checkboxone.click();\r\n            //   Thread.sleep(3000);\r\n       \r\n            // actionResult.status   = true;\r\n            // actionResult.comments = \"User able to click checkbox for Adjusted and Ultimate Premier Level\";\r\n        \r\n\r\n        //  }\r\n        //  catch(Exception e) {\r\n            //  actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n            //  actionResult.status = false;\r\n    //  }\r\n    } */  \r\n\r\n\r\n        try{\r\n        \r\n        WebDriverWait wait    = new WebDriverWait(driver,50);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        WebElement checkbox   = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"(//img[contains(@class,'x-grid-checkcolumn')])[1]\"))));\r\n        js.executeScript(\"arguments[0].click();\", checkbox);\r\n        Thread.sleep(3000);\r\n        \r\n        WebElement checkboxone = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"(//img[contains(@class,'x-grid-checkcolumn')])[2]\"))));\r\n        js.executeScript(\"arguments[0].click();\", checkboxone);\r\n        \r\n        actionResult.status = true;\r\n            actionResult.comments =  \"User able to click checkbox for Adjusted and Ultimate Premier Level\";\r\n        }\r\n        catch(Exception e){\r\n           actionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n        }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FL_ReportScreen_AdjustedAndUltimateCheckbox",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13641,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FL_ReportScreen_AdjustedCheckbox extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        try{\r\n        \r\n        WebDriverWait wait    = new WebDriverWait(driver,50);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        WebElement Adjusted   = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"(//img[contains(@class,'x-grid-checkcolumn')])[1]\"))));\r\n        \r\n        js.executeScript(\"arguments[0].click();\", Adjusted);\r\n        actionResult.status = true;\r\n            actionResult.comments =  \"Executed successfully\";\r\n        }\r\n        catch(Exception e){\r\n           actionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n        }\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FL_ReportScreen_AdjustedCheckbox",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13632,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.*;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FL_ReportScreen_AdjustedPremierLevel extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n     for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//td[@tabindex='-1']//div[contains(@style,'text-align:left;text-align')])[6]\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"(//td[@tabindex='-1']//div[contains(@style,'text-align:left;text-align')])[6]\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n     }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FL_ReportScreen_AdjustedPremierLevel",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13642,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FL_ReportScreen_UltimateCheckbox extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        try{\r\n        \r\n        WebDriverWait wait    = new WebDriverWait(driver,50);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        WebElement Ultimate   = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"(//img[contains(@class,'x-grid-checkcolumn')])[2]\"))));\r\n        \r\n        js.executeScript(\"arguments[0].click();\", Ultimate);\r\n        actionResult.status = true;\r\n            actionResult.comments =  \"Executed successfully\";\r\n        }\r\n        catch(Exception e){\r\n           actionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n        }\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FL_ReportScreen_UltimateCheckbox",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13633,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.*;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.time.Duration;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FL_ReportScreen_UltimatePremierLevel extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//td[@tabindex='-1']//div[contains(text(),'B0')])[1]\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"(//td[@tabindex='-1']//div[contains(text(),'B0')])[1]\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n     }\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FL_ReportScreen_UltimatePremierLevel",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13643,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FL_ReportScreen_SNIAdjustedCheckbox extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        try{\r\n        \r\n        WebDriverWait wait     = new WebDriverWait(driver,50);\r\n        JavascriptExecutor js  = (JavascriptExecutor)driver;\r\n        WebElement SNIAdjusted = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"(//img[contains(@class,'x-grid-checkcolumn')])[3]\"))));\r\n        \r\n        js.executeScript(\"arguments[0].click();\", SNIAdjusted);\r\n        actionResult.status = true;\r\n            actionResult.comments =  \"Executed successfully\";\r\n        }\r\n        catch(Exception e){\r\n           actionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n        }\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FL_ReportScreen_SNIAdjustedCheckbox",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13639,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FL_ReportScreen_SNIAdjustedPremier extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//td[@tabindex='-1']//div[contains(@style,'text-align:left;text-align')])[17]\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"(//td[@tabindex='-1']//div[contains(@style,'text-align:left;text-align')])[17]\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n      }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FL_ReportScreen_SNIAdjustedPremier",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13644,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FL_ReportScreen_SNIUltimateCheckbox extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        try{\r\n        \r\n        WebDriverWait wait     = new WebDriverWait(driver,50);\r\n        JavascriptExecutor js  = (JavascriptExecutor)driver;\r\n        WebElement SNIUltimate = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"(//img[contains(@class,'x-grid-checkcolumn')])[4]\"))));\r\n        \r\n        js.executeScript(\"arguments[0].click();\", SNIUltimate);\r\n        actionResult.status = true;\r\n            actionResult.comments =  \"Executed successfully\";\r\n        }\r\n        catch(Exception e){\r\n           actionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n        }\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FL_ReportScreen_SNIUltimateCheckbox",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13640,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class FL_ReportScreen_SNIUltimatePremier extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//td[@tabindex='-1']//div[contains(@style,'text-align:left;text-align')])[18]\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"(//td[@tabindex='-1']//div[contains(@style,'text-align:left;text-align')])[18]\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n      }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FL_ReportScreen_SNIUltimatePremier",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11849,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class LossesandViolationsTabOpened extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\t\t\n\t\t\t//WebElement PlanandDiscountTabEle = driver.findElement(By.xpath(\"//a[contains(@id,'lossesAndViolationsCardTab')]\"));\n\t\tdriver.findElement(By.xpath(\"//a[contains(@id,'lossesAndViolationsCardTab')]\")).click();\n\t\tThread.sleep(3000);\n\t\tString getLossesAndViolationsTabIndex = driver.findElement(By.xpath(\"//a[contains(@id,'lossesAndViolationsCardTab')]\")).getAttribute(\"tabindex\");\n\t\tif(getLossesAndViolationsTabIndex.equals(\"0\")){\n\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"User is on 'Losses And Violations Tab'\";\n\t\t}\n\t\telse{\n           \t\tactionResult.status = false;\n\t\t\tactionResult.comments =  \" ''Losses And Violations Tab' is not opened\";\n\t\t}\n\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "LossesandViolationsTabOpened",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11864,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnBypassAutoLoss extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\t\ttry{\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,50);\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\tWebElement byepass = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'bypassAutoLoss-inputEl')]\"))));\n\t\t\n\t\tjs.executeScript(\"arguments[0].click();\", byepass);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Executed successfully\";\n\t\t}\n\t\tcatch(Exception e){\n           actionResult.status = false;\n           actionResult.comments =  e.getMessage();\n\t\t}\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnBypassAutoLoss",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11863,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ClickOnByepassMVR extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n   \r\n for(int i =1; i<=5; i++) \r\n   {   \r\n       \r\n    try{\r\n        \r\n        WebDriverWait wait    = new WebDriverWait(driver,50);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        WebElement byepassMvr = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//input[contains(@id,'bypassMVR-inputEl')]\"))));\r\n        \r\n        js.executeScript(\"arguments[0].click();\", byepassMvr);\r\n        actionResult.status   = true;\r\n        actionResult.comments = \"Executed successfully\";\r\n        break;\r\n    }\r\n    catch(Exception e){\r\n           actionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n    }\r\n\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>\r\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnByepassMVR",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11857,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class YesOrNoHomeLosses extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n    \r\n        WebDriverWait wait = new WebDriverWait(driver,50);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        WebElement lossesTab = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'btnInnerEl') and contains(text(),'Losses')]\"))));\r\n    \r\n        //lossesTab.click();\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", lossesTab);\r\n        js.executeScript(\"arguments[0].click();\",lossesTab);\r\n                Thread.sleep(1000);\r\n        WebElement homeLossesYes = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'homeLosses_true-inputEl')]\"))));\r\n        WebElement homeLossesNo = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'homeLosses_false-inputEl')]\"))));\r\n        \r\n    \r\n        if(inputValue.equalsIgnoreCase(\"Yes\"))\r\n        {\r\n            if(homeLossesYes.getAttribute(\"tabindex\").equals(\"0\"))\r\n            {\r\n            homeLossesYes.click();\r\n                actionResult.status = true;\r\n                actionResult.comments =  \" 'homeLossesYes' has been selected as : 'Yes'\";\r\n            }\r\n            else{\r\n            actionResult.status = true;\r\n                actionResult.comments =  \" 'homeLossesNo' has been selected as : 'Yes'\";\r\n            }\r\n        }\r\n        if(inputValue.equalsIgnoreCase(\"No\"))\r\n        {\r\n            if(homeLossesNo.getAttribute(\"tabindex\").equals(\"0\"))\r\n            {\r\n            homeLossesNo.click();\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"'homeLossesNo' has been selected as : 'No'\";\r\n            }\r\n            else{\r\n            actionResult.status = true;\r\n                actionResult.comments =  \"'homeLossesYes' has been selected as : 'No'\";\r\n            }\r\n        }\r\n        \r\n        }\r\n        catch(Exception e){\r\n            String MsgDetails = e.getMessage();\r\n            actionResult.status = false;\r\n                actionResult.comments =  \"'homeLossesNo' field is not available in Losses \"+MsgDetails;\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "YesOrNoHomeLosses",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13762,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class NameAssured_1 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[2]/div\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[2]/div\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n      }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "NameAssured_1",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13772,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.Calendar;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Reports_FirstLossDate extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n       for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {  \r\n          \r\n            driver.manage().timeouts().implicitlyWait(120, TimeUnit.SECONDS);\r\n            WebDriverWait wait = new WebDriverWait(driver,40);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act = new Actions(driver);\r\n            String selectText=Keys.chord(Keys.CONTROL,\"a\"); \r\n         \r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        \r\n        String settingText            = settingContents.getText();\r\n        System.out.println(settingText);\r\n        int dateTimeIndex             = settingText.indexOf(\"Date/Time:\");\r\n        String dateTime               = settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat   = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        \r\n        // String[] date = effectiveDate.split(\"/\");\r\n        //   effectiveDate = date[1].toString();\r\n        //      int days = Integer.parseInt(effectiveDate);\r\n        //    int reqDays = days-8;\r\n        //    System.out.println(reqDays);\r\n        //    if(reqDays<0) {\r\n            //           reqDays = Math.abs(reqDays);\r\n            //       System.out.println(reqDays);\r\n                     \r\n        // }\r\n        //    String targetDay =  Integer.toString(reqDays);\r\n        //    targetDay = date[1].replace(effectiveDate, targetDay).toString();\r\n        //    String backDatedDate = date[0].toString()+\"/\"+targetDay+\"/\"+date[2].toString();\r\n        //    System.out.println(backDatedDate);\r\n        \r\n        //SimpleDateFormat date1=new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        Calendar c = Calendar.getInstance();\r\n        c.setTime(targetFormat.parse(effectiveDate));\r\n        c.add(Calendar.YEAR, -1);  // number of days to subtract\r\n        String backDatedDate = targetFormat.format(c.getTime());\r\n\r\n        System.out.println(backDatedDate);\r\n        //driver.findElement(By.xpath(\"//span[text()='Loss Date']//following::td[3]\")).sendKeys(backDatedDate);\r\n        \r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[text()='Loss Date']//following::td[3]\"))));\r\n        WebElement lossDate = driver.findElement(By.xpath(\"//span[text()='Loss Date']//following::td[3]//div\"));\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", lossDate);            \r\n        Thread.sleep(1000);\r\n        js.executeScript(\"arguments[0].click();\",lossDate);\r\n        //js.executeScript(\"arguments[0].value='\"+backDatedDate+\"'\",lossDate);\r\n        Thread.sleep(2000);\r\n        act.moveToElement(lossDate).sendKeys(backDatedDate).build().perform();\r\n        act.moveToElement(lossDate).sendKeys(Keys.TAB).build().perform();\r\n        Thread.sleep(2000); \r\n         \r\n        actionResult.status   = true;\r\n        actionResult.comments = \"effective date entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n          e.printStackTrace();\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Reports_FirstLossDate",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13764,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class LossPeriod1 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[4]/div\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[4]/div\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n      }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "LossPeriod1",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13766,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class CauseOfLoss_1 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[5]/div\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[5]/div\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n      }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CauseOfLoss_1",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13770,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.lang.String;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class TotalAmountPaid_1 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {\r\n\r\n        \r\n\r\n        WebDriverWait wait = new WebDriverWait(driver,30);\r\n            JavascriptExecutor js = (JavascriptExecutor) driver;\r\n            Actions act           = new Actions(driver);\r\n            WebElement targetacc2 = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[8]/div\"));\r\n            targetacc2.click();\r\n            Thread.sleep(2000);\r\n            act.moveToElement(targetacc2).click().sendKeys(actionResult.getDTParameter(\"DT_TotalAmountPaid\")).build().perform();\r\n            Thread.sleep(2000);\r\n            act.moveToElement(targetacc2).sendKeys(Keys.TAB).build().perform();\r\n            Thread.sleep(2000);\r\n\r\n  \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Entered The Lose Location Value\";\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "TotalAmountPaid_1",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13768,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.lang.String;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class HomeLossLocation1 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {\r\n\r\n        \r\n\r\n        WebDriverWait wait = new WebDriverWait(driver,30);\r\n            JavascriptExecutor js = (JavascriptExecutor) driver;\r\n            Actions act           = new Actions(driver);\r\n            WebElement targetacc2 = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[12]/div\"));\r\n        act.moveToElement(targetacc2).click().sendKeys(actionResult.getDTParameter(\"DT_LoseLocation\")).build().perform();\r\n            act.moveToElement(targetacc2).sendKeys(Keys.TAB).build().perform();\r\n            Thread.sleep(2000);\r\n\r\n  \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Entered The Lose Location Value\";\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "HomeLossLocation1",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13763,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class NameAssured_2 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[2]/descendant::td[3]/div\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[2]/descendant::td[3]/div\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n      }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "NameAssured_2",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13773,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.Calendar;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Reports_SecondLossDate extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n       for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {  \r\n          \r\n            driver.manage().timeouts().implicitlyWait(120, TimeUnit.SECONDS);\r\n            WebDriverWait wait = new WebDriverWait(driver,40);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act = new Actions(driver);\r\n            String selectText=Keys.chord(Keys.CONTROL,\"a\"); \r\n         \r\n\r\n        WebElement systemIcon=driver.findElement(By.xpath(\"//div[contains(@id,'tblinks-innerCt')]//a[2]\"));\r\n        systemIcon.click();\r\n        WebElement settingContents=driver.findElement(By.xpath(\"//span[contains(@id,'TabBar:envIndicatorTabBarLink-textEl')]\"));\r\n        \r\n        String settingText            = settingContents.getText();\r\n        System.out.println(settingText);\r\n        int dateTimeIndex             = settingText.indexOf(\"Date/Time:\");\r\n        String dateTime               = settingText.substring(dateTimeIndex+11);     \r\n        SimpleDateFormat targetFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        SimpleDateFormat dateFormat   = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        String effectiveDate;\r\n    \r\n        effectiveDate= targetFormat.format(dateFormat.parse(dateTime.substring(0, 10)));\r\n        \r\n        Calendar c = Calendar.getInstance();\r\n        c.setTime(targetFormat.parse(effectiveDate));\r\n        c.add(Calendar.YEAR, -2);  // number of days to subtract\r\n        String backDatedDate = targetFormat.format(c.getTime());\r\n\r\n        System.out.println(backDatedDate);\r\n        \r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[text()='Loss Date']//following::td[3]\"))));\r\n        WebElement lossDate = driver.findElement(By.xpath(\"//span[text()='Loss Date']//following::td[16]//div\"));\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", lossDate);            \r\n        Thread.sleep(1000);\r\n        js.executeScript(\"arguments[0].click();\",lossDate);\r\n        //js.executeScript(\"arguments[0].value='\"+backDatedDate+\"'\",lossDate);\r\n        Thread.sleep(2000);\r\n        act.moveToElement(lossDate).sendKeys(backDatedDate).build().perform();\r\n        act.moveToElement(lossDate).sendKeys(Keys.TAB).build().perform();\r\n        Thread.sleep(2000); \r\n         \r\n        actionResult.status   = true;\r\n        actionResult.comments = \"effective date entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n          e.printStackTrace();\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Reports_SecondLossDate",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13765,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class LossPeriod_2 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[2]/descendant::td[4]/div\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[2]/descendant::td[4]/div\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n      }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "LossPeriod_2",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13767,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class CauseOfLoss_2 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[2]/descendant::td[5]/div\")));\r\n        WebElement SelectOption = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[2]/descendant::td[5]/div\"));\r\n        SelectOption.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n      }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CauseOfLoss_2",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13771,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.lang.String;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class TotalAmountPaid_2 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {\r\n\r\n        \r\n\r\n        WebDriverWait wait = new WebDriverWait(driver,30);\r\n            JavascriptExecutor js = (JavascriptExecutor) driver;\r\n            Actions act           = new Actions(driver);\r\n            WebElement targetacc2 = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[2]/descendant::td[8]/div\"));\r\n            targetacc2.click();\r\n            Thread.sleep(2000);\r\n            act.moveToElement(targetacc2).click().sendKeys(actionResult.getDTParameter(\"DT_TotalAmountPaid\")).build().perform();\r\n            Thread.sleep(2000);\r\n            act.moveToElement(targetacc2).sendKeys(Keys.TAB).build().perform();\r\n            Thread.sleep(2000);\r\n\r\n  \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Entered The Lose Location Value\";\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    } \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "TotalAmountPaid_2",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13769,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.lang.String;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class HomeLossLocation_2 extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {\r\n\r\n        \r\n\r\n        WebDriverWait wait = new WebDriverWait(driver,30);\r\n            JavascriptExecutor js = (JavascriptExecutor) driver;\r\n            Actions act           = new Actions(driver);\r\n            WebElement targetacc2 = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[2]/descendant::td[12]/div\"));\r\n            act.moveToElement(targetacc2).click().sendKeys(actionResult.getDTParameter(\"DT_LoseLocation\")).build().perform();\r\n            act.moveToElement(targetacc2).sendKeys(Keys.TAB).build().perform();\r\n            Thread.sleep(2000);\r\n\r\n  \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Entered The Lose Location Value\";\r\n\r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "HomeLossLocation_2",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11854,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities; \r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\n\r\n\r\n//</Mandatory_libraries> \r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ClickOnOrderRetrieveHomeLossHistory_Home extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfor(int i =1; i<=5; i++) \r\n    {          \r\n    try{\r\n        \r\n        WebDriverWait wait = new WebDriverWait(driver,50);\r\n        JavascriptExecutor js=(JavascriptExecutor)driver;\r\n        WebElement orderRetrieveHomeLossHistory = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//a[contains(@id,'homeLoss:orderHLH')]\"))));\r\n        \r\n        js.executeScript(\"arguments[0].click();\", orderRetrieveHomeLossHistory);\r\n        Thread.sleep(10000);\r\n        /*if(driver.findElements(By.xpath(\"//*[text()='Received']\")).size()==0){\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//a[contains(@id,'homeLoss:orderHLH')]\"))));\r\n        js.executeScript(\"arguments[0].click();\", orderRetrieveHomeLossHistory);\r\n        Thread.sleep(3000);}*/\r\n        actionResult.status   = true;\r\n        actionResult.comments = \"Executed successfully\";\r\n        break;\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status   = false;\r\n        actionResult.comments = e.getMessage();\r\n    }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnOrderRetrieveHomeLossHistory_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11858,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class AddHomeLosses extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\ttry{\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,50);\n\t\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\t\n\t\tWebElement addHomeLossHistoryBtn = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'homeLoss:Add-btnInnerEl')]\"))));\n\t\t\tjs.executeScript(\"arguments[0].click();\", addHomeLossHistoryBtn);\n\t\t\n\t\t//WebElement checkHomeLoss = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//img[@id='ext-element-1329']\"))));\n\t\t//\tjs.executeScript(\"arguments[0].click();\", checkHomeLoss);\n\t\t\n\t\t\n\t\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Executed successfully\";\n\t}\n\tcatch(Exception e){\n            actionResult.status = false;\n            actionResult.comments =  e.getMessage();\n\t}\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AddHomeLosses",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11859,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnHomeLossHistoryReportTab extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n      \n\t\n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n        WebDriverWait wait = new WebDriverWait(driver,50);\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\tWebElement homeLossHistoryReport = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'homeLossReportTab-btnInnerEl')]\"))));\n\t\t\n\t\tjs.executeScript(\"arguments[0].click();\", homeLossHistoryReport);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Executed successfully\";\n\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n    ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnHomeLossHistoryReportTab",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12758,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class AddDrivingViolations_MI extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n     \r\n    \r\n    try{\r\n       \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            \r\n            WebDriverWait wait = new WebDriverWait(driver,20);\r\n            \r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            \r\n            Actions act = new Actions(driver);\r\n            \r\n            String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n            String[] violationParams = inputValue.split(\" AND \");\r\n            String driverName = violationParams[0].toString();\r\n            String occuranceDt = violationParams[1].toString();\r\n            String convictionDt = violationParams[2].toString();\r\n            String violationDesc = violationParams[3].toString();\r\n            \r\n            /////////    Enter into Losses and Violation   ///////////\r\n            \r\n            for(int retryA =1; retryA<=5; retryA++) \r\n            {\r\n                    \r\n                try \r\n                    {   \r\n                    wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'lossesAndViolationsCardTab-btnInnerEl')]\"))));\r\n                    WebElement lossedAndViolationElemt = driver.findElement(By.xpath(\"//*[contains(@id,'lossesAndViolationsCardTab-btnInnerEl')]\"));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", lossedAndViolationElemt);\r\n                                                            \r\n                    lossedAndViolationElemt.click();\r\n                    \r\n                    Thread.sleep(500);\r\n                                    \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Driver Name' has been Selected as : \"+driverName;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryA + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    Thread.sleep(3000);\r\n                                \r\n            ////////       Add Violation      ///////////////////////////////\r\n            for(int retryA =1; retryA<=5; retryA++) \r\n            {\r\n                    \r\n                try \r\n                    {   \r\n                    wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violation:Add-btnInnerEl')]\"))));\r\n                    WebElement addBtn = driver.findElement(By.xpath(\"//*[contains(@id,'violation:Add-btnInnerEl')]\"));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", addBtn);\r\n                    \r\n                                        \r\n                    addBtn.click();\r\n                    Thread.sleep(1000);\r\n                                        \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"Executed\";\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryA + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    Thread.sleep(2000);\r\n                    \r\n                    ///Number of Violations///////////////\r\n                    \r\n                    int noOfViolations = driver.findElements(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table\")).size();\r\n            \r\n            \r\n            \r\n            ////////       Driver Name      ///////////////////////////////\r\n            \r\n            for(int retryA =1; retryA<=5; retryA++) \r\n            {\r\n                    \r\n                try \r\n                    {   \r\n                        WebElement driverNameEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[2]/tbody/tr/td[2]/div[contains(text(),'none')]\"))));\r\n                    //WebElement driverNameEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[2]/tbody/tr/td[2]/div\"))));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", driverNameEle);\r\n                    \r\n                                        \r\n                    js.executeScript(\"arguments[0].click();\", driverNameEle);\r\n                    Thread.sleep(500);\r\n                    //act.moveToElement(driverNameEle).sendKeys(selectText).build().perform();\r\n                    //Thread.sleep(500);\r\n                    //act.moveToElement(driverNameEle).sendKeys(Keys.ARROW_DOWN).build().perform();\r\n                    act.moveToElement(driverNameEle).sendKeys(Keys.ARROW_DOWN).build().perform();\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(driverNameEle).sendKeys(Keys.ENTER).build().perform();\r\n                    //Thread.sleep(500);\r\n                    //js.executeScript(\"arguments[0].value='\"+driverName+\"'\",driverNameEle);\r\n                    //Thread.sleep(500);\r\n                    //act.moveToElement(driverNameEle).sendKeys(Keys.TAB).build().perform();\r\n                    Thread.sleep(2000);\r\n                                        \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Driver Name' has been Selected as : \"+driverName;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryA + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    Thread.sleep(3000);\r\n                    \r\n                    ////////       Occurance Date        ///////////////////////////////\r\n            \r\n                for(int retryB =1; retryB<=5; retryB++) \r\n                    {\r\n                    \r\n                    try \r\n                    {   \r\n                        WebElement occuranceDtEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[\"+noOfViolations+\"]/tbody/tr/td[3]/div\"))));\r\n                    \r\n                    //WebElement occuranceDtEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[2]/tbody/tr/td[3]/div\"))));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", occuranceDtEle);\r\n                    \r\n                    js.executeScript(\"arguments[0].click();\", occuranceDtEle);\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(occuranceDtEle).sendKeys(occuranceDt).build().perform();\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(occuranceDtEle).sendKeys(Keys.ENTER).build().perform();\r\n                    Thread.sleep(1000);\r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Occurance Date' has been Selected as : \"+occuranceDt;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryB + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    //////////   Conviction Date   //////////////////////////////\r\n                    for(int retryC =1; retryC<=5; retryC++) \r\n                    {\r\n                    \r\n                    try \r\n                    {   \r\n                        WebElement convictionDtEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[\"+noOfViolations+\"]/tbody/tr/td[4]/div\"))));\r\n    \r\n                    //WebElement convictionDtEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[2]/tbody/tr/td[4]/div\"))));\r\n                    \r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", convictionDtEle);\r\n                    js.executeScript(\"arguments[0].click();\", convictionDtEle);\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(convictionDtEle).sendKeys(convictionDt).build().perform();\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(convictionDtEle).sendKeys(Keys.ENTER).build().perform();\r\n                    Thread.sleep(2000);\r\n                    \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Personal Property' has been Entered as : \"+convictionDt;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryC + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    //////////   Violation Description   //////////////////////////////\r\n                    for(int retryD =1; retryD<=5; retryD++) \r\n                    {\r\n                    \r\n                    try \r\n                    {   \r\n                        WebElement violationDescEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[\"+noOfViolations+\"]/tbody/tr/td[6]/div[contains(text(),'none')]\"))));\r\n                    \r\n                    //WebElement violationDescEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[2]/tbody/tr/td[6]/div[contains(text(),'none')]\"))));\r\n                    \r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", violationDescEle);\r\n                    js.executeScript(\"arguments[0].click();\", violationDescEle);\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(violationDescEle).sendKeys(Keys.ARROW_UP).build().perform();\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(violationDescEle).sendKeys(Keys.ARROW_UP).build().perform();\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(violationDescEle).sendKeys(Keys.ENTER).build().perform();\r\n                    Thread.sleep(500);\r\n                    //js.executeScript(\"arguments[0].value='\"+violationDesc+\"'\",violationDescEle);\r\n                    //Thread.sleep(500);\r\n                    act.moveToElement(violationDescEle).sendKeys(Keys.TAB).build().perform();\r\n                    Thread.sleep(2000);\r\n                    \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Violation Description' has been Entered as : \"+violationDesc;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryD + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                            \r\n                    Thread.sleep(3000);\r\n                                                    \r\n            actionResult.comments = \"The Violation Details have been updated\" + driverName + occuranceDt + convictionDt + violationDesc;\r\n            actionResult.status = true;\r\n\r\n                }\r\n            \r\n            \r\n        catch(Exception e) {\r\n                actionResult.comments = e.getMessage();\r\n                actionResult.status = false;\r\n            }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AddDrivingViolations_MI",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12754,
    "Description": "To Enter Driving Violation using parameter as follows:\r\nDriverName AND 01012021 AND 02012021 AND Seatbelt Violation",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class AddDrivingViolations extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n     \r\n    \r\n    try{\r\n       \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            \r\n            WebDriverWait wait = new WebDriverWait(driver,20);\r\n            \r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            \r\n            Actions act = new Actions(driver);\r\n            \r\n            String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n            String[] violationParams = inputValue.split(\" AND \");\r\n            String driverName = violationParams[0].toString();\r\n            String occuranceDt = violationParams[1].toString();\r\n            String convictionDt = violationParams[2].toString();\r\n            String violationDesc = violationParams[3].toString();\r\n            \r\n            /////////    Enter into Losses and Violation   ///////////\r\n            \r\n            for(int retryA =1; retryA<=5; retryA++) \r\n            {\r\n                    \r\n                try \r\n                    {   \r\n                    wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'lossesAndViolationsCardTab-btnInnerEl')]\"))));\r\n                    WebElement lossedAndViolationElemt = driver.findElement(By.xpath(\"//*[contains(@id,'lossesAndViolationsCardTab-btnInnerEl')]\"));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", lossedAndViolationElemt);\r\n                                                            \r\n                    lossedAndViolationElemt.click();\r\n                    \r\n                    Thread.sleep(500);\r\n                                    \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Driver Name' has been Selected as : \"+driverName;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryA + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    Thread.sleep(3000);\r\n                                \r\n            ////////       Add Violation      ///////////////////////////////\r\n            for(int retryA =1; retryA<=5; retryA++) \r\n            {\r\n                    \r\n                try \r\n                    {   \r\n                    wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violation:Add-btnInnerEl')]\"))));\r\n                    WebElement addBtn = driver.findElement(By.xpath(\"//*[contains(@id,'violation:Add-btnInnerEl')]\"));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", addBtn);\r\n                    \r\n                                        \r\n                    addBtn.click();\r\n                    Thread.sleep(1000);\r\n                                        \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"Executed\";\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryA + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    Thread.sleep(2000);\r\n                    \r\n                    ///Number of Violations///////////////\r\n                    \r\n                    int noOfViolations = driver.findElements(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table\")).size();\r\n            \r\n            \r\n            \r\n            ////////       Driver Name      ///////////////////////////////\r\n            \r\n            for(int retryA =1; retryA<=5; retryA++) \r\n            {\r\n                    \r\n                try \r\n                    {   \r\n                        //WebElement driverNameEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[2]/tbody/tr/td[2]/div[contains(text(),'none')]\"))));\r\n                        WebElement driverNameEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[\"+noOfViolations+\"]/tbody/tr/td[2]/div\"))));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", driverNameEle);\r\n                    \r\n                                        \r\n                    js.executeScript(\"arguments[0].click();\", driverNameEle);\r\n                    Thread.sleep(1000);\r\n                    //act.moveToElement(driverNameEle).sendKeys(selectText).build().perform();\r\n                    //Thread.sleep(500);\r\n                    act.moveToElement(driverNameEle).sendKeys(Keys.ARROW_DOWN).build().perform();\r\n                    Thread.sleep(500);\r\n                    //act.moveToElement(driverNameEle).sendKeys(Keys.ARROW_DOWN).build().perform();\r\n                    //Thread.sleep(500);\r\n                    //act.moveToElement(driverNameEle).sendKeys(Keys.ENTER).build().perform();\r\n                    //Thread.sleep(500);\r\n                    //js.executeScript(\"arguments[0].value='\"+driverName+\"'\",driverNameEle);\r\n                    //Thread.sleep(500);\r\n                    act.moveToElement(driverNameEle).sendKeys(Keys.TAB).build().perform();\r\n                    Thread.sleep(2000);\r\n                                        \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Driver Name' has been Selected as : \"+driverName;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryA + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    Thread.sleep(3000);\r\n                    \r\n                    ////////       Occurance Date        ///////////////////////////////\r\n            \r\n                for(int retryB =1; retryB<=5; retryB++) \r\n                    {\r\n                    \r\n                    try \r\n                    {   \r\n                        WebElement occuranceDtEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[\"+noOfViolations+\"]/tbody/tr/td[3]/div\"))));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", occuranceDtEle);\r\n                    \r\n                    js.executeScript(\"arguments[0].click();\", occuranceDtEle);\r\n                    Thread.sleep(1000);\r\n                    act.moveToElement(occuranceDtEle).sendKeys(occuranceDt).build().perform();\r\n                    Thread.sleep(2000);\r\n                    act.moveToElement(occuranceDtEle).sendKeys(Keys.ENTER).build().perform();\r\n                    //act.moveToElement(occuranceDtEle).sendKeys(Keys.TAB).build().perform();\r\n                    Thread.sleep(2000);\r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Occurance Date' has been Selected as : \"+occuranceDt;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryB + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    //////////   Conviction Date   //////////////////////////////\r\n                    for(int retryC =1; retryC<=5; retryC++) \r\n                    {\r\n                    \r\n                    try \r\n                    {   \r\n                        \r\n                        WebElement convictionDtEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[\"+noOfViolations+\"]/tbody/tr/td[4]/div\"))));\r\n                    \r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", convictionDtEle);\r\n                    js.executeScript(\"arguments[0].click();\", convictionDtEle);\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(convictionDtEle).sendKeys(convictionDt).build().perform();\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(convictionDtEle).sendKeys(Keys.ENTER).build().perform();\r\n                    Thread.sleep(1000);\r\n                    \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Personal Property' has been Entered as : \"+convictionDt;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryC + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                    \r\n                    //////////   Violation Description   //////////////////////////////\r\n                    for(int retryD =1; retryD<=5; retryD++) \r\n                    {\r\n                    \r\n                    try \r\n                    {   \r\n                        \r\n                        //WebElement violationDescEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[\"noOfViolations\"]/tbody/tr/td[6]/div[contains(text(),'none')]\"))));\r\n                        WebElement violationDescEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'violationsPanel:ViolationLV-body')]/div/div/table[\"+noOfViolations+\"]/tbody/tr/td[6]/div\"))));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", violationDescEle);\r\n                    \r\n                    js.executeScript(\"arguments[0].click();\", violationDescEle);\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(violationDescEle).sendKeys(Keys.ARROW_UP).build().perform();\r\n                    Thread.sleep(500);\r\n                    act.moveToElement(violationDescEle).sendKeys(Keys.ARROW_UP).build().perform();\r\n                    Thread.sleep(500);\r\n                    //act.moveToElement(violationDescEle).sendKeys(Keys.ENTER).build().perform();\r\n                    Thread.sleep(500);\r\n                    //js.executeScript(\"arguments[0].value='\"+violationDesc+\"'\",violationDescEle);\r\n                    //Thread.sleep(500);\r\n                    act.moveToElement(violationDescEle).sendKeys(Keys.TAB).build().perform();\r\n                    Thread.sleep(1000);\r\n                    \r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"The 'Violation Description' has been Entered as : \"+violationDesc;\r\n\r\n                    break;\r\n                    }\r\n                    catch(Exception e) {\r\n                    actionResult.comments =\"Max No. of Attepts reached : \" +retryD + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                    }\r\n                    }\r\n                            \r\n                    Thread.sleep(3000);\r\n                                                    \r\n            actionResult.comments = \"The Violation Details have been updated\" + driverName + occuranceDt + convictionDt + violationDesc;\r\n            actionResult.status = true;\r\n\r\n                }\r\n            \r\n            \r\n        catch(Exception e) {\r\n                actionResult.comments = e.getMessage();\r\n                actionResult.status = false;\r\n            }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AddDrivingViolations",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9972,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//a[@id='SubmissionWizard:Next']",
    "PageId": 1152,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnNextBtnOnReportsPage",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11860,
    "Description": "Clicking next button in reports screen and verify whether it's navigated to covreages screen",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnNextBtnAndVerifyCoveragePage extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\ttry{\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,50);\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\t\n\t\tWebElement nextBtn = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//a[@id='SubmissionWizard:Next']\"))));\n\t\t\n\t\tjs.executeScript(\"arguments[0].click();\", nextBtn);\n\t\t\n\t\tString actPageTitle = driver.findElement(By.xpath(\"//span[contains(@id,'HOCoveragesHOEScreen:ttlBar')]\")).getText();\n\t\tThread.sleep(2000);\n\t\tif(actPageTitle.equals(\"Coverages\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Coverages' screen successfully\";\n\t\t}\n\t}\n\tcatch(Exception e){\n\t\tString exceptionMsg = e.getMessage();\n\t\tactionResult.status = false;\n           \tactionResult.comments =  \"'Coverages' screen is not displayed\"+exceptionMsg;\n\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnNextBtnAndVerifyCoveragePage",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9354,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 126739,
        "StepNumber": 1,
        "Description": "VerifyCoveragesScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12239,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126743,
        "StepNumber": 2,
        "Description": "AllOtherPerils",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_Peril",
        "CustomActionId": 12242,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126761,
        "StepNumber": 3,
        "Description": "Peril_Cov",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_Peril",
        "CustomActionId": 12244,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126741,
        "StepNumber": 4,
        "Description": "TropicalCyclone",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_TropicalCyclone",
        "CustomActionId": 12240,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126742,
        "StepNumber": 5,
        "Description": "WindstromAndHail",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_WindStromAndHail",
        "CustomActionId": 12241,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126744,
        "StepNumber": 6,
        "Description": "WaterDamage_SewerDrainAndSumpPump",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_WaterDamage",
        "ParameterValue": "DT_WaterDamage",
        "CustomActionId": 12311,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126745,
        "StepNumber": 7,
        "Description": "Personal_Injury",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_PersonalInjury",
        "ParameterValue": null,
        "CustomActionId": 12313,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126746,
        "StepNumber": 8,
        "Description": "SpecifiedBusinessPursuits",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_SpecifiedBusinessPursuits",
        "ParameterValue": null,
        "CustomActionId": 12314,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126763,
        "StepNumber": 9,
        "Description": "SpecifiedBusinessPursuits_Copy",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13456,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126747,
        "StepNumber": 10,
        "Description": "BuildingCodes",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_BuildingCodes",
        "ParameterValue": null,
        "CustomActionId": 12318,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126748,
        "StepNumber": 11,
        "Description": "ElectronicDataRestoration",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_ElectronicDataRestoration",
        "ParameterValue": null,
        "CustomActionId": 12319,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126750,
        "StepNumber": 12,
        "Description": "ExpandedCoverage_JewelryWatchesAndFurs",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_ExpandedCoverage_JewelryWatchesAndFurs",
        "ParameterValue": null,
        "CustomActionId": 12320,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126751,
        "StepNumber": 13,
        "Description": "ExpandedCoverage_Cameras",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_ExpandedCoverage_Cameras",
        "ParameterValue": null,
        "CustomActionId": 12321,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126752,
        "StepNumber": 14,
        "Description": "ExpandedCoverage_MusicalInstruments",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_ExpandedCoverage_MusicalInstruments",
        "ParameterValue": null,
        "CustomActionId": 12322,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126753,
        "StepNumber": 15,
        "Description": "ExpandedCoverage_SportsEquipment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_ExpandedCoverage_SportsEquipment",
        "ParameterValue": null,
        "CustomActionId": 12323,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126754,
        "StepNumber": 16,
        "Description": "ExpandedCoverage_TheftOfSilverware",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_ExpandedCoverage_TheftOfSilverware",
        "ParameterValue": null,
        "CustomActionId": 12324,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126755,
        "StepNumber": 17,
        "Description": "FairRentalIncome",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_FairRentalIncome",
        "ParameterValue": null,
        "CustomActionId": 12325,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126756,
        "StepNumber": 18,
        "Description": "FireDepartmentCharges",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_FireDepartmentCharges",
        "ParameterValue": null,
        "CustomActionId": 12326,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126762,
        "StepNumber": 19,
        "Description": "Golf_Cart",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13455,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126757,
        "StepNumber": 20,
        "Description": "GreenUpgrades",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_GreenUpgrades",
        "ParameterValue": null,
        "CustomActionId": 12327,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126758,
        "StepNumber": 21,
        "Description": "HomeHostingAndIncidentalRentalCoverage",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_HomeHostingAndIncidentalRentalCoverage",
        "ParameterValue": null,
        "CustomActionId": 12328,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126749,
        "StepNumber": 22,
        "Description": "LossAssessments",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_LossAssessments",
        "ParameterValue": null,
        "CustomActionId": 12331,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126759,
        "StepNumber": 23,
        "Description": "PersonalPropertyReimbursement",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_PersonalPropertyReimbursement",
        "ParameterValue": null,
        "CustomActionId": 12329,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126760,
        "StepNumber": 24,
        "Description": "UnitOwnersRentedToOthers",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "P_UnitOwnersRentedToOthers",
        "ParameterValue": null,
        "CustomActionId": 12330,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126740,
        "StepNumber": 25,
        "Description": "Next button on Coveerages page",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:Next-btnInnerEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Coverages_Home_Copy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12239,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyCoveragesScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t       wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[contains(@id,'HOCoveragesHOEScreen:ttlBar') or contains(@id,'PKG_HOCoveragesHOEScreen:ttlBar')]\"))));\n\n\t\tString actPageTitle = driver.findElement(By.xpath(\"//*[contains(@id,'HOCoveragesHOEScreen:ttlBar') or contains(@id,'PKG_HOCoveragesHOEScreen:ttlBar')]\")).getText();\n\t\tThread.sleep(2000);\n\t\tif(actPageTitle.equals(\"Coverages\") || actPageTitle.equals(\"Home Coverages\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Coverages' screen successfully\";\n\t\t}\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyCoveragesScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12242,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class AllOtherPerils extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\n\r\n    //WebElement peril=driver.findElement(By.id(\"SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HOCoveragesHOEScreen:HOMainCoveragesHOEPanelSet:coveragePatterIterId1:0:HOCoverageInputSet:CovPatternInputGroup:0:CovTermPOCHOEInputSet:OptionTermInput-inputEl\"));\r\n    WebElement peril = driver.findElement(By.xpath(\"//input[contains(@id,'HOCoverageInputSet:CovPatternInputGroup:0:CovTermPOCHOEInputSet:OptionTermInput-inputEl')]\"));\r\n    String s         = Keys.chord(Keys.CONTROL,\"a\");\r\n    peril.sendKeys(s);\r\n    peril.sendKeys(Keys.DELETE);\r\n       peril.sendKeys(inputValue);\r\n    Thread.sleep(1000);\r\n    //peril.sendKeys(Keys.ENTER);\r\n    peril.sendKeys(Keys.TAB);\r\n    Thread.sleep(2000);\r\n\r\n\r\nactionResult.status = true;\r\nactionResult.comments = \"Executed Successfully\"; \r\n\r\n\r\n}\r\ncatch(Exception e){\r\n\r\nactionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n}\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AllOtherPerils",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12244,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class Peril_Cov extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n\t\t\tWebElement limit=driver.findElement(By.id(\"SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:HOCoveragesHOEScreen:HOMainCoveragesHOEPanelSet:coveragePatterIterId1:0:HOCoverageInputSet:CovPatternInputGroup:0:CovTermPOCHOEInputSet:OptionTermInput-inputEl\"));\n\nlimit.click();\n\t\n\tThread.sleep(1000);\nif(inputValue.trim().contains(\"1000\")){\nlimit.sendKeys(Keys.ARROW_UP);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_UP);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_UP);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n}else if(inputValue.trim().contains(\"1500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n}else if(inputValue.trim().contains(\"2000\")){\n\tThread.sleep(2000);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n}else if(inputValue.trim().contains(\"2500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Peril Cover is selected with limit \"+inputValue;\n\t\t\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Peril_Cov",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12240,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class TropicalCyclone extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\n\r\n    WebDriverWait wait = new WebDriverWait(driver,50);\r\n    wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(text(),'Tropical Cyclone')]/parent::label/parent::div/descendant::input\"))));\r\n    WebElement cyclone = driver.findElement(By.xpath(\"//span[contains(text(),'Tropical Cyclone')]/parent::label/parent::div/descendant::input\"));\r\n    String s                   = Keys.chord(Keys.CONTROL,\"a\");\r\n    cyclone.sendKeys(s);\r\n    cyclone.sendKeys(Keys.DELETE);\r\n    cyclone.sendKeys(inputValue);\r\n    Thread.sleep(2000);\r\n    //cyclone.sendKeys(Keys.ENTER);\r\n    cyclone.sendKeys(Keys.TAB);\r\n    Thread.sleep(2000);\r\n\r\n\r\nactionResult.status = true;\r\nactionResult.comments = \"Executed Successfully\"; \r\n\r\n\r\n}\r\ncatch(Exception e){\r\n\r\nactionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n}\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "TropicalCyclone",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12241,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class WindstromAndHail extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n\n\tWebElement windStrom=driver.findElement(By.xpath(\"//input[contains(@id,'CovPatternInputGroup:3:CovTermPOCHOEInputSet:OptionTermInput-inputEl')]\"));\n\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\twindStrom.sendKeys(s);\n\twindStrom.sendKeys(Keys.DELETE);\n       windStrom.sendKeys(inputValue);\n\tThread.sleep(2000);\n\twindStrom.sendKeys(Keys.ENTER);\n\twindStrom.sendKeys(Keys.TAB);\n\tThread.sleep(2000);\n\n\nactionResult.status = true;\nactionResult.comments = \"Executed Successfully\"; \n\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "WindstromAndHail",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12311,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class AllOtherPerils_Copy extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nString[] Value = inputValue.split(\"And\");\n\t\tif(Value[0].contains(\"Yes\")){\nThread.sleep(1000);\n\n\t\t\tWebElement WaterDamage=driver.findElement(By.xpath(\"//div[contains(text(),'Water Damage - Sewer')]/..//input\"));\n\t\t\t\n\t\t\tWaterDamage.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tWebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Water Damage - Sewer')]/../following-sibling::div//div/input\"));\n\t\t\t\n//int i = Integer.parseInt(Value[1]);\n\nlimit.click();\n\t\n\tThread.sleep(1000);\n\t//if(i==5000){\nif(Value[1].trim().equalsIgnoreCase(\"5000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n//}else if(i==10000){\n}else if(Value[1].trim().equalsIgnoreCase(\"10000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n//}else if(i==15000){\n}else if(Value[1].trim().equalsIgnoreCase(\"15000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n//}else if(i==25000){\n}else if(Value[1].trim().equalsIgnoreCase(\"25000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n//}else if(i==50000){\n}else if(Value[1].trim().equalsIgnoreCase(\"50000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Water Damage Cover is selected with limit \"+Value[1];\n\t\t\t\n\t}else {\nactionResult.status = true;\n           actionResult.comments =  \"Water Damage Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "WaterDamage_SewerDrainAndSumpPump",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12313,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Personal_Injury extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\nString[] Value = inputValue.split(\"And\");\r\n        if(Value[0].contains(\"Yes\")){\r\n            Thread.sleep(1000);\r\n            try{\r\n            \r\n            WebElement PersonalInjuryCheckd=driver.findElement(By.xpath(\"//div[contains(text(),'Personal Injury')]/..//div[contains(@class,'checked')]\"));\r\n            actionResult.comments =  \"Personal Injury Cover is already opted\";\r\n            }\r\n            catch(Exception a){\r\n            WebElement PersonalInjury=driver.findElement(By.xpath(\"//div[contains(text(),'Personal Injury')]/..//input\"));\r\n            \r\n            PersonalInjury.click();\r\n            Thread.sleep(2000);\r\n            }\r\n            Thread.sleep(2000);\r\n            \r\n            WebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Personal Injury')]/../following-sibling::div//div/input\"));\r\n            \r\n            limit.click();\r\n    \r\n    Thread.sleep(1000);\r\n    \r\nif(Value[1].trim().contains(\"150000\")){\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nlimit.sendKeys(Keys.ENTER);\r\n    Thread.sleep(2000);\r\n//}else if(i==10000){\r\n}else if(Value[1].trim().contains(\"250000\")){\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nThread.sleep(500);\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nlimit.sendKeys(Keys.ENTER);\r\n    Thread.sleep(2000);\r\n//}else if(i==15000){\r\n}else if(Value[1].trim().contains(\"500000\")){\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nThread.sleep(500);\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nThread.sleep(500);\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nlimit.sendKeys(Keys.ENTER);\r\n    Thread.sleep(2000);\r\n}else{\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nlimit.sendKeys(Keys.ENTER);\r\n    Thread.sleep(2000);\r\n}\r\nactionResult.status = true;\r\n           actionResult.comments =  \"Personal Injury Cover is selected with limit \"+Value[1];\r\n            \r\n    }else {\r\nactionResult.status = true;\r\n           actionResult.comments =  \"Personal Injury Cover is not Applicable  \";\r\n        \r\n    }\r\n\r\n}\r\ncatch(Exception e){\r\n\r\nactionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Personal_Injury",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12314,
    "Description": "DataSheet Syntax - \r\n<Yes/No> And <LimitValue>",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SpecifiedBusinessPursuits extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\nString[] Value = inputValue.split(\"And\");\r\n        if(Value[0].contains(\"Yes\")){\r\nThread.sleep(1000);\r\n\r\n            try{\r\n            \r\n            WebElement SpecifiedBusinessPursuitsCheckd=driver.findElement(By.xpath(\"//div[contains(text(),'Specified Business Pursuits')]/..//div[contains(@class,'checked')]\"));\r\n            actionResult.comments =  \"Specified Business Pursuits is already opted\";\r\n            }\r\n            catch(Exception a){\r\n            WebElement SpecifiedBusinessPursuits=driver.findElement(By.xpath(\"//div[contains(text(),'Specified Business Pursuits')]/..//input\"));\r\n            \r\n            SpecifiedBusinessPursuits.click();\r\n            \r\n            Thread.sleep(2000);\r\n            }\r\n            Thread.sleep(2000);\r\n            \r\n            WebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Specified Business Pursuits')]/../following-sibling::div//div/input\"));\r\n            \r\n//int i = Integer.parseInt(Value[1]);\r\n\r\nlimit.click();\r\n    \r\n    Thread.sleep(1000);\r\n    //if(i==5000){\r\nif(Value[1].trim().equalsIgnoreCase(\"2500\")){\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nlimit.sendKeys(Keys.ENTER);\r\n    Thread.sleep(2000);\r\n//}else if(i==10000){\r\n}else if(Value[1].trim().equalsIgnoreCase(\"5000\")){\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nThread.sleep(500);\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nlimit.sendKeys(Keys.ENTER);\r\n    Thread.sleep(2000);\r\n}else{\r\nlimit.sendKeys(Keys.ARROW_DOWN);\r\nlimit.sendKeys(Keys.ENTER);\r\n    Thread.sleep(2000);\r\n}\r\nactionResult.status = true;\r\n           actionResult.comments =  \"Specified Business Pursuits Cover is selected with limit \"+Value[1];\r\n            \r\n    }else {\r\nactionResult.status = true;\r\n           actionResult.comments =  \"Specified Business Pursuits Cover is not Applicable  \";\r\n        \r\n    }\r\n\r\n}\r\ncatch(Exception e){\r\n\r\nactionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n}\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SpecifiedBusinessPursuits",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13456,
    "Description": "DataSheet Syntax - \r\n<Yes/No> And <LimitValue>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SpecifiedBusinessPursuits_Copy extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n\t\t\tString a = actionResult.getDTParameter(\"DT_GolfCart\");\n\t\t\tString value[] = a.split(\"And\");\n\t\t\tif (value[0].contains(\"Yes\")) {\n\t\t\t\tThread.sleep(1000);\n\t\t\t       WebElement GolfCart=driver.findElement(By.xpath(\"//div[contains(text(),'Golf Cart')]/..//input\"));\n\t\t\t\n\t\t\t       GolfCart.click();\n\t\t\t\tThread.sleep(2000);\n\n\t\t\tWebElement NumberOfGolfCarts = driver.findElement(By.xpath(\"//div[contains(text(),'Golf Cart')]/../following-sibling::div//div/input\"));\n\t\t\tNumberOfGolfCarts.sendKeys(value[1]);\n\t\t\tThread.sleep(1000);\n\t\t\t}\n\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\tactionResult.status = true;\n           actionResult.comments =  \"Golf Cart Cover is selected with Value \" +value[1];\n\t\t\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SpecifiedBusinessPursuits_Copy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12318,
    "Description": "DataSheet Syntax\r\n<Yes/No> And <Limit Value>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class BuildingCodes extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n//String str = actionResult.getDTParameter(\"DT_LoginUsername\");\n//String str1 = actionResult.getDTParameter(\"DT_State\");\n//String str2 = actionResult.getDTParameter(\"DT_State\",1);\n//String str3 = actionResult.getDTParameter(\"DT_State\",2);\n\n//System.out.println(\"str - \"+str+\" str1 - \"+str1+\" str2 - \"+str2+\" str3 - \"+str3);\n//actionResult.comments =  \"str - \"+str+\" str1 - \"+str1+\" str2 - \"+str2+\" str3 - \"+str3;\n\n\nString[] Value = inputValue.split(\"And\");\n\t\tif(Value[0].contains(\"Yes\")){\nThread.sleep(1000);\n\n\t\t\tWebElement BuildingCodes=driver.findElement(By.xpath(\"//div[contains(text(),'Building Codes')]/..//input\"));\n\t\t\t\n\t\t\tBuildingCodes.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tWebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Building Codes')]/../following-sibling::div//div/input\"));\n\t\t\t\n//int i = Integer.parseInt(Value[1]);\n\nlimit.click();\n\t\n\tThread.sleep(1000);\n\t//if(i==5000){\nif(Value[1].trim().contains(\"5\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n//}else if(i==10000){\n}else if(Value[1].trim().contains(\"10\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n//}else if(i==15000){\n}else if(Value[1].trim().contains(\"20\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Building Codes Cover is selected with limit \"+Value[1];\n\t\t\t\n\t}else {\nactionResult.status = true;\n           actionResult.comments =  \"Building Codes Cover is not Applicable \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\nString MsgDetails = e.getMessage();\n         //  actionResult.comments =  e.getMessage();\n\nif(MsgDetails.contains(\"no such element\")){\nactionResult.comments =  \"'Building Codes Cover' field is not APPLICABLE\"+MsgDetails;\nactionResult.status = true;\n}else{\nactionResult.comments =  \"'Building Codes Cover is not Applicable ' field is not available\"+MsgDetails;\nactionResult.status = false;\n}\n\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "BuildingCodes",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12319,
    "Description": "DataSheet Syntax - \r\n<Yes/No>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ElectronicDataRestoration extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n//String[] Value = inputValue.split(\"And\");\n\t\tif(inputValue.contains(\"Yes\")){\nThread.sleep(500);\n\n\t\t\tWebElement ElectronicDataRestoration=driver.findElement(By.xpath(\"//div[contains(text(),'Electronic Data Restoration')]/..//input\"));\n\t\t\t\n\t\t\tElectronicDataRestoration.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\tactionResult.status = true;\n           actionResult.comments =  \"Electronic Data Restoration Cover is selected\" ;\t\t\n}\n\t\t\n\telse {\nactionResult.status = true;\n           actionResult.comments =  \"Electronic Data Restoration Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ElectronicDataRestoration",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12320,
    "Description": "DataSheet Syntax\r\n<Yes/No> And <Limit Value>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ExpandedCoverage_JewelryWatchesAndFurs extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nString[] Value = inputValue.split(\"And\");\n\t\tif(Value[0].contains(\"Yes\")){\nThread.sleep(1000);\n\n\t\t\tWebElement ExpandedCoverage=driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Jewelry')]/..//input\"));\n\t\t\t\n\t\t\tExpandedCoverage.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tWebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Jewelry')]/../following-sibling::div//div/input\"));\n\t\t\t\n//int i = Integer.parseInt(Value[1]);\n\nlimit.click();\n\t\n\tThread.sleep(1000);\n\t//if(i==5000){\nif(Value[1].trim().contains(\"6000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n//}else if(i==10000){\n}else if(Value[1].trim().contains(\"7000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n//}else if(i==15000){\n}else if(Value[1].trim().contains(\"8000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n//}else if(i==25000){\n}else if(Value[1].trim().contains(\"9000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(2000);\n//}else if(i==50000){\n}else if(Value[1].trim().contains(\"10000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else if(Value[1].trim().contains(\"15000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else if(Value[1].trim().contains(\"20000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else if(Value[1].trim().contains(\"25000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else if(Value[1].trim().contains(\"30000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage-Jewelry Watches And Furs Cover is selected with limit \"+Value[1];\n\t\t\t\n\t}else {\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage-Jewelry Watches And Furs Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ExpandedCoverage_JewelryWatchesAndFurs",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12321,
    "Description": "DataSheet Syntax\r\n<Yes/No> And <Limit Value>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ExpandedCoverage_Cameras extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nString[] Value = inputValue.split(\"And\");\n\t\tif(Value[0].contains(\"Yes\")){\nThread.sleep(1000);\n\n\t\t\tWebElement ExpandedCoverage=driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Cameras')]/..//input\"));\n\t\t\t\n\t\t\tExpandedCoverage.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tWebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Cameras')]/../following-sibling::div//div/input\"));\n\t\t\t\n//int i = Integer.parseInt(Value[1]);\n\nlimit.click();\n\t\n\tThread.sleep(1000);\n\nif(Value[1].trim().contains(\"25000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"20000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"15000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"10000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"5000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"4000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"3000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"2000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"1000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage-Camera Cover is selected with limit \"+Value[1];\n\t\t\t\n\t}else {\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage-Camera Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ExpandedCoverage_Cameras",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12322,
    "Description": "DataSheet Syntax\r\n<Yes/No> And <Limit Value>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ExpandedCoverage_MusicalInstruments extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nString[] Value = inputValue.split(\"And\");\n\t\tif(Value[0].contains(\"Yes\")){\nThread.sleep(1000);\n\n\t\t\tWebElement ExpandedCoverage=driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Musical Instruments')]/..//input\"));\n\t\t\t\n\t\t\tExpandedCoverage.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tWebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Musical Instruments')]/../following-sibling::div//div/input\"));\n\t\t\t\n//int i = Integer.parseInt(Value[1]);\n\nlimit.click();\n\t\n\tThread.sleep(1000);\n\t//if(i==5000){\n\nif(Value[1].trim().contains(\"25000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"20000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"15000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"10000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"5000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"4000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"3000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"2000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"1000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage - Musical Instruments Cover is selected with limit \"+Value[1];\n\t\t\t\n\t}else {\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage - Musical Instruments Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ExpandedCoverage_MusicalInstruments",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12323,
    "Description": "DataSheet Syntax\r\n<Yes/No> And <Limit Value>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ExpandedCoverage_SportsEquipment extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nString[] Value = inputValue.split(\"And\");\n\t\tif(Value[0].contains(\"Yes\")){\nThread.sleep(1000);\n\n\t\t\tWebElement ExpandedCoverage=driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Sports Equipment')]/..//input\"));\n\t\t\t\n\t\t\tExpandedCoverage.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tWebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Sports Equipment')]/../following-sibling::div//div/input\"));\n\t\t\t\n//int i = Integer.parseInt(Value[1]);\n\nlimit.click();\n\t\n\tThread.sleep(1000);\n\t//if(i==5000){\n\nif(Value[1].trim().contains(\"25000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"20000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"15000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"10000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"5000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"4000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"3000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"2000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"1000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage - Sports Equipment Cover is selected with limit \"+Value[1];\n\t\t\t\n\t}else {\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage - Sports Equipment Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ExpandedCoverage_SportsEquipment",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12324,
    "Description": "DataSheet Syntax\r\n<Yes/No> And <Limit Value>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ExpandedCoverage_TheftOfSilverware extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nString[] Value = inputValue.split(\"And\");\n\t\tif(Value[0].contains(\"Yes\")){\nThread.sleep(1000);\n\n\t\t\tWebElement ExpandedCoverage=driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Theft of Silverware')]/..//input\"));\n\t\t\t\n\t\t\tExpandedCoverage.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tWebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Expanded Coverage - Theft of Silverware')]/../following-sibling::div//div/input\"));\n\t\t\t\n//int i = Integer.parseInt(Value[1]);\n\nlimit.click();\n\t\n\tThread.sleep(1000);\n\t//if(i==5000){\n\tif(Value[1].trim().contains(\"12500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"11500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"10500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"9500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"8500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"7500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage - Theft of Silverware Cover is selected with limit \"+Value[1];\n\t\t\t\n\t}else {\nactionResult.status = true;\n           actionResult.comments =  \"Expanded Coverage - Theft of Silverware Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ExpandedCoverage_TheftOfSilverware",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12325,
    "Description": "DataSheet Syntax - \r\n<Yes/No>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class FairRentalIncome extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n//String[] Value = inputValue.split(\"And\");\n\t\tif(inputValue.contains(\"Yes\")){\nThread.sleep(500);\n\n\t\t\tWebElement FairRentalIncome=driver.findElement(By.xpath(\"//div[contains(text(),'Fair Rental Income')]/..//input\"));\n\t\t\t\n\t\t\tFairRentalIncome.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\tactionResult.status = true;\n           actionResult.comments =  \"Fair Rental Income Cover is selected\" ;\t\t\n}\n\t\t\n\telse {\nactionResult.status = true;\n           actionResult.comments =  \"Fair Rental Income Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FairRentalIncome",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12326,
    "Description": "DataSheet Syntax\r\n<Yes/No> And <Limit Value>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class FireDepartmentCharges extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nString[] Value = inputValue.split(\"And\");\n\t\tif(Value[0].contains(\"Yes\")){\nThread.sleep(1000);\n\n\t\t\tWebElement ExpandedCoverage=driver.findElement(By.xpath(\"//div[contains(text(),'Fire Department Charges')]/..//input\"));\n\t\t\t\n\t\t\tExpandedCoverage.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tWebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Fire Department Charges')]/../following-sibling::div//div/input\"));\n\t\t\t\n//int i = Integer.parseInt(Value[1]);\n\nlimit.click();\n\t\n\tThread.sleep(1000);\n\t//if(i==5000){\n\tif(Value[1].trim().contains(\"5500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"3000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"1500\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"1250\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"1000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"750\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"600\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Fire Department Charges Cover is selected with limit \"+Value[1];\n\t\t\t\n\t}else {\nactionResult.status = true;\n           actionResult.comments =  \"Fire Department Charges Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "FireDepartmentCharges",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13455,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class PersonalPropertyReimbursement extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n//String[] Value = inputValue.split(\"And\");\n\t\tif(inputValue.contains(\"Yes\")){\nThread.sleep(500);\n\n\t\t\tWebElement GolfCart_Checkbox=driver.findElement(By.xpath(\"//div[contains(text(),'Golf Cart')]/..//input\"));\n\t\t\t\n\t\t\tGolfCart_Checkbox.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\tactionResult.status = true;\n           actionResult.comments =  \"Golf Cart Checkbox is selected\" ;\t\t\n}\n\t\t\n\telse {\nactionResult.status = true;\n           actionResult.comments =  \"Golf Cart Checkbox is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Golf_Cart",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12327,
    "Description": "DataSheet Syntax - \r\n<Yes/No>",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class GreenUpgrades extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n       for(int i =1; i<=5; i++) \r\n        {          \r\n            try{\r\n\r\n                if(inputValue.contains(\"Yes\")){\r\n                Thread.sleep(500);\r\n\r\n                WebElement GreenUpgrades=driver.findElement(By.xpath(\"//div[contains(text(),'Green Upgrades')]/..//input\"));\r\n            \r\n                GreenUpgrades.click();\r\n            \r\n                Thread.sleep(2000);\r\n            \r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Green Upgrades Cover is selected\" ;        \r\n            }\r\n        \r\n            else {\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Green Upgrades Cover is not Applicable  \";\r\n        \r\n            }\r\n            break;\r\n            }\r\n            catch(Exception e){\r\n\r\n                actionResult.status = false;\r\n                actionResult.comments =  e.getMessage();\r\n        }\r\n        }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GreenUpgrades",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12328,
    "Description": "DataSheet Syntax - \r\n<Yes/No>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class HomeHostingAndIncidentalRentalCoverage extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n//String[] Value = inputValue.split(\"And\");\n\t\tif(inputValue.contains(\"Yes\")){\nThread.sleep(500);\n\n\t\t\tWebElement GreenUpgrades_Copy=driver.findElement(By.xpath(\"//div[contains(text(),'Home Hosting & Incidental Rental Coverage')]/..//input\"));\n\t\t\t\n\t\t\tGreenUpgrades_Copy.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\tactionResult.status = true;\n           actionResult.comments =  \"Home Hosting & Incidental Rental Coverage Cover is selected\" ;\t\t\n}\n\t\t\n\telse {\nactionResult.status = true;\n           actionResult.comments =  \"Home Hosting & Incidental Rental Coverage Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "HomeHostingAndIncidentalRentalCoverage",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12331,
    "Description": "DataSheet Syntax\r\n<Yes/No> And <Limit Value>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class LossAssessments extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nString[] Value = inputValue.split(\"And\");\n\t\tif(Value[0].contains(\"Yes\")){\nThread.sleep(1000);\n\n\t\t\tWebElement ExpandedCoverage=driver.findElement(By.xpath(\"//div[contains(text(),'Loss Assessments')]/..//input\"));\n\t\t\t\n\t\t\tExpandedCoverage.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\t\t\tWebElement limit = driver.findElement(By.xpath(\"//div[contains(text(),'Loss Assessments')]/../following-sibling::div//div/input\"));\n\t\t\t\n//int i = Integer.parseInt(Value[1]);\n\nlimit.click();\n\t\n\tThread.sleep(1000);\n\t//if(i==5000){\n\t\n\tif(Value[1].trim().contains(\"50000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"25000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nThread.sleep(500);\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n\t}else if(Value[1].trim().contains(\"10000\")){\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}else{\nlimit.sendKeys(Keys.ARROW_DOWN);\nlimit.sendKeys(Keys.ENTER);\n\tThread.sleep(1000);\n}\nactionResult.status = true;\n           actionResult.comments =  \"Loss Assessments Cover is selected with limit \"+Value[1];\n\t\t\t\n\t}else {\nactionResult.status = true;\n           actionResult.comments =  \"Loss Assessments Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "LossAssessments",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12329,
    "Description": "DataSheet Syntax - \r\n<Yes/No>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class PersonalPropertyReimbursement extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n//String[] Value = inputValue.split(\"And\");\n\t\tif(inputValue.contains(\"Yes\")){\nThread.sleep(500);\n\n\t\t\tWebElement GreenUpgrades_Copy=driver.findElement(By.xpath(\"//div[contains(text(),'Personal Property Reimbursement')]/..//input\"));\n\t\t\t\n\t\t\tGreenUpgrades_Copy.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\tactionResult.status = true;\n           actionResult.comments =  \"Personal Property Reimbursement Cover is selected\" ;\t\t\n}\n\t\t\n\telse {\nactionResult.status = true;\n           actionResult.comments =  \"Personal Property Reimbursement Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PersonalPropertyReimbursement",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12330,
    "Description": "DataSheet Syntax - \r\n<Yes/No>",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class UnitOwnersRentedToOthers extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\n//String[] Value = inputValue.split(\"And\");\n\t\tif(inputValue.contains(\"Yes\")){\nThread.sleep(500);\n\n\t\t\tWebElement GreenUpgrades_Copy=driver.findElement(By.xpath(\"//div[contains(text(),'Unit Owners Rented to Others')]/..//input\"));\n\t\t\t\n\t\t\tGreenUpgrades_Copy.click();\n\t\t\t\n\t\t\tThread.sleep(2000);\n\t\t\t\n\tactionResult.status = true;\n           actionResult.comments =  \"Unit Owners Rented to Others Coverage Cover is selected\" ;\t\t\n}\n\t\t\n\telse {\nactionResult.status = true;\n           actionResult.comments =  \"Unit Owners Rented to Others Coverage Cover is not Applicable  \";\n\t\t\n\t}\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "UnitOwnersRentedToOthers",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9689,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 126196,
        "StepNumber": 1,
        "Description": "ScrollToElement",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "C - Personal Property",
        "CustomActionId": 12953,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126191,
        "StepNumber": 2,
        "Description": "SelectPersonalPropertyValue",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12949,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126192,
        "StepNumber": 3,
        "Description": "VerifyPersonalPropertyReasonTextBoxExsits",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12950,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126193,
        "StepNumber": 4,
        "Description": "EnterPersonalPropertyReason",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12951,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126194,
        "StepNumber": 5,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126195,
        "StepNumber": 6,
        "Description": "VerifyBR_616IsNotTriggered",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12952,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "ChangePeronalPropertyAndVerifyBR_616",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12953,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ScrollToElement extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n       try \r\n        {           \r\n         WebDriverWait wait    = new WebDriverWait(driver,30);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        \r\n        WebElement ele = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[text()='\"+inputValue+\"']\"))));\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", ele);\r\n        js.executeScript(\"arguments[0].scrollIntoView();\", ele);\r\n        \r\n        actionResult.status   = true;\r\n        actionResult.comments = \"Scrolled to element \"+inputValue; \r\n        }\r\n        catch(Exception e) {\r\n            actionResult.status   = false;\r\n            actionResult.comments = \"Element is not found\";\r\n        }\r\n    \r\n        \r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ScrollToElement",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12949,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SelectPersonalPropertyValue extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\ntry{\r\n\r\n\r\n    WebDriverWait wait    = new WebDriverWait(driver,50);\r\n    JavascriptExecutor js = (JavascriptExecutor)driver;\r\n    wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//div[contains(text(),'C - Personal')]/ancestor::fieldset/descendant::input[contains(@id,'OptionTermInput-inputEl')]\"))));\r\n    WebElement property = driver.findElement(By.xpath(\"//div[contains(text(),'C - Personal')]/ancestor::fieldset/descendant::input[contains(@id,'OptionTermInput-inputEl')]\"));\r\n    String s            = Keys.chord(Keys.CONTROL,\"a\");\r\n    js.executeScript(\"arguments[0].scrollIntoView();\", property);\r\n\r\n    property.sendKeys(s);\r\n    property.sendKeys(Keys.DELETE);\r\n    property.sendKeys(inputValue);\r\n    Thread.sleep(2000);\r\n    //cyclone.sendKeys(Keys.ENTER);\r\n    property.sendKeys(Keys.TAB);\r\n    Thread.sleep(2000);\r\n\r\n\r\nactionResult.status = true;\r\nactionResult.comments = \"Executed Successfully\"; \r\n\r\n\r\n}\r\ncatch(Exception e){\r\n\r\nactionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n}\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectPersonalPropertyValue",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12950,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyPersonalPropertyReasonTextBoxExsits extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        \r\n        try \r\n        {           \r\n        WebDriverWait wait = new WebDriverWait(driver,30);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        \r\n        WebElement reasonText = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//div[contains(text(),'C - Personal')]/ancestor::fieldset/descendant::input[contains(@id,'CovTermInputSet:StringTermInput-inputEl')]\"))));\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", reasonText);\r\n\r\n        actionResult.status   = true;\r\n        actionResult.comments = \" Personal Property Reason Text Box is present\"; \r\n        }\r\n        catch(Exception e) {\r\n            actionResult.comments = \" Personal Property Reasonext Box is not present\";\r\n            actionResult.status   = false;\r\n        }\r\n    \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyPersonalPropertyReasonTextBoxExsits",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12951,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterPersonalPropertyReason extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n     \r\n    for(int i =1; i<=5; i++) \r\n        {   \r\n                try{\r\n                    WebDriverWait wait    = new WebDriverWait(driver,30);\r\n                    JavascriptExecutor js = (JavascriptExecutor)driver;\r\n                    Actions act           = new Actions(driver);\r\n                    String selectText     = Keys.chord(Keys.CONTROL,\"a\");\r\n                    WebElement valueElemt = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(text(),'C - Personal')]/ancestor::fieldset/descendant::input[contains(@id,'CovTermInputSet:StringTermInput-inputEl')]\"))));\r\n                    js.executeScript(\"arguments[0].style.border='2px solid red'\", valueElemt);\r\n                    js.executeScript(\"arguments[0].scrollIntoView();\", valueElemt);\r\n                    valueElemt.sendKeys(selectText);\r\n                    act.moveToElement(valueElemt).sendKeys(Keys.DELETE).build().perform();\r\n                    js.executeScript(\"arguments[0].value='\"+inputValue+\"'\",valueElemt);\r\n                    act.moveToElement(valueElemt).sendKeys(Keys.TAB).build().perform();\r\n\r\n                    Thread.sleep(1000);\r\n                    actionResult.status   = true;\r\n                    actionResult.comments = \" Entered the value\";\r\n                    break;\r\n                    }catch(Exception e) {\r\n                        actionResult.comments =\"Exception at Value Element\"+e.getMessage();\r\n                        actionResult.status = false;\r\n\r\n                    }\r\n        }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterPersonalPropertyReason",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12952,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyBR_616IsNotTriggered extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n try \r\n           {           \r\n           WebDriverWait wait = new WebDriverWait(driver,30);\r\n           JavascriptExecutor js = (JavascriptExecutor)driver;\r\n           \r\n           WebElement br616 = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[text()='\"+inputValue+\"']\"))));\r\n           js.executeScript(\"arguments[0].scrollIntoView();\", br616);\r\n           js.executeScript(\"arguments[0].style.border='2px solid red'\", br616);\r\n           \r\n           actionResult.status   = false;\r\n           actionResult.comments = inputValue+\" BR-616 is found\"; \r\n           }\r\n           catch(Exception e) {\r\n               actionResult.status   = true;\r\n               actionResult.comments = inputValue+\" BR-616 is not found\";\r\n           }  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyBR_616IsNotTriggered",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9433,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 128194,
        "StepNumber": 1,
        "Description": "VerifyScheduledPersonalPropertyScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12339,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128195,
        "StepNumber": 2,
        "Description": "Next on Scheduled Personal Property",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:Next-btnInnerEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Scheduled_Personal_Property_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12339,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyScheduledPersonalPropertyScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t       wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'ScheduledPersonalProperty_AcgScreen:ttlBar')]\"))));\n\n\t\t\tString actPageTitle = driver.findElement(By.xpath(\"//span[contains(@id,'ScheduledPersonalProperty_AcgScreen:ttlBar')]\")).getText();\n\t\tThread.sleep(2000);\n\t\tif(actPageTitle.equals(\"Scheduled Personal Property\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to Scheduled Personal Property screen successfully\";\n\t\t}\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyScheduledPersonalPropertyScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9432,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 128191,
        "StepNumber": 1,
        "Description": "VerifyRiskAnalysisScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11982,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128192,
        "StepNumber": 2,
        "Description": "VerifyUWIssuesTabOpened",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11983,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128193,
        "StepNumber": 3,
        "Description": "VerifyNoIssuesAvailableOnRiskAnalysisScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11984,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128190,
        "StepNumber": 4,
        "Description": "ClickOnNextBtnOnRiskAnalysisScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'SubmissionWizard:Next')]",
        "ActionId": 9,
        "ParameterName": "",
        "ParameterValue": "",
        "CustomActionId": null,
        "ObjectDictionaryId": 10006,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Risk_Analysis",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11982,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyRiskAnalysisScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\tfor(int i =1; i<=5; i++)\n{\n\ttry{\n\t\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[contains(@id,'Job_RiskAnalysisScreen:0')]\")));\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'Job_RiskAnalysisScreen:0')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Risk Analysis\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Risk Analysis' screen successfully\";\n\t\t}\n\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\t\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyRiskAnalysisScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11983,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyUWIssuesTabOpened extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebElement UWIssuesTabEle = driver.findElement(By.xpath(\"//a[contains(@id,'RiskAnalysisCV:EvaluationIssuesCardTab')]\"));\n\t\tString getUWIssuesTabIndex = UWIssuesTabEle .getAttribute(\"tabindex\");\n\t\tif(getUWIssuesTabIndex.equals(\"0\")){\n\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"User is on 'UW Issues Tab' in Drivers screen\";\n\t\t}\n\t\telse{\n           \t\tactionResult.status = false;\n\t\t\tactionResult.comments =  \" 'UW Issues Tab' is not opened\";\n\t\t}\n\t}   \n\tcatch(Exception e){\n\t\tString exceptionMsg = e.getMessage();\n           \tactionResult.status = false;\n\t\tactionResult.comments =  \" 'Coverage Details Tab' is not available in Drivers screen: \"+exceptionMsg;\n\t}\n\n\n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyUWIssuesTabOpened",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11984,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyNoIssuesAvailableOnRiskAnalysisScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebElement NoIssuesMsgEle = driver.findElement(By.xpath(\"//label[contains(@id,'NoIssuesMessage')]\"));\n\t\tString actMsgText = NoIssuesMsgEle.getText();\n\t\tif(actMsgText.equals(\"No issues identified at this time.\")){\n\t\t       actionResult.status = true;\n           \t\tactionResult.comments =  \"Executed Successfully\";\n\t\t}\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyNoIssuesAvailableOnRiskAnalysisScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10006,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//a[contains(@id,'SubmissionWizard:Next')]",
    "PageId": 1158,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnNextBtnOnRiskAnalysisScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1158,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Risk Analysis",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9403,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127869,
        "StepNumber": 1,
        "Description": "VerifyPolicyReviewScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11841,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127872,
        "StepNumber": 2,
        "Description": null,
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127870,
        "StepNumber": 3,
        "Description": "ClickOnQuoteBtnOnPolicyReviewScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'QuoteOrReview')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127873,
        "StepNumber": 4,
        "Description": "Click_Quote_Button",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12681,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127871,
        "StepNumber": 5,
        "Description": "WaitForSideBySideScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "20",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Policy_Review",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11841,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyPolicyReviewScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n   \n  for(int i =1; i<=5; i++)\n{\n\ttry{\n\t\t\t\n\t\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'PolicyReviewScreen:ttlBar')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Policy Review\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Policy Review' screen successfully\";\n\t\t}\n\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyPolicyReviewScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12681,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Click_Quote_Button extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n          try \r\n           {   \r\n               \r\n           WebElement quoteButtonEle;\r\n           \r\n           driver.manage().timeouts().implicitlyWait(50, TimeUnit.SECONDS);\r\n           WebDriverWait wait = new WebDriverWait(driver,30);\r\n           Thread.sleep(2000);\r\n           quoteButtonEle = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//span[contains(@id,'QuoteOrReview-btnInnerEl')]\")));\r\n\r\n           JavascriptExecutor js = (JavascriptExecutor)driver;\r\n           js.executeScript(\"arguments[0].style.border='2px solid red'\", quoteButtonEle);\r\n           js.executeScript(\"arguments[0].click();\",quoteButtonEle);\r\n           \r\n           actionResult.status = true;\r\n            actionResult.comments =  \"Clicked On QUOTE button\";\r\n           //break;    \r\n           \r\n           }\r\n           catch(Exception e) {\r\n           actionResult.comments =\" Expection Type : \" + e.getMessage();\r\n           actionResult.status = false;\r\n           }    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>\r\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Click_Quote_Button",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9533,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 122804,
        "StepNumber": 1,
        "Description": "VerifySideBySideQuotingScreen_copy",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12589,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122802,
        "StepNumber": 2,
        "Description": "SelectVersion2PaymentxOption",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "EFT6",
        "CustomActionId": 11992,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122805,
        "StepNumber": 3,
        "Description": "VerifySoftWarning",
        "LocatorTypeId": 7,
        "Locator": "//*[text()='Clear']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122806,
        "StepNumber": 4,
        "Description": "ClickOnClearButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12457,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122807,
        "StepNumber": 5,
        "Description": "SelectVersion2PaymentxOption",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "EFT6",
        "CustomActionId": 11992,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122803,
        "StepNumber": 6,
        "Description": "GetQuoteNumber",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12610,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "SideBySideVersion2",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12589,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys; \nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifySideBySideQuotingScreen_copy extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \nfor(int i =1; i<=5; i++)\n{\n\ttry{\n\t\n driver.manage().timeouts().implicitlyWait(100, TimeUnit.SECONDS);\n\n\t\t//WebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'SideBySideScreen:ttlBar')]\"));\n\t\tWebDriverWait wait = new WebDriverWait(driver,240);\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'SideBySideScreen:ttlBar')]\"))));\n\t\tString actPageTitle = driver.findElement(By.xpath(\"//span[contains(@id,'SideBySideScreen:ttlBar')]\")).getText();\n\t\tif(actPageTitle.equals(\"Side-by-Side Quoting\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Side-by-Side Quoting' screen successfully\";\n\t\t}\n\n\n\t\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\n\n \t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifySideBySideQuotingScreen_copy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11992,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions; \r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SelectVersion2PaymentxOption extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++)\r\n{\r\n    try{\r\n    \r\n driver.manage().timeouts().implicitlyWait(40, TimeUnit.SECONDS);\r\n        \r\n        WebElement version2PaymentOptEle = driver.findElement(By.xpath(\"//a[contains(@id,'SideBySidePeriod:1') and text()='\"+inputValue+\"']\"));\r\n        version2PaymentOptEle .click();\r\n        \r\n        \r\n            Thread.sleep(5000);\r\n            if(driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle Rating Factors')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle History Report')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'The Insurance Score returned')]\")).size()>0)\r\n            {\r\n            driver.findElement(By.xpath(\"//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]\")).click();\r\n            Thread.sleep(3000);\r\n             version2PaymentOptEle .click();     \r\n            }\r\n         \r\n         \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"The Payment option for Version 2 selected as:\"+inputValue;\r\n        \r\nbreak;\r\n}\r\ncatch(Exception e) {\r\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\nactionResult.status = false;\r\n}\r\n}\r\n        \r\n        \r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectVersion2PaymentxOption",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12457,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnClearButton extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\t\ttry \n\t\t{\t\n\t\t\t\n\t\tWebElement clearBtnEle;\n   \t\t\n\t\t//driver.manage().timeouts().implicitlyWait(50, TimeUnit.SECONDS);\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tThread.sleep(2000);\n\t\tclearBtnEle = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//span[contains(@id,'ClearButton-btnInnerEl')]\")));\n\n\t\t//clearBtnEle=driver.findElement(By.xpath(\"//span[contains(@id,'ClearButton-btnInnerEl')]\"));\n\t\t//wait.until(ExpectedConditions.elementToBeClickable(clearBtnEle));\n\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", clearBtnEle);\n\t\tjs.executeScript(\"arguments[0].click();\",clearBtnEle);\n\t\t\n\t\tactionResult.status = true;\n       \t actionResult.comments =  \"Clicked On CLEAR button\";\n\t\t//break;\t\n\t\t\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\t\t\n\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnClearButton",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12610,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement; \r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.awt.AWTException;\r\nimport java.util.concurrent.TimeUnit;\r\nimport org.openqa.selenium.chrome.ChromeDriver;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class GetQuoteNumber extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retryC =1; retryC<=5; retryC++) \r\n    {\r\n        try\r\n        {\r\n        driver.manage().timeouts().implicitlyWait(30,TimeUnit.SECONDS);\r\n        WebDriverWait wait = new WebDriverWait(driver,30);\r\n        JavascriptExecutor js=(JavascriptExecutor) driver;\r\n        Thread.sleep(3000);\r\n        Actions action = new Actions(driver);\r\n        WebElement quoteNumberEle = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//div[contains(@id,'Quote_SummaryDV:JobNumber-inputEl')]\"))));\r\n         \r\n        String quoteNumberText=quoteNumberEle.getText();\r\n        System.out.println(quoteNumberText);\r\n        actionResult.SaveParameterValue(\"DT_QuoteNumber\", quoteNumberText);\r\n        actionResult.status = true;\r\n        actionResult.comments =  \"Quote Submission has been completed successfully : \"+quoteNumberText;\r\n\r\n            Thread.sleep(3000);\r\n        break;\r\n        }\r\n            catch(Exception e) {\r\n            actionResult.comments =\"Max No. of Attepts reached : \" +retryC+ \" Expection Type : \" + e.getMessage();\r\n            actionResult.status = false;\r\n            }\r\n        }\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetQuoteNumber",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9415,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 128009,
        "StepNumber": 1,
        "Description": "VerifyQuoteScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12000,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128010,
        "StepNumber": 2,
        "Description": "ClickOnNextBtnOnQuoteScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[@id='SubmissionWizard:Next']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Quote",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12000,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyQuoteScreen extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) throws Exception //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n       Thread.sleep(7000);\r\n       for(int i =1; i<=5; i++)\r\n{\r\ntry\r\n{\r\n\r\nint iWaitTime = 0;\r\n            while (true) \r\n            {\r\n            if(driver.findElements(By.xpath(\"//span[contains(@id,'QuoteScreen:ttlBar')]\")).size() >0) \r\n                {\r\n                    actionResult.status = true;\r\n                    actionResult.comments =  \"Naviagted to 'Quote' screen successfully\";\r\n                    break;\r\n                }\r\n                \r\n                else if(driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle Rating Factors')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle History Report')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'The Insurance Score returned')]\")).size()>0){\r\n                JavascriptExecutor js  = (JavascriptExecutor)driver;  \r\n                 \r\n                 driver.findElement(By.xpath(\"//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]\")).click();\r\n           \r\n                 Thread.sleep(4000);\r\n                 WebElement quoteButton = driver.findElement(By.xpath(\"//*[contains(@id,'QuoteOrReview-btnInnerEl')]\")); \r\n                 actionResult.comments  = \"clear clicked\";\r\n                 js.executeScript(\"arguments[0].scrollIntoView(true);\",quoteButton);\r\n                 js.executeScript(\"arguments[0].click();\",quoteButton);\r\n                 //quoteButton .click();   \r\n                    \r\n                }\r\n                \r\n                \r\n                \r\n                \r\n                else \r\n                {\r\n                    Thread.sleep(1000);\r\n                    iWaitTime = iWaitTime + 1;\r\n                    System.out.println(\"wait for 1 sec to load the page\");\r\n                    if (iWaitTime > 200) \r\n                    {\r\n                    throw new Exception(\"Quote screen is not displayed\");\r\n                    }\r\n                }\r\n\r\n            break;\r\n            }\r\n            }\r\n\r\ncatch(Exception e) {\r\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\nactionResult.status = false;\r\n}\r\n}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyQuoteScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9371,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127179,
        "StepNumber": 1,
        "Description": "VerifyFormsScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12011,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127180,
        "StepNumber": 2,
        "Description": "ClickOnProceedToBindButtonOnFormsScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'ProceedToBind')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127193,
        "StepNumber": 3,
        "Description": "Wait after Click on proceed",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127218,
        "StepNumber": 4,
        "Description": "Click on back in forms screen",
        "LocatorTypeId": 7,
        "Locator": "//span[@id='SubmissionWizard:Prev-btnInnerEl']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127194,
        "StepNumber": 5,
        "Description": "Click on Report from Menu",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:LOBWizardStepGroup:Reports_Acg",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127181,
        "StepNumber": 6,
        "Description": "VerifyReportsScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11848,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127187,
        "StepNumber": 7,
        "Description": "LossesandViolationsTabOpened",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11849,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127220,
        "StepNumber": 8,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127233,
        "StepNumber": 9,
        "Description": "Byepass auto loss",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'bypassHomeLoss-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127234,
        "StepNumber": 10,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127221,
        "StepNumber": 11,
        "Description": "Click Yes on Home Losses",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'homeLosses_true-inputEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127222,
        "StepNumber": 12,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127223,
        "StepNumber": 13,
        "Description": "AddHomeLoss_MI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12762,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127224,
        "StepNumber": 14,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127225,
        "StepNumber": 15,
        "Description": "AddHomeLoss_MI",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12762,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127226,
        "StepNumber": 16,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127195,
        "StepNumber": 17,
        "Description": "ClickOnOrderRetrieveHomeLossHistory_Home",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11854,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127200,
        "StepNumber": 18,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127204,
        "StepNumber": 19,
        "Description": "ClickOnOrderRetrieveHomeLossHistory_Home",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11854,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127205,
        "StepNumber": 20,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "17",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127203,
        "StepNumber": 21,
        "Description": "ClickOnClearButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12457,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127196,
        "StepNumber": 22,
        "Description": "NameInsured_Home",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "THELMA MEYERS",
        "CustomActionId": 11855,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127182,
        "StepNumber": 23,
        "Description": "ClickOnNextBtnOnReportsScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'SubmissionWizard:Next')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127232,
        "StepNumber": 24,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "10",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127197,
        "StepNumber": 25,
        "Description": "VerifyCoveragesScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12239,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127231,
        "StepNumber": 26,
        "Description": "AllOtherPerils",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12242,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127211,
        "StepNumber": 27,
        "Description": "PaymentTypeSelection_MILegacy",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PaymentType",
        "CustomActionId": 12245,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127183,
        "StepNumber": 28,
        "Description": "ClickOnNextBtnOnCoveragesScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'SubmissionWizard:Next')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127228,
        "StepNumber": 29,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127213,
        "StepNumber": 30,
        "Description": "Verify Warning Message",
        "LocatorTypeId": 7,
        "Locator": "//div[@class='message']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127229,
        "StepNumber": 31,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127230,
        "StepNumber": 32,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127214,
        "StepNumber": 33,
        "Description": "VerifyScheduledPersonalPropertyScreen",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'ScheduledPersonalProperty_AcgScreen:ttlBar')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127198,
        "StepNumber": 34,
        "Description": "VerifyScheduledPersonalPropertyScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12339,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127199,
        "StepNumber": 35,
        "Description": "ClickOnNextBtnOnPropertyHistory",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'SubmissionWizard:Next')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127215,
        "StepNumber": 36,
        "Description": "AjaxWait_Copy",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12492,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127184,
        "StepNumber": 37,
        "Description": "VerifyRiskAnalysisScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11982,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127227,
        "StepNumber": 38,
        "Description": "CLICK O PREFILL",
        "LocatorTypeId": 7,
        "Locator": "//span[text()= 'Order Prefill']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127219,
        "StepNumber": 39,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127185,
        "StepNumber": 40,
        "Description": "ClickOnNextBtnOnRiskAnalysisScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'SubmissionWizard:Next')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127206,
        "StepNumber": 41,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127209,
        "StepNumber": 42,
        "Description": "ClickOnNextBtnOnRiskAnalysisScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'SubmissionWizard:Next')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127210,
        "StepNumber": 43,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127186,
        "StepNumber": 44,
        "Description": "VerifyPolicyReviewScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11841,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127212,
        "StepNumber": 45,
        "Description": "ReplacementCostEstimator",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12208,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127192,
        "StepNumber": 46,
        "Description": "ClickOnQuoteBtnOnPolicyReviewScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'QuoteOrReview')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127207,
        "StepNumber": 47,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127216,
        "StepNumber": 48,
        "Description": "Verify Warning Message",
        "LocatorTypeId": 7,
        "Locator": "//div[@class='message']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127201,
        "StepNumber": 49,
        "Description": "Click on clear button",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"WebMessageWorksheet:WebMessageWorksheetScreen:WebMessageWorksheet_ClearButton-btnInnerEl\"]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127202,
        "StepNumber": 50,
        "Description": "ClickOnQuoteBtnOnPolicyReviewScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'QuoteOrReview')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127217,
        "StepNumber": 51,
        "Description": "AjaxWait_Copy",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12492,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127188,
        "StepNumber": 52,
        "Description": "VerifyQuoteScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12000,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127189,
        "StepNumber": 53,
        "Description": "ClickOnNextBtnOnQuoteScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'SubmissionWizard:Next')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127208,
        "StepNumber": 54,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127190,
        "StepNumber": 55,
        "Description": "VerifyFormsScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12011,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127191,
        "StepNumber": 56,
        "Description": "ClickOnNextBtnOnFormsScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'SubmissionWizard:Next')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Forms_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12011,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyFormsScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\ttry{\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'FormsScreen:ttlBar')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Forms\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Forms' screen successfully\";\n\t\t}\n\t}\n\tcatch(Exception e){\n\t\tString exceptionMsg = e.getMessage();\n\t\tactionResult.status = false;\n           \tactionResult.comments =  \"'Forms' screen is not displayed\";\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyFormsScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11848,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyReportsScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[contains(@id,'Report_AcgScreen:ttlBar')]\")));\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'Report_AcgScreen:ttlBar')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Reports\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Reports' screen successfully\";\n\t\t}\n\t}\n\tcatch(Exception e){\n\t\tString exceptionMsg = e.getMessage();\n\t\tactionResult.status = false;\n           \tactionResult.comments =  \"'Reports' screen is not displayed\";\n\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyReportsScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12762,
    "Description": "InsuredName AND Date AND Cause AND Amount AND Location@InsuredName AND Date AND Cause AND Amount AND Location",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException; \r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType; \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.time.Duration;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EnterHomePhone extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n            \r\n            driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n            WebDriverWait wait = new WebDriverWait(driver,20);\r\n            JavascriptExecutor js = (JavascriptExecutor)driver;\r\n            Actions act = new Actions(driver);\r\n            String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n            \r\n            for(int retry=0; retry<=2;retry++){\r\n                    try{\r\n                        \r\n                        String[] lossParams = inputValue.split(\" AND \");\r\n                        String insuredName1 = lossParams[0].toString().trim();\r\n                        String dateOfLossValue = lossParams[1].toString().trim();\r\n//                        String causeOfLossValue = lossParams[2].toString().trim();\r\n//                        String totalAmtPaid = lossParams[3].toString().trim();\r\n//                        String lossLocationValue = lossParams[4].toString().trim();\r\n                        Thread.sleep(2000);\r\n                        \r\n                        //Entering name insured\r\n                        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[2]/div\"))));\r\n                        WebElement nameInsuredEle = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[2]/div\"));\r\n                        js.executeScript(\"arguments[0].style.border='2px solid red'\", nameInsuredEle);\r\n                        js.executeScript(\"arguments[0].click();\",nameInsuredEle);\r\n                        \r\n                        WebElement insuredName = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//li[contains(text(),'\"+insuredName1+\"')]\"))));\r\n                        js.executeScript(\"arguments[0].style.border='2px solid red'\", insuredName);\r\n                        js.executeScript(\"arguments[0].click();\", insuredName);\r\n                        Thread.sleep(1000);\r\n                        \r\n                        //Entering Loss Date\r\n                        WebElement lossDate = driver.findElement(By.xpath(\"//div[contains(@id,'HomeLossLV-body')]/descendant::table[1]/descendant::td[3]/div\"));\r\n                        js.executeScript(\"arguments[0].style.border='2px solid red'\", lossDate);\r\n                        js.executeScript(\"arguments[0].click();\",lossDate);\r\n                        Thread.sleep(1000);\r\n                        js.executeScript(\"arguments[0].value='\"+dateOfLossValue+\"'\",lossDate);\r\n                        act.moveToElement(lossDate).sendKeys(Keys.TAB).build().perform();\r\n                        Thread.sleep(1000);\r\n                        \r\n                        break;\r\n                    }\r\n                    catch(Exception e) {\r\n                        actionResult.comments =\"Max No. of Attepts reached : \" +retry + \" Expection Type : \" + e.getMessage();\r\n                        actionResult.status = false;\r\n                    }\r\n                }\r\n\r\n            \r\n            actionResult.status = true;\r\n            actionResult.comments =  \"All the fields are filled successfully\";\r\n        \r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n        actionResult.comments =  e.getMessage();\r\n\r\n    }\r\n\r\n\r\n\r\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n   \r\n// js.executeScript(\"arguments[0].value='\"+inputValue+\"'\",homePhoneEle);\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AddHomeLoss_MI",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11855,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.awt.AWTException;\nimport java.awt.Robot;\nimport java.awt.Toolkit;\nimport java.awt.datatransfer.StringSelection;\nimport java.awt.event.KeyEvent;\nimport java.util.concurrent.TimeUnit;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\npublic class NameInsured_Home extends ActionResult\n{\n\n/// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\n\n\t\tdriver.manage().timeouts().implicitlyWait(5000, TimeUnit.SECONDS);\n\t\t\n\t\ttry{\n\t\t\tWebElement namedInsuredEle =  driver.findElement(By.xpath(\"//*[contains(text(),'Named Insured')]/following::td[2]/div\"));\n\t\t\tActions action = new Actions(driver);\n\t\t\taction.doubleClick(namedInsuredEle);\n\t\t\taction.sendKeys(namedInsuredEle, inputValue).build().perform();\n\t\t\tdriver.findElement(By.id(\"SubmissionWizard:LOBWizardStepGroup:LineWizardStepSet:Report_AcgScreen:Report_AcgPanelSet:InsuranceScoreCV:lossesAndViolationsCardTab-btnEl\")).click();\n\t\t\tactionResult.status = true;\n\t\t\tactionResult.comments =  \"Named Insured selected as:\"+inputValue; \n\t\t}\n\t\tcatch(Exception e){\n\t\t\tactionResult.status = false;\n\t\t\tactionResult.comments =  \"Name is not available\"+e.getMessage();\n\n\t\t}\n\n\t\t///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "NameInsured_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12245,
    "Description": "To Change the payment plan in coverages page\r\nDatasheet Parameter Syntax : PaymentOptions\r\nExample : PAY1",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.StaleElementReferenceException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\n\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class PaymentTypeSelection_MILegacy extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\n\ttry\n\t\t{\n\t\t\t\n\t\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tActions act = new Actions(driver);\n\t\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\n\t\t\tThread.sleep(750);\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'PlanAndDiscountTab-btnInnerEl')]\"))));\n\t\t\tWebElement paymentPlanTabEle = driver.findElement(By.xpath(\"//span[contains(@id,'PlanAndDiscountTab-btnInnerEl')]\"));\n\t\t\tjs.executeScript(\"arguments[0].click();\", paymentPlanTabEle);\n\t\t\tThread.sleep(500);\n\n\n\t\tfor(int i =1; i<=5; i++) \n\t\t{\n\t\ttry \n\t\t{\t\t\t\n\t\t\tThread.sleep(1000);\n\t\t\tWebElement paymentOptionEle = driver.findElement(By.xpath(\"//input[contains(@id,'paymentType-inputEl')]\"));\n\t\t\tjs.executeScript(\"arguments[0].click();\",paymentOptionEle);\n\t\t\tpaymentOptionEle.sendKeys(selectText);\n\t\t\tThread.sleep(1000);\n\t\t\tpaymentOptionEle.sendKeys(Keys.DELETE);\n\t\t\tThread.sleep(750);\n\t\t\tdriver.findElement(By.xpath(\"//input[contains(@id,'paymentType-inputEl')]\")).sendKeys(inputValue);\n\t\t\t//paymentOptionEle.sendKeys(Keys.ENTER);\n\t\t\tpaymentOptionEle.sendKeys(Keys.TAB);\t\t\n\t\t\tThread.sleep(850);\n\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"The Payment Plans details have been Changed successfully\";\n\t\t\n\t\t\tbreak;\n\t\t}\n\t\tcatch(StaleElementReferenceException e) \n\t\t{\n\t\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\t\tactionResult.status = false;\n\t\t}\n\t\t}\t\t\t\t\n\t\t\t\t\n\t\t}\n\tcatch(Exception e)\n\t\t{\n\t\t\tactionResult.status = false;\n\t\t\tactionResult.comments =  \"The Payment Plans details have Not been Changed successfully\"+e.getMessage();\n\n\t\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n          return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PaymentTypeSelection_MILegacy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12492,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class AjaxWait_Copy extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry {\n\n\t\t\tJavascriptExecutor js = (JavascriptExecutor) driver;\n\t\t\tboolean status = false;\n\t\t\tfor (int i = 0; i <= 120; i++) {\n\t\t\t\tstatus = Boolean.valueOf((boolean) js.executeScript(\"return Ext.Ajax.isLoading();\"));\n\t\t\t\tSystem.out.println(status);\n\t\t\t\ttry {\n\t\t\t\t\tThread.sleep(500);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\tif (!status) {\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tactionResult.status = true;\n\t\t\tactionResult.comments = \"Wait Processed\";\n\n\t\t} catch (Exception e) {\n\t\t\tactionResult.comments =e.getMessage();\n\t\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AjaxWait_Copy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9380,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127484,
        "StepNumber": 1,
        "Description": "VerifyPaymentScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12026,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127488,
        "StepNumber": 2,
        "Description": "ClickManageAndAcceptAlert",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12029,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127490,
        "StepNumber": 3,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "2",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127489,
        "StepNumber": 4,
        "Description": "ClickOnCreditCardTab",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12032,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127482,
        "StepNumber": 5,
        "Description": "Click on Credit Card",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(text(),'Credit Card')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127491,
        "StepNumber": 6,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "3",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127483,
        "StepNumber": 7,
        "Description": "Enter Card Number",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"creditaccno\"]",
        "ActionId": 43,
        "ParameterName": "P_1_Credit_Card_Number",
        "ParameterValue": "DT_CreditCardNumber",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 10,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127485,
        "StepNumber": 8,
        "Description": "SelectExpiryYear",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12068,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127486,
        "StepNumber": 9,
        "Description": "SelectExpiryMonth",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12067,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127492,
        "StepNumber": 10,
        "Description": "Current_CreditCard_Expiry_Month_Year",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12489,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127493,
        "StepNumber": 11,
        "Description": "Future_CreditCard_Expiry_Month_Year",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12491,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127487,
        "StepNumber": 12,
        "Description": "ClickOnSaveBtnOnPaymentCollectionScreen",
        "LocatorTypeId": 7,
        "Locator": "//button[contains(text(), 'Save')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Manage_Payments_Check",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12026,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyPaymentScreen extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    \r\n    try{\r\n    \r\n        WebDriverWait wait = new WebDriverWait(driver,30);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n              Thread.sleep(5000);\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"(//span[text()='Payment'])[1]\"))));\r\n            WebElement PaymentTabEle = driver.findElement(By.xpath(\"(//span[text()='Payment'])[1]\"));\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", PaymentTabEle);\r\n            js.executeScript(\"arguments[0].click();\",PaymentTabEle);\r\n            Thread.sleep(2000);\r\n        wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'PaymentScreen:ttlBar')]\"))));\r\n        WebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'PaymentScreen:ttlBar')]\"));\r\n        String actPageTitle = pageTitleEle.getText();\r\n        if(actPageTitle.equals(\"Payment\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Naviagted to 'Payment' screen successfully\";\r\n        }\r\n\r\n\r\n    }   \r\n    catch(Exception e) {\r\n        actionResult.comments = \"Expection Type : \" + e.getMessage();\r\n        actionResult.status   = false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyPaymentScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12029,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport org.openqa.selenium.Alert;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ClickManageAndAcceptAlert extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        \r\n        try{\r\n        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\r\n\r\n        WebDriverWait wait = new WebDriverWait(driver,40);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        WebElement CCManageEle;\r\n        CCManageEle = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//a[contains(@id,'PaymentScreen:BillingAdjustmentsDV:AddNew') or contains(@id,'PaymentScreen:BillingAdjustmentsDetailsDV:AddNew')]\"))));\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", CCManageEle);\r\n        js.executeScript(\"arguments[0].click();\",CCManageEle);\r\n        \r\n        if(wait.until(ExpectedConditions.alertIsPresent()) == null){\r\n            System.out.println(\"NO Alerts to handle\");\r\n        }else{\r\n        Thread.sleep(3000);     \r\n        Alert accpt = driver.switchTo().alert();\r\n        accpt.accept();\r\n        Thread.sleep(3000); \r\n        }\r\n        actionResult.status   = true;\r\n        actionResult.comments = \"Clicked on 'Manage' button and Accepted the Alert\";\r\n        }\r\n    catch(Exception e){\r\n        actionResult.status   = true;\r\n        actionResult.comments = \" Expection Type : \" + e.getMessage();\r\n    }\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>\r\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickManageAndAcceptAlert",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12032,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnCreditCardTab extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tActions act = new Actions(driver);\n\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\t\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//a[contains(text(),'Credit Card')]\"))));\n\t\tWebElement creditCardTabEle = driver.findElement(By.xpath(\"//a[contains(text(),'Credit Card')]\"));\n\t\tjs.executeScript(\"arguments[0].click()\",creditCardTabEle);\n\t\tThread.sleep(3000);\n\t\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Clicked on 'Credit Card Tab'\";\n\t\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnCreditCardTab",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12068,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SelectExpiryYear extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\ttry{\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//select[@name='expyear']\")));\n\t\tWebElement expiryMonthEle;\n\t\texpiryMonthEle=driver.findElement(By.xpath(\"//select[@name='expyear']\"));\n\t\tSelect selectExpMonth = new Select(expiryMonthEle);\n\t\tThread.sleep(750);\n\t\tselectExpMonth.selectByVisibleText(inputValue); \n           \tactionResult.status = true;\n           \tactionResult.comments =  \"Credit Card Exiry Month has been selected\";\n\t\t\n\t}\n\tcatch(Exception e){\n           actionResult.status = false;\n           actionResult.comments =  e.getMessage();\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectExpiryYear",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12067,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SelectExpiryMonth extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//select[@name='expmonth']\")));\n\t\tWebElement expiryMonthEle;\n\t\texpiryMonthEle=driver.findElement(By.xpath(\"//select[@name='expmonth']\"));\n\t\tSelect selectExpMonth = new Select(expiryMonthEle);\n\t\tThread.sleep(750);\n\t\tselectExpMonth.selectByVisibleText(inputValue);\n           \tactionResult.status = true;\n           \tactionResult.comments =  \"Credit Card Exiry Month has been selected\";\n\t\t\n\t}\n\tcatch(Exception e){\n           actionResult.status = false;\n           actionResult.comments =  e.getMessage();\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectExpiryMonth",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12489,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.text.SimpleDateFormat;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Current_CreditCard_Expiry_Month_Year extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\nfor(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n         WebDriverWait wait=new WebDriverWait(driver, 20);\r\n         SimpleDateFormat dateFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n         Date currentDate            = new Date();\r\n         String todaysDate           = dateFormat.format(currentDate);\r\n         \r\n         \r\n         \r\n         \r\n         //actionResult.getDTParameter(\"DT_EffectiveDate\",effectiveDate);\r\n         String[] dateArray = todaysDate.split(\"/\");\r\n        String month = dateArray[0].toString();\r\n        String year = dateArray[2].toString();\r\n        \r\n        \r\n              \r\n        \r\n        System.out.println(\"Current Month is....\"+month);\r\n        System.out.println(\"Current Year is....\"+year);\r\n        \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//select[@name='expmonth']\")));\r\n        WebElement expiryMonthEle;\r\n        expiryMonthEle=driver.findElement(By.xpath(\"//select[@name='expmonth']\"));\r\n        Select selectExpMonth = new Select(expiryMonthEle);\r\n        Thread.sleep(1000);\r\n        selectExpMonth.selectByVisibleText(month);\r\n        \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//select[@name='expyear']\")));\r\n        WebElement expiryYearEle;\r\n        expiryYearEle        = driver.findElement(By.xpath(\"//select[@name='expyear']\"));\r\n        Select selectExpYear = new Select(expiryYearEle);\r\n        Thread.sleep(1000);\r\n        selectExpYear.selectByVisibleText(year); \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Current Credit Card Expiry Month and Year entered\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Current_CreditCard_Expiry_Month_Year",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12491,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.text.SimpleDateFormat;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Future_CreditCard_Expiry_Month_Year extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n         \r\n         for(int i =1; i<=5; i++) \r\n         {       \r\n        try \r\n        {   \r\n         \r\n         WebDriverWait wait          = new WebDriverWait(driver, 20);\r\n         SimpleDateFormat dateFormat = new SimpleDateFormat(\"MM/dd/yyyy\");\r\n         Date currentDate            = new Date();\r\n         String todaysDate           = dateFormat.format(currentDate);\r\n         int nextYearValue           = 0;\r\n         int nextMonthValue          = 0;\r\n         String expectednextMonth;\r\n         String expectednextYear;\r\n        String[] dateArray = todaysDate.split(\"/\");\r\n        String month = dateArray[0].toString();\r\n        String year = dateArray[2].toString();\r\n        \r\n        int monthValue = Integer.parseInt(month);\r\n        int yearValue  = Integer.parseInt(year);\r\n        if(monthValue+1>12){\r\n        \r\n             nextYearValue  = yearValue+1;\r\n             nextMonthValue = 1;\r\n             \r\n            }else{\r\n            \r\n                nextYearValue  = yearValue;\r\n                nextMonthValue = monthValue+1;\r\n            \r\n            }\r\n        if(nextMonthValue<10){\r\n              String nextMonth  = Integer.toString(nextMonthValue);\r\n              expectednextMonth = \"0\"+nextMonth;\r\n              expectednextYear  = Integer.toString(nextYearValue);\r\n          }else{\r\n            expectednextMonth  = Integer.toString(nextMonthValue);\r\n            expectednextYear  = Integer.toString(nextYearValue);\r\n            \r\n          } \r\n        \r\n        System.out.println(expectednextMonth);\r\n         System.out.println(expectednextYear);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//select[@name='expmonth']\")));\r\n        WebElement expiryMonthEle;\r\n        expiryMonthEle=driver.findElement(By.xpath(\"//select[@name='expmonth']\"));\r\n        Select selectExpMonth = new Select(expiryMonthEle);\r\n        Thread.sleep(1000);\r\n        selectExpMonth.selectByVisibleText(expectednextMonth);\r\n        \r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//select[@name='expyear']\")));\r\n        WebElement expiryYearEle;\r\n        expiryYearEle        = driver.findElement(By.xpath(\"//select[@name='expyear']\"));\r\n        Select selectExpYear = new Select(expiryYearEle);\r\n        Thread.sleep(1000);\r\n        selectExpYear.selectByVisibleText(expectednextYear); \r\n            actionResult.status   = true;\r\n            actionResult.comments = \"Next Month and Year entered for Credit Card Expiry information\";\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Future_CreditCard_Expiry_Month_Year",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9395,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127695,
        "StepNumber": 1,
        "Description": "VerifyPaymentScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12026,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127705,
        "StepNumber": 2,
        "Description": "PaymentndBindClick",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'BindOptions-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127709,
        "StepNumber": 3,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127706,
        "StepNumber": 4,
        "Description": "Ready for Payment",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'ReadyForPayment-textEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127699,
        "StepNumber": 5,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127708,
        "StepNumber": 6,
        "Description": "Pay and bind",
        "LocatorTypeId": 7,
        "Locator": "//*[text()='Pay And Bind']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127700,
        "StepNumber": 7,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127710,
        "StepNumber": 8,
        "Description": "PaymentAndBindOptionsTAB",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12025,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127707,
        "StepNumber": 9,
        "Description": "Verify Error Message",
        "LocatorTypeId": 7,
        "Locator": "//div[@class='message']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127701,
        "StepNumber": 10,
        "Description": "PaymentAndBindOptionsTAB",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12025,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127702,
        "StepNumber": 11,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127696,
        "StepNumber": 12,
        "Description": "Verify PayAndBind Tab",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'BindOptions-btnInnerEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127703,
        "StepNumber": 13,
        "Description": "PaymentAndBindOptionsTAB",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12025,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127698,
        "StepNumber": 14,
        "Description": "PayAndBindOptionWIthAlertHandled",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12030,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127697,
        "StepNumber": 15,
        "Description": "BindWithoutMSandPayment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12028,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127704,
        "StepNumber": 16,
        "Description": "BindWithOutPayment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12039,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Payment",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12025,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\nimport org.openqa.selenium.Alert;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class PaymentAndBindOptionsTAB extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n   ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n    try \r\n    {   \r\n    \r\n    //driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n    WebElement paymentBindOptionsTabElement;\r\n    WebElement payAndBindElement;\r\n    Actions act;\r\n\r\n    WebDriverWait wait=new WebDriverWait(driver,30);\r\n    paymentBindOptionsTabElement = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'BindOptions-btnInnerEl')]\"))));\r\n\r\n    act = new Actions(driver);\r\n    act.moveToElement(paymentBindOptionsTabElement).moveByOffset(40,0).click().build().perform();\r\n\r\n    payAndBindElement= driver.findElement(By.xpath(\"//span[contains(@id,'BindOptions:PayAndBind-textEl')]\"));\r\n    act.moveToElement(payAndBindElement).moveByOffset(40,0).click().build().perform();\r\n    Thread.sleep(2000);\r\n    \r\n    if(driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle Rating Factors')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle History Report')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'The Insurance Score returned')]\")).size()>0)\r\n            {\r\n            driver.findElement(By.xpath(\"//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]\")).click();\r\n            Thread.sleep(3000);\r\n            act.moveToElement(paymentBindOptionsTabElement).moveByOffset(40,0).click().build().perform();\r\n            act.moveToElement(payAndBindElement).moveByOffset(40,0).click().build().perform(); \r\n            Thread.sleep(2000);     \r\n            }\r\n         \r\n    // To Confirm whether the page has been navigated to Payment Page or not\r\n    \r\n    // WebElement paymentMethod = driver.findElement(By.xpath(\"//select[@id='payMethodType1']\"));\r\n    Thread.sleep(4000);\r\n    Alert alert = driver.switchTo().alert();\r\n    if(wait.until(ExpectedConditions.alertIsPresent())== null)\r\n    {\r\n    System.out.println(\"Alert not exists\");\r\n    }\r\n    else\r\n    {\r\n    alert.accept();\r\n    System.out.println(\"Unexpected alert accepted Successfully.........\");\r\n    }\r\n    \r\n    actionResult.status      = true;\r\n    actionResult.comments    = \"Executed Successfully\"; \r\n \r\n    break;\r\n    }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n   ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PaymentAndBindOptionsTAB",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12030,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\nimport org.openqa.selenium.Alert;\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class PayAndBindOptionWIthAlertHandled extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\ntry{\r\n    //driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n    WebElement paymentBindOptionsTabElement;\r\n    WebElement payAndBindElement;\r\n    Actions act;\r\n\r\n    WebDriverWait wait=new WebDriverWait(driver,30);\r\n    paymentBindOptionsTabElement = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'BindOptions-btnInnerEl')]\"))));\r\n\r\n    act = new Actions(driver);\r\n    act.moveToElement(paymentBindOptionsTabElement).moveByOffset(40,0).click().build().perform();\r\n\r\n    payAndBindElement= driver.findElement(By.xpath(\"//span[contains(@id,'BindOptions:PayAndBind-textEl')]\"));\r\n    act.moveToElement(payAndBindElement).moveByOffset(40,0).click().build().perform();\r\n    Thread.sleep(4000);\r\n\r\n    /*wait.until(ExpectedConditions.alertIsPresent());\r\n       Alert simpleAlert = driver.switchTo().alert();\r\n       simpleAlert.accept();\r\n    System.out.println(\"Unexpected alert accepted Successfully.........\");*/\r\n\r\n    //alertIsPresent() condition applied\r\n    //wait.until(ExpectedConditions.alertIsPresent());\r\n    \r\n    \r\n    \r\n     if(driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle Rating Factors')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle History Report')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'The Insurance Score returned')]\")).size()>0)\r\n            {\r\n            driver.findElement(By.xpath(\"//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]\")).click();\r\n            Thread.sleep(3000);\r\n               paymentBindOptionsTabElement = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'BindOptions-btnInnerEl')]\"))));\r\n\r\n               // act = new Actions(driver);\r\n    act.moveToElement(paymentBindOptionsTabElement).moveByOffset(40,0).click().build().perform();\r\n\r\n    payAndBindElement= driver.findElement(By.xpath(\"//span[contains(@id,'BindOptions:PayAndBind-textEl')]\"));\r\n    act.moveToElement(payAndBindElement).moveByOffset(40,0).click().build().perform();\r\n    Thread.sleep(4000);\r\n  \r\n            }\r\n         \r\n    \r\n    \r\n    Alert alert = driver.switchTo().alert();\r\n    if(wait.until(ExpectedConditions.alertIsPresent())== null)\r\n    {\r\n    System.out.println(\"Alert not exists\");\r\n    }\r\n    else\r\n    {\r\n    alert.accept();\r\n    System.out.println(\"Unexpected alert accepted Successfully.........\");\r\n    }\r\n\r\n    actionResult.status = true;\r\n    actionResult.comments = \"Executed Successfully\"; \r\n\r\n\r\n}\r\ncatch(Exception e){\r\n\r\n    actionResult.status = true;\r\n           actionResult.comments =  e.getMessage();\r\n           e.printStackTrace();\r\n           \r\n}\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>\r\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PayAndBindOptionWIthAlertHandled",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12028,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class BindWithoutMSandPayment extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {\r\n        try \r\n        {           \r\n\r\n        WebElement paymentBindOptionsTabElement;\r\n        WebElement payAndBindElement;\r\n\r\n        paymentBindOptionsTabElement= driver.findElement(By.xpath(\"//span[contains(@id,'BindOptions-btnInnerEl')]\"));\r\n        Actions act = new Actions(driver);\r\n        act.moveToElement(paymentBindOptionsTabElement).moveByOffset(40,0).click().build().perform();\r\n\r\n        //payAndBindElement= driver.findElement(By.xpath(\"//span[contains(@id,'BindOptions:PayAndBind-textEl')]\"));\r\n        payAndBindElement= driver.findElement(By.xpath(\"//span[contains(@id,'BindWithoutMembership-textEl') or contains(@id,'BindWithoutPayment-textEl')]\"));\r\n        act.moveToElement(payAndBindElement).moveByOffset(40,0).click().build().perform();\r\n        \r\n        \r\n        if(driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle Rating Factors')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle History Report')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'The Insurance Score returned')]\")).size()>0){\r\n       driver.findElement(By.xpath(\"//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]\")).click();\r\n       Thread.sleep(3000);\r\n        act.moveToElement(paymentBindOptionsTabElement).moveByOffset(40,0).click().build().perform();\r\n         Thread.sleep(2000);\r\n        act.moveToElement(payAndBindElement).moveByOffset(40,0).click().build().perform();\r\n        \r\n    }\r\n        \r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\"; \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>\r\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "BindWithoutMSandPayment",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12039,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class BindWithOutPayment extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\n\ttry{\n\n\n\tWebElement paymentBindOptionsTabElement;\n\tWebElement BindWithOutPayment;\n\tThread.sleep(5000);\n\n\tWebDriverWait wait=new WebDriverWait(driver,20);\n\tpaymentBindOptionsTabElement = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'JobWizardBillingToolbarButtonSet:BindOptions-btnInnerEl')]\"))));\n\tpaymentBindOptionsTabElement.click();\n\n\tThread.sleep(2000);\n\tBindWithOutPayment= driver.findElement(By.xpath(\"//span[text()='Bind Without Payment']\"));\n\tBindWithOutPayment.click();\n\tactionResult.status = true;\n\tactionResult.comments = \"Executed Successfully\"; \n\n\n\t}\n\tcatch(Exception e){\n\n\tactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "BindWithOutPayment",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9381,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 127514,
        "StepNumber": 1,
        "Description": "Verify If Exists",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'MembershipScreen:ttlBar')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:25",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127537,
        "StepNumber": 2,
        "Description": "VerifyMembershipScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12049,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127538,
        "StepNumber": 3,
        "Description": "SetMembershipCoverageType",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Classic",
        "CustomActionId": 12050,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127513,
        "StepNumber": 4,
        "Description": "Driver2_Relationship_Status",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Other",
        "CustomActionId": 11739,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127496,
        "StepNumber": 5,
        "Description": "ClickOnGetPrice",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12051,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127494,
        "StepNumber": 6,
        "Description": "VerifyError",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'ClearButton')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127550,
        "StepNumber": 7,
        "Description": "ClickOnClearButton",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'ClearButton')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": 10267,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 30,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127502,
        "StepNumber": 8,
        "Description": "ClickOnGetPrice",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12051,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127539,
        "StepNumber": 9,
        "Description": "VerifyMembershipPaymentPlansScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12053,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127540,
        "StepNumber": 10,
        "Description": "SubmitMembershipPlan",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12054,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127497,
        "StepNumber": 11,
        "Description": "ProceedToPayment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12052,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127531,
        "StepNumber": 12,
        "Description": "Clickok",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='OK']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127529,
        "StepNumber": 13,
        "Description": "Verify if Clear button exist",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'ClearButton-btnInnerEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127530,
        "StepNumber": 14,
        "Description": "Click on Clear Button",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'ClearButton-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127503,
        "StepNumber": 15,
        "Description": "ProceedToPayment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12052,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127495,
        "StepNumber": 16,
        "Description": "Click OK",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='OK']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127542,
        "StepNumber": 17,
        "Description": "WaitForPolicyBindAlert",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127512,
        "StepNumber": 18,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127532,
        "StepNumber": 19,
        "Description": "ClickOkWithAlertHandled",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12063,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127543,
        "StepNumber": 20,
        "Description": "HitEnterToAccept",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 54,
        "ParameterName": null,
        "ParameterValue": "Enter+",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127525,
        "StepNumber": 21,
        "Description": "ClickPayAndBindOkBtnAndAcceptAlert",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12062,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127551,
        "StepNumber": 22,
        "Description": "ClickOnOKBtn",
        "LocatorTypeId": 7,
        "Locator": "//span[@id='button-1005-btnInnerEl']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127500,
        "StepNumber": 23,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127534,
        "StepNumber": 24,
        "Description": "HitEnterToLeaveSitePopUp",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 54,
        "ParameterName": null,
        "ParameterValue": "Enter+",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127548,
        "StepNumber": 25,
        "Description": "HandleLeaveSitePopup",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12088,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127554,
        "StepNumber": 26,
        "Description": "Wait For Alert Displayed",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "20",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127553,
        "StepNumber": 27,
        "Description": "Accept Alert",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 63,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127504,
        "StepNumber": 28,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127536,
        "StepNumber": 29,
        "Description": "EnterCreditCardNumber",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"ccnumfield\"]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127533,
        "StepNumber": 30,
        "Description": "ClickOnCreditCardNumber",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"creditCard\"]/div[2]/table/tbody/tr/td[1]/input",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127498,
        "StepNumber": 31,
        "Description": "ClickOnPayButton",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"payBtn\"]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127519,
        "StepNumber": 32,
        "Description": "EnterCardDetails_MembershipPaymentPage",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "4111111111111111",
        "CustomActionId": 12365,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127515,
        "StepNumber": 33,
        "Description": "SelectExpiryMonth",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "10",
        "CustomActionId": 12067,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127516,
        "StepNumber": 34,
        "Description": "SelectExpiryYear",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "2025",
        "CustomActionId": 12068,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127517,
        "StepNumber": 35,
        "Description": "EnterCVV_PAY1",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "123",
        "CustomActionId": 12363,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127518,
        "StepNumber": 36,
        "Description": "ClickOnPayBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12364,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127541,
        "StepNumber": 37,
        "Description": "MakePayment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12055,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127552,
        "StepNumber": 38,
        "Description": "GetAlert",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 5,
        "ParameterName": null,
        "ParameterValue": "Leave site?",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127505,
        "StepNumber": 39,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "7",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127544,
        "StepNumber": 40,
        "Description": "CloseMembershipConfirmNote",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12056,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127549,
        "StepNumber": 41,
        "Description": "ClickOnCloseBtnOnMemebershipConfirmationPage",
        "LocatorTypeId": 7,
        "Locator": "//button[text()='Close']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 35,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127506,
        "StepNumber": 42,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127524,
        "StepNumber": 43,
        "Description": "SelectPaymentMethodType",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "CC (Cash)",
        "CustomActionId": 12060,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127526,
        "StepNumber": 44,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "Wait",
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127535,
        "StepNumber": 45,
        "Description": "Click on Add Button",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"pm_Add\"]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127499,
        "StepNumber": 46,
        "Description": "ClickOnAdd",
        "LocatorTypeId": 7,
        "Locator": "//button[text()='Add']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127527,
        "StepNumber": 47,
        "Description": "AddBtn",
        "LocatorTypeId": 7,
        "Locator": "\r\n\r\n\r\n\r\n\r\n(//button[@id='pm_Add'])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127507,
        "StepNumber": 48,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127508,
        "StepNumber": 49,
        "Description": "ClickOnPayButton",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"payBtn\"]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127501,
        "StepNumber": 50,
        "Description": "ClickOnPay",
        "LocatorTypeId": 7,
        "Locator": "(//button[text()='Pay'])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127528,
        "StepNumber": 51,
        "Description": "PayBtn",
        "LocatorTypeId": 7,
        "Locator": "(//button[text()='Pay'])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127520,
        "StepNumber": 52,
        "Description": "EnterCreditCardNumber_PAY1",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "5454545454545454",
        "CustomActionId": 12362,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127521,
        "StepNumber": 53,
        "Description": "SelectExpMonth_PAY1_Page2",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "10",
        "CustomActionId": 12367,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127522,
        "StepNumber": 54,
        "Description": "SelectExpYear_PAY1_Page2",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "2025",
        "CustomActionId": 12368,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127523,
        "StepNumber": 55,
        "Description": "EnterCVV_PAY1_Page2",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "123",
        "CustomActionId": 12366,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127545,
        "StepNumber": 56,
        "Description": "SubmitPayment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12057,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127509,
        "StepNumber": 57,
        "Description": "ClickOnAdd",
        "LocatorTypeId": 7,
        "Locator": "//button[text()='Add']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127510,
        "StepNumber": 58,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "10",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127511,
        "StepNumber": 59,
        "Description": "ClickOnPay",
        "LocatorTypeId": 7,
        "Locator": "(//button[text()='Pay'])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127546,
        "StepNumber": 60,
        "Description": "ClosePaymentReceiptPDF",
        "LocatorTypeId": 7,
        "Locator": "\r\n//*[@id=\"formButtons\"]/div[3]/div/div/button[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 30,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 127547,
        "StepNumber": 61,
        "Description": "ReturnToAAAInsuranceApp",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12058,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Membership",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12049,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyMembershipScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[contains(@id,'MembershipScreen:ttlBar')]\")));\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'MembershipScreen:ttlBar')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Membership\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Membership' screen successfully\";\n\t\t}\n\t}\n\tcatch(Exception e){\n\t\tString exceptionMsg = e.getMessage();\n\t\tactionResult.status = false;\n           \tactionResult.comments =  \"'Membership' screen is not displayed\";\n\t}\n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyMembershipScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12050,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SetMembershipCoverageType extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ntry{\n\n\n\t\tWebElement coverageTypeEle=driver.findElement(By.xpath(\"//input[contains(@id,'MembershipInsuredDV:CoverageType')]\"));\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tcoverageTypeEle.sendKeys(s);\n\t\tcoverageTypeEle.sendKeys(Keys.DELETE);\n\n\t\tActions act = new Actions(driver);\n\t\tact.sendKeys(coverageTypeEle,inputValue).build().perform();\n\t\tcoverageTypeEle.sendKeys(Keys.ENTER);\n\n\n      \t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\"; \n\n\n\t}\n\tcatch(Exception e){\n\n\t\tactionResult.status = false;\n              actionResult.comments =  e.getMessage();\n\t}\n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SetMembershipCoverageType",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11739,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Driver2_Relationship_Status extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue)throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n            \r\n            WebDriverWait wait = new WebDriverWait(driver,30);\r\n            wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[contains(@id,'Relationship-inputEl')]\"))));\r\n\r\n            WebElement gender = driver.findElement(By.xpath(\"//*[contains(@id,'Relationship-inputEl')]\"));\r\n    \r\n            String s=Keys.chord(Keys.CONTROL,\"a\");\r\n            gender.sendKeys(s);\r\n            gender.sendKeys(Keys.DELETE);\r\n            gender.sendKeys(inputValue);\r\n    \r\n            Thread.sleep(2000);\r\n            //industry.sendKeys(Keys.ENTER);\r\n            gender.sendKeys(Keys.TAB);\r\n            Thread.sleep(2000);\r\n\r\n            actionResult.status = true;\r\n            actionResult.comments = \"Executed Successfully\"; \r\n\r\n \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n       \r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Driver2_Relationship_Status",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12051,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnGetPrice extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t\t{\t\t\n\t\ttry \n\t\t{\n\t\tWebElement getPriceTabEle;\n\t\tWebElement clearBtn;\n\t\tWebElement validationTabEle;\n\t\tgetPriceTabEle=driver.findElement(By.xpath(\"//a[contains(@id,'MembershipID:insuredLV_tb:getPrice')]\"));\n\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,15);\n\t\twait.until(ExpectedConditions.elementToBeClickable(getPriceTabEle));\n\t\tgetPriceTabEle.click();\n\t\tThread.sleep(25000);\n\t\t//clearBtn=driver.findElement(By.xpath(\"//a[contains(@id,'ClearButton')]\"));\n\t\t//JavascriptExecutor js=(JavascriptExecutor)driver;\n\t\t//js.executeScript(\"arguments[0].click()\",clearBtn);\n           \tactionResult.status = true;\n           \tactionResult.comments =  \"Clicked on 'Get Price'\";\n\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) \n\t\t{\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnGetPrice",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 10267,
    "ProjectId": 99,
    "LocatorType": 7,
    "Locator": "//a[contains(@id,'ClearButton')]",
    "PageId": 1163,
    "OuterHTML": null,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnClearButton",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 1163,
    "EntityName": "Page",
    "ProjectId": 99,
    "DictionaryPageType": 1,
    "Name": "Membership Details",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12053,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyMembershipPaymentPlansScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'MembershipPaymentScreen:ttlBar')]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Membership Payment Plans\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Membership Payment Plans' screen successfully\";\n\t\t}\n\t}\n\tcatch(Exception e){\n\t\tString exceptionMsg = e.getMessage();\n\t\tactionResult.status = false;\n           \tactionResult.comments =  \"'Membership Payment Plans' screen is not displayed\";\n\t}\n\n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyMembershipPaymentPlansScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12054,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SubmitMembershipPlan extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement submitBtnEle;\n\t\tsubmitBtnEle=driver.findElement(By.xpath(\"//a[contains(@id,'MembershipPaymentScreen:submit')]\"));\n\n\n\t\tWebDriverWait wait = new WebDriverWait(driver,10);\n\t\twait.until(ExpectedConditions.elementToBeClickable(submitBtnEle));\n\t\tsubmitBtnEle.click();\n\t\tThread.sleep(2000);\n           \tactionResult.status = true;\n           \tactionResult.comments =  \"Plan submitted successfully\";\n\t}\n\tcatch(Exception e){\n           actionResult.status = false;\n           actionResult.comments =  e.getMessage();\n\t}\n\n\n\n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SubmitMembershipPlan",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12052,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport org.openqa.selenium.Alert;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ProceedToPayment extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\ttry{\n\t\t//WebElement CCRadioEle;\n\t\tdriver.findElement(By.xpath(\"//a[contains(@id,'proceedToPayment')]\")).click();\n\t\tThread.sleep(2000);\n\n\t\t\n\t\t//driver.findElement(By.xpath(\"(//section[@class='linkAnnotation']/a[contains(@title,'autoclubsouth.uat2.acg.aaa.com')])[1]\")).click();\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Executed Successfully\";\n\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ProceedToPayment",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12063,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOkWithAlertHandled extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\ntry{\n    WebElement okBtnElement;\n    Actions act;\n\n\n\n   WebDriverWait wait=new WebDriverWait(driver,30);\n    okBtnElement;= wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[text()='OK']\"))));\n\n\n\n   act = new Actions(driver);\n    act.moveToElement(okBtnElement).moveByOffset(40,0).click().build().perform();\n    Thread.sleep(1000);\n\n\n\n   Alert alert = driver.switchTo().alert();\n    if(wait.until(ExpectedConditions.alertIsPresent())==null)\n    {\n    System.out.println(\"Alert not exists\");\n    }\n    else\n    {\n    alert.accept();\n    System.out.println(\"Unexpected alert accepted Successfully.........\");\n    }\n\n\n\n   actionResult.status = true;\n    actionResult.comments = \"Executed Successfully\";\n\n\n\n\n}\ncatch(Exception e){\n\n\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}       \n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOkWithAlertHandled",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12062,
    "Description": "Clicking Pay And Bind Alert - Ok Button And Accept Alert In Membership Page",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport org.openqa.selenium.Alert;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickPayAndBindOkBtnAndAcceptAlert extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n\n\t\tWebDriverWait wait = new WebDriverWait(driver,40);\n\n\t\tWebElement clickOkBtn;\n\t\tclickOkBtn = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[@id='button-1005-btnInnerEl']\"))));\n\t\t\n\t\tclickOkBtn.click();\n\n\t\twait.until(ExpectedConditions.alertIsPresent());\n\t\tThread.sleep(5000);\t\t\n\t\tAlert accpt = driver.switchTo().alert();\n\t\taccpt.accept();\t\t\n\t\t\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Clicked on 'Manage' button and Accepted the Alert\";\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickPayAndBindOkBtnAndAcceptAlert",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12088,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport org.openqa.selenium.Alert;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class HandleLeaveSitePopup extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\t//String JS_DISABLE_UNLOAD_DIALOG = \"Object.defineProperty(BeforeUnloadEvent.prototype,'returnValue',{get:function(){},set:function(){}})\";\n\t\t//JavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t//js.executeScript(JS_DISABLE_UNLOAD_DIALOG);\n\t\tAlert alert = driver.switchTo().alert();\n\t\tString alertMsg = alert.getText();\n\t\tSystem.out.println(alertMsg);\n\t\tif(alertMsg.contains(\"Leave site?\")){\n\t\t\talert.accept();\n\t\t}\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Leave Site Popup has been closed\";\n\t\t\n\t\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "HandleLeaveSitePopup",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12365,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\nimport java.util.*;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterCardDetails_MembershipPaymentPage extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\nWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\nwait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//iframe[@id='tokenframe']\")));\nWebElement frameEle = driver.findElement(By.xpath(\"//iframe[@id='tokenframe']\"));\nActions act = new Actions(driver);\nact.moveToElement(frameEle).moveByOffset(40,0).click().build().perform();\nact.sendKeys(inputValue).build().perform();\nThread.sleep(1000);\nactionResult.status = true;\nactionResult.comments = \"Executed Successfully\"; \n\n\n}\ncatch(Exception e){\n\nactionResult.status = false;\n           actionResult.comments =  e.getMessage();\n}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterCardDetails_MembershipPaymentPage",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12363,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterCVV_PAY1 extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebDriverWait wait=new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\tWebElement cvvEle=driver.findElement(By.xpath(\"//input[@id='CVV']\"));\n\t\twait.until(ExpectedConditions.elementToBeClickable(cvvEle));\n\t\tjs.executeScript(\"arguments[0].click()\",cvvEle);\n\t\tThread.sleep(750);\n\t\tcvvEle.sendKeys(inputValue);\n \t\tactionResult.status = true;\n           \tactionResult.comments =  \"CVV entered as: \"+inputValue;\n\n\t}\n\tcatch(Exception e){\n \t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterCVV_PAY1",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12364,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnPayBtn extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebDriverWait wait=new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\tWebElement payBtn=wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//button[@id='payBtn']\"))));\n\t\tjs.executeScript(\"arguments[0].click()\",payBtn);\n              Thread.sleep(5000);\n \t\tactionResult.status = true;\n           \tactionResult.comments =  \"Clicked on 'PAY' button\";\n\n\t}\n\tcatch(Exception e){\n \t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnPayBtn",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12055,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class MakePayment extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebElement CCRadioEle;\n\t\tWebElement payBtnEle;\n\t\tpayBtnEle=driver.findElement(By.xpath(\"(//button[@id='payBtn'])[1]\"));\n\t\tCCRadioEle = \tdriver.findElement(By.xpath(\"//input[contains(@value,'last4DigitsOfCardNo') and @type='radio']\"));\n\t\tWebDriverWait wait = new WebDriverWait(driver,10);\n\t\twait.until(ExpectedConditions.elementToBeClickable(CCRadioEle));\n\t\tCCRadioEle.click();\n\t\tThread.sleep(2000);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tjs.executeScript(\"arguments[0].click()\",payBtnEle);\n\t\t//driver.findElement(By.xpath(\"(//button[@id='payBtn'])[1]\")).click();\n\t\tThread.sleep(2000);\n\t       actionResult.status = true;\n           \tactionResult.comments =  \"Payment Successfull\";\n\t}\n\tcatch(Exception e){\n\t\t actionResult.status = false;\n          \t actionResult.comments =  e.getMessage();\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "MakePayment",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12056,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class CloseMembershipConfirmNote extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n           \r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n        WebElement closeBtnEle;\r\n        Thread.sleep(4000);\r\n        WebDriverWait wait    = new WebDriverWait(driver,30);\r\n        closeBtnEle           = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//button[text()='Close']\"))));\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        js.executeScript(\"arguments[0].click()\",closeBtnEle);\r\n        Thread.sleep(10000);\r\n        actionResult.status   = true;\r\n        actionResult.comments = \"Membership document has been closed\";\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = true;\r\n           actionResult.comments =  e.getMessage();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CloseMembershipConfirmNote",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12060,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SelectPaymentMethodType extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    try{\r\n        WebElement paymentMethodType;\r\n        String inputValue1 = \"\";\r\n        if(inputValue.equals(\"CC (Credit Card)\")){\r\n        inputValue1 = \"CC(Credit Card)\";\r\n        \r\n        }\r\n        else if(inputValue.equals(\"CA (Cash)\")){\r\n        inputValue1 = \"CA(Cash)\";\r\n        }\r\n\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        paymentMethodType=driver.findElement(By.xpath(\"//mat-label[text()='Payment Method']/ancestor::div[1]//*[@role='listbox']\"));\r\n        WebDriverWait wait = new WebDriverWait(driver,25);\r\n        wait.until(ExpectedConditions.elementToBeClickable(paymentMethodType));\r\n        \r\n        /** Select select = new Select(paymentMethodType);\r\n        try{\r\n        select.selectByVisibleText(inputValue);\r\n           \r\n            }\r\n        catch(Exception e){\r\n            select.selectByVisibleText(inputValue1); \r\n        }**/\r\n    \r\n         try{\r\n            paymentMethodType.sendKeys(inputValue);\r\n         }\r\n        catch(Exception e){\r\n            paymentMethodType.sendKeys(inputValue1);\r\n        }\r\n    \r\n                \r\n        actionResult.status = true;\r\n            actionResult.comments =  \"The Payment Method Type is selected as: \"+inputValue;\r\n\r\n    }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n            actionResult.comments = e.getMessage();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectPaymentMethodType",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12362,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterCreditCardNumber_PAY1 extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebDriverWait wait=new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\tActions actions = new Actions(driver);\n\t\t\n\t\t\n\t\tWebElement CardNumber=driver.findElement(By.xpath(\"//input[@name='creditcardno']\"));\n\t\t\n\t\twait.until(ExpectedConditions.elementToBeClickable(CardNumber));\n\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", CardNumber);\n\t\tThread.sleep(2000);\n\t\tjs.executeScript(\"arguments[0].click()\",CardNumber);\n\t\t//actions.sendKeys(inputValue).build().perform();\n\t\tCardNumber.sendKeys(inputValue);\n\t\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Credit Card Number entered as: \"+inputValue;\n\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterCreditCardNumber_PAY1",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12367,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SelectExpMonth_PAY1_Page2 extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n      \ntry{\n\t\tWebElement expiryMonthEle;\n\t\texpiryMonthEle=driver.findElement(By.xpath(\"(//select[@name='expmonth'])[2]\"));\n\t\tSelect selectExpMonth = new Select(expiryMonthEle);\n\t\tselectExpMonth.selectByVisibleText(\"10\");\n           \tactionResult.status = true;\n           \tactionResult.comments =  \"Credit Card Exiry Month has been selected\";\n\t\t\n\t}\n\tcatch(Exception e){\n           actionResult.status = false;\n           actionResult.comments =  e.getMessage();\n\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectExpMonth_PAY1_Page2",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12368,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SelectExpYear_PAY1_Page2 extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebElement expiryYearEle;\n\t\texpiryYearEle=driver.findElement(By.xpath(\"(//select[@name='expyear'])[2]\"));\n\t\tSelect selectExpYear = new Select(expiryYearEle);\n\t\tselectExpYear.selectByVisibleText(\"2025\");\n           \tactionResult.status = true;\n           \tactionResult.comments =  \"Credit Card Exiry Month has been selected\";\n\t\t\n\t}\n\tcatch(Exception e){\n           actionResult.status = false;\n           actionResult.comments =  e.getMessage();\n\t}\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectExpYear_PAY1_Page2",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12366,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterCVV_PAY1_Page2 extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry{\n\t\tWebDriverWait wait=new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\tWebElement cvvEle=driver.findElement(By.xpath(\"(//input[@id='CVV'])[2]\"));\n\t\twait.until(ExpectedConditions.elementToBeClickable(cvvEle));\n\t\tjs.executeScript(\"arguments[0].click()\",cvvEle);\n\t\tcvvEle.sendKeys(inputValue);\n \t\tactionResult.status = true;\n           \tactionResult.comments =  \"CVV entered as: \"+inputValue;\n\n\t}\n\tcatch(Exception e){\n \t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterCVV_PAY1_Page2",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12057,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SubmitPayment extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\t   \n\t   try{\n       \n\t\t\t\n\t\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tActions act = new Actions(driver);\n\t\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\t\n\t\t\t///////      Click on 'Add' button on 'Payment Portal' screen       /////////////////////////////\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//button[@id='pm_Add']\"))));\n\t\t\tWebElement AddBtnEle = driver.findElement(By.xpath(\"//button[@id='pm_Add']\"));\n\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", AddBtnEle);\n\t\t\tjs.executeScript(\"arguments[0].click();\",AddBtnEle);\n\t\t\tThread.sleep(4000);\n\t\t\t\n\t\t\t///////      Click on 'Pay' button on 'Payment Portal' screen       /////////////////////////////\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"(//button[@class='btn-sm btn-success'])[2]\"))));\n\t\t\tWebElement PayBtnEle = driver.findElement(By.xpath(\"(//button[@class='btn-sm btn-success'])[2]\"));\n\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", PayBtnEle);\n\t\t\tjs.executeScript(\"arguments[0].click();\",PayBtnEle);\n\t\t\tThread.sleep(4000);\n\t\t\t\n\t\t\tactionResult.comments = \"Payment has been submitted successfully\";\n\t\t\tactionResult.status = true;\n\t\t\t\n\t\t}\n\t\tcatch(Exception e) {\n\t\t\t\tactionResult.comments = e.getMessage();\n\t\t\t\tactionResult.status = false;\n\t\t\t}\n\n\t\t\t\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SubmitPayment",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12058,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ReturnToAAAInsuranceApp extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\t   \n\t   try{\n       \n\t\t\t\n\t\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tActions act = new Actions(driver);\n\t\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\t\n\t\t\t///////      Click on 'Return to AAA Insurance Link' on 'Payment Portal' screen       /////////////////////////////\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"(//button[text()='Return to AAA Insurance Link'])[2]\"))));\n\t\t\tWebElement AAAInsLinkEle = driver.findElement(By.xpath(\"(//button[text()='Return to AAA Insurance Link'])[2]\"));\n\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\",AAAInsLinkEle);\n\t\t\tjs.executeScript(\"arguments[0].click();\",AAAInsLinkEle);\n\t\t\tThread.sleep(4000);\n\t\t\t\n\t\t\tactionResult.comments = \"Clicked on 'Return to AAA Insurance Link' \";\n\t\t\tactionResult.status = true;\n\t\t\t\n\t\t}\n\t\tcatch(Exception e) {\n\t\t\t\tactionResult.comments = e.getMessage();\n\t\t\t\tactionResult.status = false;\n\t\t\t}\n\n\t\t\t\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ReturnToAAAInsuranceApp",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9443,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 128299,
        "StepNumber": 1,
        "Description": "VerifySubmissionBoundScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12069,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128304,
        "StepNumber": 2,
        "Description": "Wait for Details",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128298,
        "StepNumber": 3,
        "Description": "GetSubmissionID",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12070,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128302,
        "StepNumber": 4,
        "Description": "GetPolicyNumber",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12071,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128305,
        "StepNumber": 5,
        "Description": "getPolicyNO",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12073,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128306,
        "StepNumber": 6,
        "Description": "GetPolicyNumberWithoutBind",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12074,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128303,
        "StepNumber": 7,
        "Description": "GetReceiptNumber",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12072,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128301,
        "StepNumber": 8,
        "Description": "GetThePolicyNumber_PayWithoutMembership",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12548,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 128300,
        "StepNumber": 9,
        "Description": "SubmissionBoundDetails",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12078,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Submission_bound",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12069,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifySubmissionBoundScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \nfor(int i =1; i<=5; i++)\n{\n\ttry{\n\t\n driver.manage().timeouts().implicitlyWait(50, TimeUnit.SECONDS);\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'PaymentCompleteScreen:ttlBar') or contains(@id,'JobCompleteScreen:ttlBar')]\"));\n\t\tWebDriverWait wait = new WebDriverWait(driver,25);\n\t\twait.until(ExpectedConditions.visibilityOf(pageTitleEle));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Submission Bound\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Submission Bound' screen successfully\";\n\t\t}\n\n\n\t\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\n\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifySubmissionBoundScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12070,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport java.util.*;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class GetSubmissionID extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {   \r\n         \r\n        WebElement submissionNumberEle;\r\n        submissionNumberEle = driver.findElement(By.xpath(\"//div[contains(text(),'View your submission')]\"));\r\n        WebDriverWait wait  = new WebDriverWait(driver,20);\r\n        wait.until(ExpectedConditions.visibilityOf(submissionNumberEle));\r\n        String submissionNumberText=submissionNumberEle.getText();\r\n        String[] arrNumber=submissionNumberText.split(\"#\");\r\n        String submissionNumber=arrNumber[1].toString().replace(\")\", \"\");\r\n        //String submissionNumber = submissionNumberText.substring(submissionNumberText.indexOf(\"#\"), submissionNumberText.lastIndexOf(\")\"));\r\n        System.out.println(submissionNumber);\r\n        actionResult.SaveParameterValue(\"DT_PolicySubmissionID\", submissionNumber);\r\n        actionResult.status = true;\r\n            actionResult.comments =  \"Policy Submission has been completed successfully : \"+submissionNumber;\r\n \r\n        break;\r\n        }\r\n    \r\n    catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }   \r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetSubmissionID",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12071,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement; \nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.awt.AWTException;\nimport java.util.concurrent.TimeUnit;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\n\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class GetPolicyNumber extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       for(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n        WebElement policyNumberEle;\n\t\tpolicyNumberEle = driver.findElement(By.xpath(\"//div[contains(text(),'View your policy')]\"));\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\twait.until(ExpectedConditions.visibilityOf(policyNumberEle));\n\t\tString policyNumberText=policyNumberEle.getText();\n\t\tString[] arrPolicyNumber=policyNumberText.split(\"#\");\n\t\tString PolicyNumber=arrPolicyNumber[1].toString().replace(\")\", \"\");\n\t\tSystem.out.println(PolicyNumber);\n\t\tactionResult.SaveParameterValue(\"DT_PolicyNumber\", PolicyNumber);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Policy Submission has been completed successfully : \"+PolicyNumber;\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetPolicyNumber",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12073,
    "Description": "Getting Policy Number while in execution.",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class getPolicyNO extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       for(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n        WebDriverWait wait = new WebDriverWait(driver,20);\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(text(),'AUT')]\"))));\t\t\n\t\tWebElement policyNumberEle;\n\t\t//policyNumberEle = driver.findElement(By.xpath(\"//span[contains(text(),'AUT')]\"));\n\t\t\n\t\tString policyNumberText=policyNumberEle.getText();\n\t\t\n\t\tString[] arrPolicyNumber=policyNumberText.split(\"#\");\n\t\tString PolicyNumber=arrPolicyNumber[1].toString().replace(\" \", \"\");\n\t\tactionResult.SaveParameterValue(\"DT_PolicyNumber\", PolicyNumber);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Policy Submission has been completed successfully : \"+PolicyNumber;\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "getPolicyNO",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12074,
    "Description": "Getting Policy Number and Entering to Policy Center",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class GetPolicyNumberWithoutBind extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\ttry{\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\tWebElement policyIDElmt0 = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'PolicyNumber-btnInnerEl')]\"))));\n\t\tWebElement policyIDElmt = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'PolicyNumber-btnInnerEl')]/span[2]\"))));\n\t\tString policyID=policyIDElmt.getText();\n\t\tSystem.out.println(policyID);\n\t\tjs.executeScript(\"arguments[0].click();\", policyIDElmt0);\n\t\t\n\t\t//actionResult.SaveParameterValue(\"DT_PolicyID\", policyID);\n\t\tactionResult.SaveParameterValue(\"DT_PolicyNumber\", policyID);\n\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Policy Submission has been completed successfully\"+policyID;\n\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetPolicyNumberWithoutBind",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12072,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class GetReceiptNumber extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \nfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n       WebElement receiptNumberEle;\n\t\treceiptNumberEle = driver.findElement(By.xpath(\"//div[contains(text(),'Receipt Number')]\"));\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\twait.until(ExpectedConditions.visibilityOf(receiptNumberEle));\n\t\tString receiptNumberText=receiptNumberEle.getText();\n\t\tString[] arrNumber=receiptNumberText.split(\"#\");\n\t\tString receiptNumber=arrNumber[1].toString().replace(\")\", \"\");\n\t\t//String receiptNumber = receiptNumberText.substring(receiptNumberText.indexOf(\"#\"), receiptNumberText.lastIndexOf(\")\"));\n\t\tSystem.out.println(receiptNumber);\n\t\tactionResult.SaveParameterValue(\"DT_ReceiptNumber\", receiptNumber);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"The Receipt Number is generated successfully : \"+receiptNumber;\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetReceiptNumber",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12548,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class GetThePolicyNumber_PayWithoutMembership extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\n            // wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"(//span[@class='infobar_elem_val'])[3]\"))));\n\n\t\tWebElement policyNumEle;\n\t\t\t//policyNumEle=driver.findElement(By.xpath(\"(//span[@class='infobar_elem_val'])[3]\"));\n                policyNumEle=wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[(contains(text(),'Policy #'))]//following-sibling::span\"))));\n\n\n\t\t\n\t\tString policyNumber = policyNumEle.getText();\n\t\tactionResult.SaveParameterValue(\"DT_PolicyNumber\", policyNumber);\n\t\tactionResult.status = true;\n      \tactionResult.comments =  \"Policy  Number :\"+policyNumber+\" has been created successfully\";\n\n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetThePolicyNumber_PayWithoutMembership",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12078,
    "Description": "Capturing the 'Submission' details from the 'Submission Bound' screen.",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.util.List;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\n\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SubmissionBoundDetails extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\t\t\n\t\ttry \n\t\t{\t\n\t\t\t\n\t\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tActions act = new Actions(driver);\n\t\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\tString payAndBindOption =  actionResult.getDTParameter(\"DT_PayAndBindOption\");\n\t\t\tString PolicyNumber = \"\";\n\t\t\tString SubmissionID = \"\";\n\t\t\tString ReceiptNumber = \"\";\n\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'CompleteScreen:ttlBar')]\"))));\n\t\t\tWebElement SubBoundPageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'CompleteScreen:ttlBar')]\"));\n\t\t\tString actSubBoundPageTitle = SubBoundPageTitleEle.getText();\n\t\t\tif(actSubBoundPageTitle.equals(\"Submission Bound\")){\n\t\t\t\tactionResult.status = true;\n\t\t\t\tactionResult.comments =  \"Naviagted to 'Submission Bound' screen successfully\";\n\t\t\t}\n\t\t\t\n\t\t\tif(payAndBindOption.equals(\"Pay And Bind\")){\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(text(),'View your policy')]\"))));\n\t\t\t\tWebElement policyNumEle = driver.findElement(By.xpath(\"//div[contains(text(),'View your policy')]\"));\n\t\t\t\tString policyNum = policyNumEle.getText();\n\t\t\t\tString[] arrPolicyNumber=policyNum.split(\"#\");\n\t\t\t\tPolicyNumber=arrPolicyNumber[1].toString().replace(\")\", \"\");\n\t\t\t\tSystem.out.println(PolicyNumber);\n\t\t\t\tactionResult.SaveParameterValue(\"DT_PolicyNumber\", PolicyNumber);\n\t\t\t\t\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(text(),'View your submission')]\"))));\n\t\t\t\tWebElement submissionIDEle = driver.findElement(By.xpath(\"//div[contains(text(),'View your submission')]\"));\n\t\t\t\tString SubID = submissionIDEle.getText();\n\t\t\t\tString[] arrSubID=SubID.split(\"#\");\n\t\t\t\tSubmissionID=arrSubID[1].toString().replace(\")\", \"\");\n\t\t\t\tSystem.out.println(SubmissionID);\n\t\t\t\tactionResult.SaveParameterValue(\"DT_PolicySubmissionID\", SubmissionID);\n\t\t\t\t\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(text(),'Receipt Number')]\"))));\n\t\t\t\tWebElement receiptNumEle = driver.findElement(By.xpath(\"//div[contains(text(),'Receipt Number')]\"));\n\t\t\t\tString receiptNum = receiptNumEle.getText();\n\t\t\t\tString[] arrReceiptNum=receiptNum.split(\"#\");\n\t\t\t\tReceiptNumber=arrReceiptNum[1].toString().replace(\")\", \"\");\n\t\t\t\tSystem.out.println(ReceiptNumber);\n\t\t\t\tactionResult.SaveParameterValue(\"DT_ReceiptNumber\", ReceiptNumber);\n\t\t\t\t\n\t\t\t\tactionResult.comments =  \"The Submission has been bounded and the Details : \"+\" The Policy Number: \" +PolicyNumber+\" Submission ID: \"+SubmissionID+\" Receipt Number: \"+ReceiptNumber;\n\t\t\t\tactionResult.status = true;\n\n\t\t\t}\n\t\t\telse if(payAndBindOption.equals(\"Pay And Bind Without Membership\")){\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//label[contains(@id,'Message')]\"))));\n\t\t\t\tWebElement submissionIDEle = driver.findElement(By.xpath(\"//label[contains(@id,'Message')]\"));\n\t\t\t\tString SubID = submissionIDEle.getText();\n\t\t\t\tString[] arrSubID=SubID.split(\"#\");\n\t\t\t\tSubmissionID=arrSubID[1].toString().replace(\")\", \"\");\n\t\t\t\tSystem.out.println(SubmissionID);\n\t\t\t\tactionResult.SaveParameterValue(\"DT_PolicySubmissionID\", SubmissionID);\n\t\t\t\t\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'PolicyNumber-btnInnerEl')]//span[contains(@class,'elem_val')]\"))));\n\t\t\t\tWebElement policyNumEle = driver.findElement(By.xpath(\"//span[contains(@id,'PolicyNumber-btnInnerEl')]//span[contains(@class,'elem_val')]\"));\n\t\t\t\tPolicyNumber = policyNumEle.getText();\n\t\t\t\tSystem.out.println(PolicyNumber);\n\t\t\t\tactionResult.SaveParameterValue(\"DT_PolicyNumber\", PolicyNumber);\n\t\t\t\t\n\t\t\t\tactionResult.comments =  \"The Submission has been bounded and the Details : \"+\" The Policy Number: \" +PolicyNumber+\" Submission ID: \"+SubmissionID;\n\t\t\t\tactionResult.status = true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tactionResult.comments =  \"Submission Details not found\";\n\t\t\t\tactionResult.status = true;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\n\t}\t\n\tcatch(Exception e){\n\t\t\t\t\n           \t\tactionResult.comments =  \"The 'Submission Bound' screen is not displayed\"+e.getMessage();\n\t\t\t\tactionResult.status = false;\n\t}\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SubmissionBoundDetails",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9566,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 123410,
        "StepNumber": 1,
        "Description": "VerifyDwellingScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12135,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123411,
        "StepNumber": 2,
        "Description": "ClickOnAutoFillButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12452,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123437,
        "StepNumber": 3,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123439,
        "StepNumber": 4,
        "Description": "CaptureDwellingCurrentAddress",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12796,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123412,
        "StepNumber": 5,
        "Description": "ProtectionDetailsTabClick",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12147,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123413,
        "StepNumber": 6,
        "Description": "FireAlarm",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Localized",
        "CustomActionId": 12129,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123414,
        "StepNumber": 7,
        "Description": "BurglarAlarm",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Localized",
        "CustomActionId": 12132,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123415,
        "StepNumber": 8,
        "Description": "WaterDetectionDevice",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Single Point Detection",
        "CustomActionId": 12133,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123441,
        "StepNumber": 9,
        "Description": "Verify Responding FireDept",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'FireDepartmentId-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123440,
        "StepNumber": 10,
        "Description": "RespondingFireDeptRandomSelection",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12151,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123416,
        "StepNumber": 11,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123438,
        "StepNumber": 12,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123417,
        "StepNumber": 13,
        "Description": "verifyDwellingConstructionScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12203,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123418,
        "StepNumber": 14,
        "Description": "ClickOnAutoFillButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12452,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123419,
        "StepNumber": 15,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123385,
        "StepNumber": 16,
        "Description": "Click RCE",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='Replacement Cost Estimator']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123386,
        "StepNumber": 17,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": "3",
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123387,
        "StepNumber": 18,
        "Description": "RCE",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='Retrieve RCE']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123420,
        "StepNumber": 19,
        "Description": "VerifyReportsScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11848,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123442,
        "StepNumber": 20,
        "Description": "InsuranceScoreOrdered",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No-Opt Out",
        "CustomActionId": 11846,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123443,
        "StepNumber": 21,
        "Description": "YesOrNoHomeLosses",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11857,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123421,
        "StepNumber": 22,
        "Description": "ClickOnAutoFillButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12452,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123422,
        "StepNumber": 23,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123423,
        "StepNumber": 24,
        "Description": "VerifyCoveragesScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12239,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123388,
        "StepNumber": 25,
        "Description": "AllOtherPerils",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "500",
        "CustomActionId": 12242,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123389,
        "StepNumber": 26,
        "Description": "TropicalCyclone",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": 12240,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123424,
        "StepNumber": 27,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123425,
        "StepNumber": 28,
        "Description": "VerifyScheduledPersonalPropertyScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12339,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123426,
        "StepNumber": 29,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123427,
        "StepNumber": 30,
        "Description": "VerifyRiskAnalysisScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11982,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123428,
        "StepNumber": 31,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123429,
        "StepNumber": 32,
        "Description": "VerifyPolicyReviewScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11841,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123390,
        "StepNumber": 33,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123391,
        "StepNumber": 34,
        "Description": "Click Quote Button",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'QuoteOrReview-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123392,
        "StepNumber": 35,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123393,
        "StepNumber": 36,
        "Description": "VerifySideBySideQuotingScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11990,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123394,
        "StepNumber": 37,
        "Description": "SelectVersion2PaymentxOption",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "Version2",
        "ParameterValue": "DT_PaymentPlan",
        "CustomActionId": 11992,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123395,
        "StepNumber": 38,
        "Description": "SelectVersion3PaymentOption",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "Version3",
        "ParameterValue": "DT_PaymentPlan",
        "CustomActionId": 11991,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123396,
        "StepNumber": 39,
        "Description": "VerifyQuoteScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12000,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123397,
        "StepNumber": 40,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123398,
        "StepNumber": 41,
        "Description": "GetQuoteNumber",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12610,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123399,
        "StepNumber": 42,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123400,
        "StepNumber": 43,
        "Description": "VerifyFormsScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12011,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123401,
        "StepNumber": 44,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123402,
        "StepNumber": 45,
        "Description": "ClickOnAutoFillButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12452,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123444,
        "StepNumber": 46,
        "Description": "ClickOnProceedToBindButtonOnFormsScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'ProceedToBind')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123445,
        "StepNumber": 47,
        "Description": "Wait after Click on proceed",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123446,
        "StepNumber": 48,
        "Description": "Click on Report from Menu",
        "LocatorTypeId": 3,
        "Locator": "SubmissionWizard:LOBWizardStepGroup:Reports_Acg",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123447,
        "StepNumber": 49,
        "Description": "VerifyReportsScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11848,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123448,
        "StepNumber": 50,
        "Description": "LossesandViolationsTabOpened",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11849,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123449,
        "StepNumber": 51,
        "Description": "ClickOnOrderRetrieveHomeLossHistory_Home",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11854,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123450,
        "StepNumber": 52,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123403,
        "StepNumber": 53,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123451,
        "StepNumber": 54,
        "Description": "VerifyCoveragesScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12239,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123452,
        "StepNumber": 55,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123453,
        "StepNumber": 56,
        "Description": "VerifyScheduledPersonalPropertyScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12339,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123454,
        "StepNumber": 57,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123455,
        "StepNumber": 58,
        "Description": "VerifyRiskAnalysisScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11982,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123456,
        "StepNumber": 59,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123457,
        "StepNumber": 60,
        "Description": "VerifyPolicyReviewScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11841,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123458,
        "StepNumber": 61,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123459,
        "StepNumber": 62,
        "Description": "ClickOnQuoteBtnOnPolicyReviewScreen",
        "LocatorTypeId": 7,
        "Locator": "//a[contains(@id,'QuoteOrReview')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123460,
        "StepNumber": 63,
        "Description": "VerifyQuoteScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12000,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123461,
        "StepNumber": 64,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123462,
        "StepNumber": 65,
        "Description": "VerifyFormsScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12011,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123463,
        "StepNumber": 66,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123404,
        "StepNumber": 67,
        "Description": "VerifyPaymentScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12026,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123405,
        "StepNumber": 68,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123430,
        "StepNumber": 69,
        "Description": "ClickManageAndAcceptAlert",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12029,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123464,
        "StepNumber": 70,
        "Description": "ClickOnCreditCardTab",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12032,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123431,
        "StepNumber": 71,
        "Description": "EnterCCNumber",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12066,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123432,
        "StepNumber": 72,
        "Description": "SelectExpiryMonth",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12067,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123433,
        "StepNumber": 73,
        "Description": "SelectExpiryYear",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12068,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123434,
        "StepNumber": 74,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123435,
        "StepNumber": 75,
        "Description": "ClickOnSaveBtnOnPaymentCollectionScreen",
        "LocatorTypeId": 7,
        "Locator": "(//button[@class='btn-sm btn-success'])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123436,
        "StepNumber": 76,
        "Description": "VerifyPaymentScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12026,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123384,
        "StepNumber": 77,
        "Description": "BindWithoutMembership",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13998,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123406,
        "StepNumber": 78,
        "Description": "BindWithoutMSandPayment",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12028,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123407,
        "StepNumber": 79,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123408,
        "StepNumber": 80,
        "Description": "VerifySubmissionBoundScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12069,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 123409,
        "StepNumber": 81,
        "Description": "GetNewPolicyNumberPWMCopy",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12831,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "New Submission_AutoFill_Home",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12796,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class CaptureDwellingCurrentAddress extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry\n{\nString address =  driver.findElement(By.xpath(\"//input[contains(@id,'HODwellingLocationInput-inputEl')]\")).getAttribute(\"value\");\n\nSystem.out.println(address);\n\nactionResult.SaveParameterValue(\"DT_DwellingCurrentAddress\", address);\nactionResult.status = true;\n           actionResult.comments =  \"Dwelling Address = \"+address;\n}\n\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =e.getMessage();\n\n\t}\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "CaptureDwellingCurrentAddress",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11990,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifySideBySideQuotingScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\n\n\ttry{\n\t\t\t\n\t\t\tint iWaitTime = 0;\n\t\t\twhile (true) {\n\t\t\tif(driver.findElements(By.xpath(\"//span[contains(@id,'SideBySideScreen:ttlBar')]\")).size() >0) {\n\t\t\t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Nevigated to 'Side-by-Side Quoting' screen successfully\";\n          \t\tbreak;\n\t\t\t}else {\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tiWaitTime = iWaitTime + 1;\n\t\t\t\tSystem.out.println(\"wait for 1 sec to load the page\");\n\t\t\t\tif (iWaitTime > 50) {\n\t\t\t\t\tthrow new Exception(\"'Side-by-Side Quoting' screen is not displayed\");\n\t\t\t\t}\n\t\t\t}\n\t           \t\t\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e){\n\t\t\tString exceptionMsg = e.getMessage();\n\t\t\tactionResult.status = false;\n\t           \tactionResult.comments =  \"'Side-by-Side Quoting' screen is not displayed\"+exceptionMsg;\n\t\t}\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifySideBySideQuotingScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11991,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SelectVersion3PaymentOption extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n for(int i =1; i<=5; i++)\r\n{      \r\n\r\n    try{\r\n        driver.manage().timeouts().implicitlyWait(40, TimeUnit.SECONDS);\r\n        WebDriverWait wait = new WebDriverWait(driver,15);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//a[contains(@id,'SideBySidePeriod:2') and text()='\"+inputValue+\"']\")));\r\n        \r\n        WebElement version3PaymentOptEle = driver.findElement(By.xpath(\"//a[contains(@id,'SideBySidePeriod:2') and text()='\"+inputValue+\"']\"));\r\n        version3PaymentOptEle.click();\r\n        \r\n        Thread.sleep(5000);\r\n            if(driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle Rating Factors')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'Vehicle History Report')]\")).size()>0  ||driver.findElements(By.xpath(\"//*[@class='message' and contains(text(),'The Insurance Score returned')]\")).size()>0)\r\n            {\r\n            driver.findElement(By.xpath(\"//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]\")).click();\r\n            Thread.sleep(3000);\r\n             version3PaymentOptEle .click();     \r\n            }\r\n         \r\n        \r\n        \r\n        Thread.sleep(2000);\r\n            actionResult.status = true;\r\n            actionResult.comments =  \"The Payment option for Version 3 selected as:\"+inputValue;\r\n            break;\r\n     \r\n        }\r\n    catch(Exception e){\r\n        actionResult.status = false;\r\n            actionResult.comments =  \"Payment Option not available\"+e.getMessage();\r\n\r\n    }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectVersion3PaymentOption",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12066,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterCCNumber extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\ttry{\n\t\tWebElement creditCardNumEle;\n\t\tcreditCardNumEle=driver.findElement(By.xpath(\"//input[@name='creditaccno']\"));\n\t\tcreditCardNumEle.click();\n\t\tcreditCardNumEle.sendKeys(inputValue); \n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"The Credit Card Number Entered as:\"+inputValue;\n\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterCCNumber",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 13998,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class BindWithoutMembership extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\t\t\n\n\t\tWebElement paymentBindOptionsTabElement;\n\t\tWebElement payAndBindElement;\n\n\t\tpaymentBindOptionsTabElement= driver.findElement(By.xpath(\"//span[contains(@id,'BindOptions-btnInnerEl')]\"));\n\t\tActions act = new Actions(driver);\n\t\tact.moveToElement(paymentBindOptionsTabElement).moveByOffset(40,0).click().build().perform();\n\n\t\tpayAndBindElement= driver.findElement(By.xpath(\"//span[contains(@id,'BindWithoutMembership-textEl')]\"));\n\t\tact.moveToElement(payAndBindElement).moveByOffset(40,0).click().build().perform();\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\"; \n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "BindWithoutMembership",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12831,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class GetNewPolicyNumberPWMCopy extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\ttry{\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\tWebElement policyIDElmt0 = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'PolicyNumber-btnInnerEl')]\"))));\n\t\tWebElement policyIDElmt = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'PolicyNumber-btnInnerEl')]/span[2]\"))));\n\t\tString policyID=policyIDElmt.getText();\n\t\tSystem.out.println(policyID);\n\t\tjs.executeScript(\"arguments[0].click();\", policyIDElmt0);\n\t\t\n\t\t//actionResult.SaveParameterValue(\"GDT_Auto_CopyPolicyNumber\", policyID);\n\t\tactionResult.SaveParameterValue(\"DT_CopyPolicyNumber\", policyID);\n\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Policy Submission has been completed successfully\"+policyID;\n\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  e.getMessage();\n\n\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetNewPolicyNumberPWMCopy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9487,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 122135,
        "StepNumber": 1,
        "Description": "ClickOnPolicyTab",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12559,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122136,
        "StepNumber": 2,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122137,
        "StepNumber": 3,
        "Description": "Enter Policy Number",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'PolicyTab_PolicyRetrievalItem-inputEl')]",
        "ActionId": 43,
        "ParameterName": "P_3_Policy_#",
        "ParameterValue": "DT_PolicyNumber",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122138,
        "StepNumber": 4,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122139,
        "StepNumber": 5,
        "Description": "Click the Find button in the My Activities screen",
        "LocatorTypeId": 3,
        "Locator": "TabBar:PolicyTab:PolicyTab_PolicyRetrievalItem_Button",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122140,
        "StepNumber": 6,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122134,
        "StepNumber": 7,
        "Description": "EffectiveDateForChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "ForNormalChangeOnly",
        "ParameterValue": null,
        "CustomActionId": 12456,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122133,
        "StepNumber": 8,
        "Description": "EffectiveDateForOOSChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": "ForOnlyOOSChange",
        "ParameterValue": null,
        "CustomActionId": 12455,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Search_Policy_From_Policy_Menu",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12559,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnPolicyTab extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n   \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n        WebElement elem = driver.findElement(By.xpath(\"//span[@id='TabBar:PolicyTab-btnInnerEl']\"));\n\t\tActions act = new Actions(driver);\n\t\tact.moveToElement(elem).moveByOffset(40,0).click().build().perform();\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\"; \n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnPolicyTab",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12456,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EffectiveDateForChange extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tWebDriverWait wait = new WebDriverWait(driver,30);\n\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\tActions act = new Actions(driver);\n\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\tString inputValueVariable = inputValue;\n\t\t\n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'PolicyPerEffDate-inputEl')]\")));\n\t\tWebElement effectiveDate= driver.findElement(By.xpath(\"//div[contains(@id,'PolicyPerEffDate-inputEl')]\"));\n\t\tString effectiveDateTxt = effectiveDate.getText();\n\t\t//String effectiveDateTxt = \"06/25/2022\";\t\t\n\t\t\n\t\tString date[] =effectiveDateTxt.split(\"/\");\n\t\tString month=date[0];\n\t\tString day=date[1];\n\t\tString year=date[2];\n\t\t\n\t\tint j =Integer.parseInt(day);\n\t\tint effectiveDay= j+0;\n\t\t\n\t\tString firstDayTxt = Integer.toString(effectiveDay);\n\t\t\n\t\tString effectiveDateNew= month+\"/\"+firstDayTxt+\"/\"+year;\n\n\t\tactionResult.SaveParameterValue(\"DT_EffectiveDate\", effectiveDateNew);\n\t\t\n\t\tThread.sleep(500);\n\t\t\n\t\tactionResult.comments =\"Effective Date Fetched\";\n\t\tactionResult.status = true;\n\t\t\n\t\tbreak;\n\n\t\t}\n\n\tcatch(Exception e) \n\t\t{\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EffectiveDateForChange",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12455,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class EffectiveDateForOOSChange extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    WebDriverWait wait = new WebDriverWait(driver,30);\r\n    JavascriptExecutor js = (JavascriptExecutor)driver;\r\n    Actions act = new Actions(driver);\r\n    String selectText=Keys.chord(Keys.CONTROL,\"a\");\r\n    String inputValueVariable = inputValue;\r\n        \r\n    for(int i =1; i<=5; i++) \r\n    {       \r\n        try \r\n        {\r\n\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'PolicyPerEffDate-inputEl')]\")));\r\n        WebElement effectiveDate= driver.findElement(By.xpath(\"//div[contains(@id,'PolicyPerEffDate-inputEl')]\"));\r\n        String effectiveDateTxt = effectiveDate.getText();\r\n        //String effectiveDateTxt = \"06/25/2022\";\r\n        \r\n        /* String date[] =effectiveDateTxt.split(\"/\");\r\n        String month=date[0];\r\n        String day=date[1];\r\n        String year=date[2];\r\n        \r\n        int j =Integer.parseInt(day);\r\n        int firstDay= j+2;\r\n        int secondDay= j+1;\r\n        \r\n        String firstDayTxt = Integer.toString(firstDay);\r\n        String secondDayTxt = Integer.toString(secondDay);\r\n        \r\n        String firstEffectiveDate = month+\"/\"+firstDayTxt+\"/\"+year;\r\n        String secondEffectiveDate = month+\"/\"+secondDayTxt+\"/\"+year;       \r\n        \r\n        System.out.println(effectiveDateTxt +\" \"+firstEffectiveDate+\" \"+secondEffectiveDate); */\r\n        \r\n        SimpleDateFormat date1=new SimpleDateFormat(\"MM/dd/yyyy\");\r\n        Calendar c = Calendar.getInstance();\r\n        c.setTime(date1.parse(effectiveDateTxt));\r\n        c.add(Calendar.DATE, 1);  // number of days to add\r\n        String firstEffectiveDate = date1.format(c.getTime());\r\n        c.add(Calendar.DATE, 1);\r\n        String secondEffectiveDate = date1.format(c.getTime());\r\n        \r\n        \r\n        \r\n        actionResult.SaveParameterValue(\"DT_EffectiveDate\", effectiveDateTxt);\r\n        actionResult.SaveParameterValue(\"DT_PolicyFirstChangeEffectiveDate\", firstEffectiveDate);\r\n        actionResult.SaveParameterValue(\"DT_PolicySecondChangeEffectiveDate\", secondEffectiveDate);     \r\n        \r\n        Thread.sleep(500);\r\n        \r\n        actionResult.comments =\"Effective Date Fetched\";\r\n        actionResult.status = true;\r\n        \r\n        break;\r\n        }\r\n    catch(Exception e) \r\n        {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n    }\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EffectiveDateForOOSChange",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9853,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 129622,
        "StepNumber": 1,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129623,
        "StepNumber": 2,
        "Description": "Select the Actions menubar",
        "LocatorTypeId": 3,
        "Locator": "PolicyFile:PolicyFileMenuActions-btnIconEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129624,
        "StepNumber": 3,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129625,
        "StepNumber": 4,
        "Description": "Select the New Policy Transaction menu",
        "LocatorTypeId": 3,
        "Locator": "PolicyFile:PolicyFileMenuActions:PolicyFileMenuActions_NewWorkOrder-textEl",
        "ActionId": 26,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129626,
        "StepNumber": 5,
        "Description": "Select the Change Policy clickchoice",
        "LocatorTypeId": 3,
        "Locator": "PolicyFile:PolicyFileMenuActions:PolicyFileMenuActions_NewWorkOrder:PolicyFileMenuActions_ChangePolicy-textEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129635,
        "StepNumber": 6,
        "Description": "UnSelectPendPolicy",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12387,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129633,
        "StepNumber": 7,
        "Description": "Enter Effectve date",
        "LocatorTypeId": 7,
        "Locator": "(//input[@data-ref='inputEl'])[7]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "10/29/2022",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129634,
        "StepNumber": 8,
        "Description": "Enter Effective date 2",
        "LocatorTypeId": 7,
        "Locator": "//input[@placeholder='MM/dd/yyyy']",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "10/29/2022",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129627,
        "StepNumber": 9,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129628,
        "StepNumber": 10,
        "Description": "EffectiveDateFromSystem",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 13984,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129629,
        "StepNumber": 11,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129636,
        "StepNumber": 12,
        "Description": "EffectiveDate_FutureDated",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12086,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129637,
        "StepNumber": 13,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129630,
        "StepNumber": 14,
        "Description": "Click on Description",
        "LocatorTypeId": 7,
        "Locator": "//input[contains(@id,'Description')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129631,
        "StepNumber": 15,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129632,
        "StepNumber": 16,
        "Description": "Click Next",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'NewPolicyChange-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Start_Policy_Change_PC",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12387,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class UnSelectPendPolicy extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\n\t\ttry{\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tWebElement pendElemt = driver.findElement(By.xpath(\"//input[contains(@id,'StartPolicyChangeScreen:PendOptIn-inputEl')]\"));\n\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", pendElemt);\n\t\t\tpendElemt.click();\n\t\t\tactionResult.status=true;\n\t\t}\n\t\tcatch(Exception ex)\n        {\n\t\t\tactionResult.status=true;\n        \tactionResult.comments = ex.getMessage();\n        }\t\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "UnSelectPendPolicy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9643,
    "Description": "Making Changes in Dwelling and Dwelling Constructions",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 124988,
        "StepNumber": 1,
        "Description": "VerifyPolicyInfoScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11602,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124997,
        "StepNumber": 2,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124989,
        "StepNumber": 3,
        "Description": "VerifyPriorInsuranceScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12112,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124998,
        "StepNumber": 4,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124990,
        "StepNumber": 5,
        "Description": "YesOrNoSmokerResidingInHouse",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": 12124,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124991,
        "StepNumber": 6,
        "Description": "ProtectionDetailsTabClick",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12147,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124992,
        "StepNumber": 7,
        "Description": "YesOrNoSprinklerSystem",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": 12127,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124993,
        "StepNumber": 8,
        "Description": "YesOrNoDeadbolt",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "No",
        "CustomActionId": 12128,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124994,
        "StepNumber": 9,
        "Description": "FireAlarm",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Centralized",
        "CustomActionId": 12129,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124995,
        "StepNumber": 10,
        "Description": "YesOrNoFireExtinguisher",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Yes",
        "CustomActionId": 12130,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124996,
        "StepNumber": 11,
        "Description": "BurglarAlarm",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Localized",
        "CustomActionId": 12132,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "PolicyChange_Dwelling_ProtectionDetails",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12379,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickNextBtnPolicyChange extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\twait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(\"//*[contains(@id,'PolicyChangeWizard:Next-btnInnerEl')]\")));\n\t\tWebElement nxtBtnEle=driver.findElement(By.xpath(\"//*[contains(@id,'PolicyChangeWizard:Next-btnInnerEl')]\"));\n\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", nxtBtnEle);\n\t\tjs.executeScript(\"arguments[0].click()\",nxtBtnEle);\n\t\tactionResult.status = true;\n       \tactionResult.comments =  \"Click on 'Next' button successful\";\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickNextBtnPolicyChange",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9642,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 124970,
        "StepNumber": 1,
        "Description": "AdditionalInterestTabClick",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12178,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124971,
        "StepNumber": 2,
        "Description": "NewAdditionalInterest_Person",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12179,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124972,
        "StepNumber": 3,
        "Description": "EnterInterestType",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_InterestType",
        "CustomActionId": 12180,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124973,
        "StepNumber": 4,
        "Description": "EnterFirstName",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_AdditionalInterestFirstName",
        "CustomActionId": 12181,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124974,
        "StepNumber": 5,
        "Description": "EnterLastName",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_AdditionalInterestLastName",
        "CustomActionId": 12182,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124975,
        "StepNumber": 6,
        "Description": "EnterGender",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_AdditionalInterestGender",
        "CustomActionId": 12183,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124976,
        "StepNumber": 7,
        "Description": "EnterDateofBirthInAdditionalInterest",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_AdditionalInterestDOB",
        "CustomActionId": 12184,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124977,
        "StepNumber": 8,
        "Description": "EnterMaritalStatus_AdditionalInterest",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_AdditionalInterestMaritalStatus",
        "CustomActionId": 12185,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124978,
        "StepNumber": 9,
        "Description": "PrimaryMethodOfContact",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PrimaryMethodOfContact",
        "CustomActionId": 12186,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124979,
        "StepNumber": 10,
        "Description": "EnterHomePhone_AdditionalInterest",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_AdditionalInterestHomePhoneNo",
        "CustomActionId": 12187,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124980,
        "StepNumber": 11,
        "Description": "EnterEmail_AdditionalInterest",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_AdditionalInterestEmail",
        "CustomActionId": 12188,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124981,
        "StepNumber": 12,
        "Description": "SelectAddressSameAsInsured",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12189,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124982,
        "StepNumber": 13,
        "Description": "ClickOnStandardizeBtn_AdditionalInterest",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12190,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124983,
        "StepNumber": 14,
        "Description": "VerifyStandardizeAddrPage",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11769,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124961,
        "StepNumber": 15,
        "Description": "Verify MSG For Invalid Address",
        "LocatorTypeId": 7,
        "Locator": "//label[@id='AddressStandardize_AcgPopup:0']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:6",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124963,
        "StepNumber": 16,
        "Description": "VerifyMSGForInvalidAddr",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11776,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124964,
        "StepNumber": 17,
        "Description": "Click Override Button",
        "LocatorTypeId": 7,
        "Locator": "//*[@id='AddressStandardize_AcgPopup:override-btnInnerEl']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124965,
        "StepNumber": 18,
        "Description": "Click Address dropdown",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'LinkAddressMenu:LinkAddressMenuMenuIcon')]/img",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124966,
        "StepNumber": 19,
        "Description": "Click Edit Address",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'LinkAddressMenu:EditAddress-textEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124967,
        "StepNumber": 20,
        "Description": "Enter Census Track Number",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"LinkedAddressEditPopup:censustract-inputEl\"]",
        "ActionId": 43,
        "ParameterName": null,
        "ParameterValue": "47071920600",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124968,
        "StepNumber": 21,
        "Description": "Click Update All Address",
        "LocatorTypeId": 7,
        "Locator": "//*[@id='LinkedAddressEditPopup:UpdateAllButton-btnInnerEl']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124962,
        "StepNumber": 22,
        "Description": "Verify Standardize Address Page",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'AddressStandardize_AcgPopup:ttlBar')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124984,
        "StepNumber": 23,
        "Description": "StandardizeAddress",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_SelectStandardizeAddr",
        "CustomActionId": 11770,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124985,
        "StepNumber": 24,
        "Description": "VerifyStandardizeCityGridIsDisplayed",
        "LocatorTypeId": 7,
        "Locator": "//span[@id='AddressStandardize_AcgPopup:2']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124986,
        "StepNumber": 25,
        "Description": "StandardizeCity",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_City",
        "CustomActionId": 11774,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124969,
        "StepNumber": 26,
        "Description": "EducationLevelStateWise",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Graduate Work or Degree",
        "CustomActionId": 11752,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124987,
        "StepNumber": 27,
        "Description": "ClickOkBtn_AdditionalInterest",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12191,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 124960,
        "StepNumber": 28,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "PolicyChange_Dwelling_AdditionalInterest_NewPerson",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12178,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class AdditionalInterestTabClick extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\nfor(int i =1; i<=5; i++)\n{\n\ttry{\n\t\n\t\t\tWebElement additionalInterestTab= driver.findElement(By.xpath(\"//*[contains(@id,'DwellingAdditionalInterestIdTab-btnInnerEl')]\"));\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(additionalInterestTab));\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tjs.executeScript(\"arguments[0].click();\", additionalInterestTab);\n           \t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Navigated to Additional Interest Screen\";\n\t\t\n\tbreak;\n\t}\n\tcatch(Exception e) {\n\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\tactionResult.status = false;\n\t}\n}\n\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AdditionalInterestTabClick",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12179,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class NewAdditionalInterest_Person extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry\n{\n\n\tfor(int i =1; i<=5; i++)\n\t{\n\ttry{\n\t\t\t\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\t\tWebElement addAdditionalInterestBtn= driver.findElement(By.xpath(\"//*[contains(@id,'AddContactsButton-btnInnerEl')]\"));\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(addAdditionalInterestBtn));\n\t\t\t\t\taddAdditionalInterestBtn.click();\n\t\t\t\t\t//JavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\t\t\t//js.executeScript(\"arguments[0].click();\", addAdditionalInterestBtn);\n\t\t\t\t\n\t\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Add Additional Interest has been successfully selected\";\n\t\t\n\tbreak;\n\t}\n\tcatch(Exception e) {\n\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\tactionResult.status = false;\n\t}\n\t}\n\n\tfor(int i =1; i<=5; i++)\n\t{\n\ttry{\n\t\t\t\n\t\t\tdriver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\n\t\t\tWebElement newAdditionalInterest= driver.findElement(By.xpath(\"//*[contains(@id,'newAdditionaInterestID_ACG-textEl')]\"));\n\t\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(newAdditionalInterest));\n\t\t\t\tnewAdditionalInterest.click();\n\t\t\t\t//JavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\t\t//js.executeScript(\"arguments[0].click();\", newAdditionalInterest);\n\t\t\t\t\n\t\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"New Additional Interest has been successfully selected\";\n\t\t\n\tbreak;\n\t}\n\tcatch(Exception e) {\n\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\tactionResult.status = false;\n\t}\n\t}\n\n\tfor(int i =1; i<=5; i++)\n\t{\n\ttry{\n\t\t\t\n\t\t\t\tdriver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\n\t\t\t\tWebElement newPerson= driver.findElement(By.xpath(\"//*[contains(@id,'newAdditionaInterestID_ACG:1:ContactType-textEl')]\"));\n\t\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(newPerson));\n\t\t\t\tnewPerson.click();\n\t\t\t\t//JavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\t\t//js.executeScript(\"arguments[0].click();\", newPerson);\n\t\t\t\t\n\t\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"New Additional Interest has been successfully selected\";\n\t\t\n\tbreak;\n\t}\n\tcatch(Exception e) {\n\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\tactionResult.status = false;\n\t}\n\t}\n\t\n\tactionResult.comments = \"Additional Interest Page have been navigated\";\n\tactionResult.status = true;\n\n}\n\t\ncatch(Exception e) {\n\tactionResult.comments = e.getMessage();\n\tactionResult.status = false;\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "NewAdditionalInterest_Person",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12180,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterInterestType extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int retry=0; retry<5; retry++)\n\t  {\n\t\ttry\n\t\t{\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\tThread.sleep(400);\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//*[contains(@id,'NewAdditionalInterestPopup:ContactDetailScreen:AdditionalInterestInfoDV:Type-inputEl')]\")));\n\t\tWebElement interestType=driver.findElement(By.xpath(\"//*[contains(@id,'NewAdditionalInterestPopup:ContactDetailScreen:AdditionalInterestInfoDV:Type-inputEl')]\"));\n\t\tinterestType.click();\n\n\t\tWebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\n\t\ttypeinput.click();\n\t\tThread.sleep(2000);\n\n\t\t/*String s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tinterestType.sendKeys(s);\n\t\tinterestType.sendKeys(Keys.DELETE);\n\t\tinterestType.sendKeys(inputValue);\n\t\tThread.sleep(500);\n\t\tinterestType.sendKeys(Keys.ENTER);\n\t\tinterestType.sendKeys(Keys.TAB);*/\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";  \n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t  }\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterInterestType",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12181,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterFirstName extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i=0; i<5; i++)\n\t  {\n\t\ttry\n\t\t{\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\tThread.sleep(400);\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//*[contains(@id,'GlobalPersonNameInputSet:FirstName-inputEl')]\")));\n\t\tWebElement firstName=driver.findElement(By.xpath(\"//*[contains(@id,'GlobalPersonNameInputSet:FirstName-inputEl')]\"));\n\t\n\t\tfirstName.click();\n\t\tfirstName.sendKeys(inputValue);\n\t\tKeys.chord(Keys.TAB);\n\t\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"First Name Entered Successfully\";  \n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t  }\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterFirstName",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12182,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterLastName extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i=0; i<5; i++)\n\t  {\n\t\ttry\n\t\t{\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\tThread.sleep(400);\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//*[contains(@id,'GlobalPersonNameInputSet:LastName-inputEl')]\")));\n\t\tWebElement lastName=driver.findElement(By.xpath(\"//*[contains(@id,'GlobalPersonNameInputSet:LastName-inputEl')]\"));\n\t\n\t\tlastName.click();\n\t\tlastName.sendKeys(inputValue);\n\t\tKeys.chord(Keys.TAB);\n\t\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Last Name Entered Successfully\";  \n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t  }\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterLastName",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12183,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterGender extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i=0; i<5; i++)\n\t  {\n\t\ttry\n\t\t{\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\tThread.sleep(400);\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//*[contains(@id,'GlobalPersonNameInputSet:Gender-inputEl')]\")));\n\t\tWebElement gender=driver.findElement(By.xpath(\"//*[contains(@id,'GlobalPersonNameInputSet:Gender-inputEl')]\"));\n\t\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tgender.sendKeys(s);\n\t\tgender.sendKeys(Keys.DELETE);\n\t\tgender.sendKeys(inputValue);\n\t\tThread.sleep(500);\n\t\tgender.sendKeys(Keys.ENTER);\n\t\tgender.sendKeys(Keys.TAB);\n\t\tThread.sleep(2000);\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";  \n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t  }\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterGender",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12184,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterDateofBirthInAdditionalInterest extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\tWebElement DateOfBirthtxtField = driver.findElement(By.xpath(\"//input[contains(@id,'DateOfBirth-inputEl')]\"));\t\t\n\t\tDateOfBirthtxtField.sendKeys(Keys.chord(Keys.CONTROL,\"a\"),inputValue);\n\t\t///DateOfBirthtxtField.sendKeys(inputValue);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"The Date Of Birth is enter as :\"+inputValue;\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterDateofBirthInAdditionalInterest",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12185,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterMaritalStatus_AdditionalInterest extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\nfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\tWebElement gender=driver.findElement(By.xpath(\"//input[contains(@id,'MaritalStatus-inputEl')]\"));\n\t\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tgender.sendKeys(s);\n\t\tgender.sendKeys(Keys.DELETE);\n\t\tgender.sendKeys(inputValue);\n\t\tThread.sleep(500);\n\t\tgender.sendKeys(Keys.ENTER);\n\t\tgender.sendKeys(Keys.TAB);\n\t\tThread.sleep(2000);\n\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\"; \n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterMaritalStatus_AdditionalInterest",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12186,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class PrimaryMethodOfContact extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i=0; i<=5; i++)\n\t  {\n\t\ttry\n\t\t{\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\t\t\t\n\t\tThread.sleep(400);\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//*[contains(@id,'PolicyContactRoleDetails_AcgInputSet:PrimaryPhone-inputEl')]\")));\n\t\tWebElement gender=driver.findElement(By.xpath(\"//*[contains(@id,'PolicyContactRoleDetails_AcgInputSet:PrimaryPhone-inputEl')]\"));\n\t\n\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\tgender.sendKeys(s);\n\t\tgender.sendKeys(Keys.DELETE);\n\t\tgender.sendKeys(inputValue);\n\t\tThread.sleep(500);\n\t\tgender.sendKeys(Keys.ENTER);\n\t\tgender.sendKeys(Keys.TAB);\n\t\tThread.sleep(2000);\n\n\t\tactionResult.status = true;\n\t\tactionResult.comments = \"Executed Successfully\";  \n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t  }\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PrimaryMethodOfContact",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12187,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterHomePhone_AdditionalInterest extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\t\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tWebElement homePhoneEle;\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'HomePhone:GlobalPhoneInputSet:NationalSubscriberNumber-inputEl')]\")));\n\t\thomePhoneEle=driver.findElement(By.xpath(\"//input[contains(@id,'HomePhone:GlobalPhoneInputSet:NationalSubscriberNumber-inputEl')]\"));\n\t\twait.until(ExpectedConditions.elementToBeClickable(homePhoneEle));\n\t\thomePhoneEle.click();\n\t\t//homePhoneEle.sendKeys(inputValue);\n\t\t//Keys.chord(Keys.TAB);\n\t\tThread.sleep(1000);\n\n\t\tActions act = new Actions(driver);\n\t\tact.sendKeys(homePhoneEle,inputValue).build().perform();\n\t\thomePhoneEle.sendKeys(Keys.ENTER);\n\t\tdriver.findElement(By.xpath(\"//input[contains(@id,'MiddleInitial-inputEl')]\")).click();\n\n\t\tactionResult.status = true;\n        actionResult.comments =  \"The Home Phone entered as:\"+inputValue;\n\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterHomePhone_AdditionalInterest",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12188,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterEmail_AdditionalInterest extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\t\t\n\t\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\t\tWebElement EmailEle;\n\t\t\t\tEmailEle = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//input[contains(@id,'EmailAddress1-inputEl')]\")));\n\t\t\t\tEmailEle.click();\n\t\t\t\tEmailEle.sendKeys(inputValue);\n\t\t\t\tKeys.chord(Keys.TAB);\n\t\t\t\tactionResult.status = true;\n\t\t\t\tactionResult.comments =  \"Email entered as:\"+inputValue;\n \n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterEmail_AdditionalInterest",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12189,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n//</Mandatory_libraries>\r\n//Additional libraries might be declared here\r\n\r\n//<This_lines_must_not_be_modified>\r\npublic class SelectAddressSameAsInsured extends ActionResult {\r\n    /// <summary>\r\n    /// A method to perform a custom test step\r\n    /// </summary>\r\n    /// <param>\r\n    /// The method receive parameters:\r\n    /// * driver which is an instance of WebDriver or a mobile driver such as\r\n    /// AndroidDriver\r\n    ///\r\n    /// * and a second optional parameter which can be a String or a String[]\r\n    /// array.\r\n    /// One Parameter : public ActionResult Execute(WebDriver driver)\r\n    /// Two Parameters: public ActionResult Execute(WebDriver driver, String\r\n    /// inputValue)\r\n    /// or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n    ///\r\n    /// * also it is possible to pass objects to a Custom Action adding a third\r\n    /// argument of type WebElement with name: cAElement\r\n    /// using web element: public ActionResult Execute(WebDriver driver, String\r\n    /// inputValue, WebElement caElement)\r\n    /// </param>\r\n    /// <returns>\r\n    /// The method returns an ActionResult object which is expected to contain\r\n    /// the step\r\n    /// execution information, such as the status (true or false equivalent to\r\n    /// pass or fail), details\r\n    /// that may explain the fail cause or some extra information and the path\r\n    /// to find the file resulting\r\n    /// of a screenshot.\r\n    /// </returns>\r\n    /// Also it is possible to save a String value to Datasheet.\r\n    /// e.g. 1:\r\n    /// actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n    /// actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n    /// e.g. 2:\r\n    /// actionResult.columnName = \"DatasheetColumnName\";\r\n    /// actionResult.propertyValue = \"Value to be saved\";\r\n    /// Or save several values to Datasheet.\r\n    /// actionResult.ColumnNames.add('DatasheetColumnName1');\r\n    /// actionResult.PropertyValues.add(Value to be saved1);\r\n    /// actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n    /// actionResult.PropertyValues.add(Value to be savedN);\r\n    // </This_lines_must_not_be_modified>\r\n    // <Mandatory_lines>\r\n    public ActionResult Execute(WebDriver driver, String inputValue) throws InterruptedException //replace WebDriver by AndroidDriver for mobile actions\r\n\r\n    {\r\n        ActionResult actionResult = new ActionResult();\r\n        actionResult.status = false;\r\n        actionResult.comments = \"\";\r\n        // </Mandatory_lines>\r\n        /////////////// WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n        try {\r\n            Thread.sleep(2000);\r\n            WebDriverWait wait = new WebDriverWait(driver, 20);\r\n            Actions actions = new Actions(driver);\r\n            WebElement sameAsAddressDropDown = driver.findElement(By.xpath(\r\n                    \"//*[contains(@id,'PolicyContactDetailsDV:LinkedAddressInputSet:LinkAddressMenu:LinkAddressMenuMenuIcon')]/img\"));\r\n            wait.until(ExpectedConditions.elementToBeClickable(sameAsAddressDropDown));\r\n            sameAsAddressDropDown.click();\r\n\r\n            WebElement insuredAddress = driver.findElement(\r\n                    By.xpath(\"//*[contains(@id,'LinkedAddressInputSet:LinkAddressMenu:0:contactDetail-textEl')]\"));\r\n            wait.until(ExpectedConditions.elementToBeClickable(insuredAddress));\r\n            actions.moveToElement(insuredAddress).build().perform();\r\n\r\n            WebElement linkAddress = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(\r\n                    By.xpath(\"//*[contains(@id,'LinkAddressMenu:0:contactDetail:PrimaryAddress-textEl')]\"))));\r\n            driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\r\n            wait.until(ExpectedConditions.elementToBeClickable(linkAddress));\r\n            actions.moveToElement(linkAddress).click().build().perform();\r\n            Thread.sleep(2000);\r\n\r\n            /*            for (int i = 1; i <= 5; i++) {\r\n                try {\r\n\r\n                    WebDriverWait wait = new WebDriverWait(driver, 20);\r\n                    WebElement sameAsAddressDropDown = driver.findElement(By.xpath(\r\n                            \"//*[contains(@id,'PolicyContactDetailsDV:LinkedAddressInputSet:LinkAddressMenu:LinkAddressMenuMenuIcon')]/img\"));\r\n                    wait.until(ExpectedConditions.elementToBeClickable(sameAsAddressDropDown));\r\n                    sameAsAddressDropDown.click();\r\n                    Thread.sleep(2000);\r\n\r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"Add Additional Interest has been successfully selected\";\r\n\r\n                    break;\r\n                } catch (Exception e) {\r\n                    // actionResult.comments =\"Max No. of Attepts reached : \" +i\r\n                    // + \" Expection Type : \" + e.getMessage();\r\n                    // actionResult.status = false;\r\n                }\r\n            }\r\n\r\n            for (int i = 1; i <= 5; i++) {\r\n                try {\r\n                    WebDriverWait wait = new WebDriverWait(driver, 20);\r\n                    WebElement insuredAddress = driver.findElement(By.xpath(\r\n                            \"//*[contains(@id,'LinkedAddressInputSet:LinkAddressMenu:0:contactDetail-textEl')]\"));\r\n                    actions.moveToElement(insuredAddress).build().perform();\r\n                    Thread.sleep(2000);\r\n\r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"New Additional Interest has been successfully selected\";\r\n\r\n                    break;\r\n                } catch (Exception e) {\r\n                    // actionResult.comments =\"Max No. of Attepts reached : \" +i\r\n                    // + \" Expection Type : \" + e.getMessage();\r\n                    // actionResult.status = false;\r\n                }\r\n            }\r\n\r\n            for (int i = 1; i <= 5; i++) {\r\n                try {\r\n                    WebDriverWait wait = new WebDriverWait(driver, 20);\r\n                    WebElement linkAddress = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(\r\n                            By.xpath(\"//*[contains(@id,'LinkAddressMenu:0:contactDetail:PrimaryAddress-textEl')]\"))));\r\n                    driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\r\n                    actions.moveToElement(linkAddress).click().build().perform();\r\n                    Thread.sleep(2000);\r\n\r\n                    actionResult.status = true;\r\n                    actionResult.comments = \"New Additional Interest has been successfully selected\";\r\n\r\n                    break;\r\n                } catch (Exception e) {\r\n                    actionResult.comments = \"Max No. of Attepts reached : \" + i + \" Expection Type : \" + e.getMessage();\r\n                    actionResult.status = false;\r\n                }\r\n                       } */ \r\n\r\n            actionResult.comments = \"Address has been selected as same as insured\";\r\n            actionResult.status = true;\r\n\r\n        }\r\n\r\n        catch (Exception e) {\r\n            e.printStackTrace();\r\n            actionResult.comments = e.getMessage();\r\n            actionResult.status = false;\r\n        }\r\n\r\n        /////////////// WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n        // </Mandatory_lines>\r\n        // Return results in ActionResult object\r\n        return actionResult;\r\n    }\r\n}\r\n// </Mandatory_lines>\r\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectAddressSameAsInsured",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12190,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\nimport java.util.*;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOnStandardizeBtn_AdditionalInterest extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\t\t\n\t\tdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\n\t\tWait<WebDriver> fluentWaiit = new FluentWait<WebDriver>(driver).withTimeout(3000, TimeUnit.MILLISECONDS).pollingEvery(100, TimeUnit.MILLISECONDS).ignoring(Exception.class);\n\t\tWebElement standardizeBtnEle= fluentWaiit.until(new Function<WebDriver, WebElement>() {\n\t\t\tpublic WebElement apply(WebDriver driver) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\treturn driver.findElement(By.xpath(\"//*[contains(@id,'PolicyContactDetailsDV:standardize')]\"));\n\t\t}\t\t\t\n\t\t});\n\n\t\tjs.executeScript(\"arguments[0].click()\",standardizeBtnEle);\n\t\tactionResult.status = true;\n       \tactionResult.comments =  \"Clicked on 'Standardize' button\";\n \n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOnStandardizeBtn_AdditionalInterest",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11769,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyStandardizeAddrPage extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    try{\r\n        driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);\r\n        Thread.sleep(2000);\r\n        WebDriverWait wait = new WebDriverWait(driver,80);\r\n        //wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'AddressStandardize_AcgPopup:ttlBar')]\"))));\r\n        wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'AddressStandardize_AcgPopup:ttlBar')]\"))));\r\n\r\n        //WebElement pageTitleEle = driver.findElement(By.xpath(\"//span[contains(@id,'AddressStandardize_AcgPopup:ttlBar')]\"));\r\n        //String actPageTitle = pageTitleEle.getText();\r\n        String actPageTitle = driver.findElement(By.xpath(\"//span[contains(@id,'AddressStandardize_AcgPopup:ttlBar')]\")).getText();\r\n\r\n\r\n        if(actPageTitle.equals(\"Select a Standardized Address\")){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Naviagted to 'Standardized Address' screen successfully\";\r\n        }\r\n    }\r\n    catch(Exception e){\r\n        String exceptionMsg = e.getMessage();\r\n        actionResult.status = false;\r\n            actionResult.comments =  \"'Standardized Address' screen is not displayed\";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyStandardizeAddrPage",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 11770,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class StandardizeAddress extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++)\n{\ntry\n{\nWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(text(),'\"+inputValue+\"')]/parent::td/preceding-sibling::td/div/a\")));\n\t\tWebElement selectstandardizAddreBtnEle;\n\t\t//WebElement SelectStandardizeCityBtnEle;\n\t\t//WebElement overrideBtnEle;\n\t\tselectstandardizAddreBtnEle=driver.findElement(By.xpath(\"//div[contains(text(),'\"+inputValue+\"')]/parent::td/preceding-sibling::td/div/a\"));\n\t\t//SelectStandardizeCityBtnEle=driver.findElement(By.xpath(\"(//div[contains(text(),'\"+inputValue+\"')]/parent::td/preceding-sibling::td/div/a)[2]\"));\n\t\t//overrideBtnEle=driver.findElement(By.xpath(\"//a[contains(@id,'AcgPopup:override')]\"));\n\t\twait.until(ExpectedConditions.elementToBeClickable(selectstandardizAddreBtnEle));\n\t\t//js.executeScript(\"arguments[0].click()\",selectstandardizAddreBtnEle);\n\t\tselectstandardizAddreBtnEle.click();\n\t\t//if(SelectStandardizeCityBtnEle.isDisplayed()){\n\t\t\t//js.executeScript(\"arguments[0].click()\",SelectStandardizeCityBtnEle);\n\t\t//} \n\t\t//else{\n\n\t\t\t//js.executeScript(\"arguments[0].click()\",overrideBtnEle);\n\t\t//}\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"The Address has been Standardized successfully\";\n\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}}\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "StandardizeAddress",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12191,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ClickOkBtn_AdditionalInterest extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\t\tfor(int retry=0; retry<=5; retry++)\n\t  {\n\t\ttry\n\t\t{\n\t\tWebElement okBtnEle;\n   \t\t\n\t\tdriver.manage().timeouts().implicitlyWait(50, TimeUnit.SECONDS);\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tThread.sleep(2000);\n\t\tokBtnEle = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[contains(@id,'NewAdditionalInterestPopup:ContactDetailScreen:Update-btnInnerEl')]\")));\n\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", okBtnEle);\n\t\tjs.executeScript(\"arguments[0].click();\",okBtnEle);\n\t\t\n\t\tactionResult.status = true;\n       \tactionResult.comments =  \"Clicked On OK button\";\n\t\tbreak;\t\n\t\t\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t  }\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ClickOkBtn_AdditionalInterest",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9645,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 125032,
        "StepNumber": 1,
        "Description": "VerifyPolicyInfoScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11602,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125033,
        "StepNumber": 2,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125005,
        "StepNumber": 3,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125019,
        "StepNumber": 4,
        "Description": "ClickSaveDraft",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id, 'Draft-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125034,
        "StepNumber": 5,
        "Description": "VerifyPriorInsuranceScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12112,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125035,
        "StepNumber": 6,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125006,
        "StepNumber": 7,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125020,
        "StepNumber": 8,
        "Description": "VerifyDwellingScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12135,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125016,
        "StepNumber": 9,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125017,
        "StepNumber": 10,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125015,
        "StepNumber": 11,
        "Description": "NumberOfFamilies",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "5+",
        "CustomActionId": 12148,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125018,
        "StepNumber": 12,
        "Description": "Numberoffamily",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12855,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125010,
        "StepNumber": 13,
        "Description": "VerifyDwellingAddress_AfterChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12797,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125021,
        "StepNumber": 14,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125007,
        "StepNumber": 15,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125022,
        "StepNumber": 16,
        "Description": "verifyDwellingConstructionScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12203,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125023,
        "StepNumber": 17,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125038,
        "StepNumber": 18,
        "Description": "VerifyReportsScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11848,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125024,
        "StepNumber": 19,
        "Description": "VarifyPageText",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12443,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125025,
        "StepNumber": 20,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125011,
        "StepNumber": 21,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125026,
        "StepNumber": 22,
        "Description": "VerifyCoveragesScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12239,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125027,
        "StepNumber": 23,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125014,
        "StepNumber": 24,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125008,
        "StepNumber": 25,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125028,
        "StepNumber": 26,
        "Description": "VerifyScheduledPersonalPropertyScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12339,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125029,
        "StepNumber": 27,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125009,
        "StepNumber": 28,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125030,
        "StepNumber": 29,
        "Description": "VerifyRiskAnalysisScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 11982,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125031,
        "StepNumber": 30,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125036,
        "StepNumber": 31,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125037,
        "StepNumber": 32,
        "Description": "GetQuoteNumber_PCH",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12576,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125012,
        "StepNumber": 33,
        "Description": "ClickONQuoteBtn",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'QuoteOrReview-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125013,
        "StepNumber": 34,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "PolicyChange_NextActions",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12855,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class Numberoffamily extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int retry=0; retry<5; retry++)\r\n      {\r\n        try\r\n        {\r\n        WebDriverWait wait = new WebDriverWait(driver,30);          \r\n        Thread.sleep(400);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//input[contains(@id,'NumberofFamilies-inputEl')]\")));\r\n        WebElement ZoneType = driver.findElement(By.xpath(\"//input[contains(@id,'NumberofFamilies-inputEl')]\"));\r\n        ZoneType.click();\r\n\r\n        WebElement typeinput=driver.findElement(By.xpath(\"//li[@role='option' and text()='\"+inputValue+\"']\"));\r\n        typeinput.click();\r\n        Thread.sleep(2000);\r\n\r\n        /*String s=Keys.chord(Keys.CONTROL,\"a\");\r\n        interestType.sendKeys(s);\r\n        interestType.sendKeys(Keys.DELETE);\r\n        interestType.sendKeys(inputValue);\r\n        Thread.sleep(500);\r\n        interestType.sendKeys(Keys.ENTER);\r\n        interestType.sendKeys(Keys.TAB);*/\r\n\r\n        actionResult.status = true;\r\n        actionResult.comments = \"Executed Successfully\";  \r\n        \r\n        break;\r\n        }\r\n        catch(Exception e) {\r\n        actionResult.comments =\"Max No. of Attepts reached : \" + retry + \" Expection Type : \" + e.getMessage();\r\n        actionResult.status = false;\r\n        }\r\n      }\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "Numberoffamily",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12797,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyDwellingAddress_AfterChange extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \ntry\n{\nString address =  driver.findElement(By.xpath(\"//input[contains(@id,'HODwellingLocationInput-inputEl')]\")).getAttribute(\"value\");\n\nSystem.out.println(address);\n\n//actionResult.SaveParameterValue(\"DT_DwellingCurrentAddress\", address);\n\nString PreviousAdd = actionResult.getDTParameter(\"DT_DwellingCurrentAddress\");\n\nif(address.equals(PreviousAdd)){\n\nactionResult.status = true;\n           actionResult.comments =  \"Current Dwelling Address After Change is = \"+address+\" That is Same as Previous address\"+PreviousAdd;\n}\nelse{\nactionResult.status = false;\n           actionResult.comments =  \"Current Dwelling Address After Change is = \"+address+\" That is not Same as Previous address\"+PreviousAdd;\n\n}\n\n}\n\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =e.getMessage();\n\n\t}\n\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyDwellingAddress_AfterChange",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12576,
    "Description": "",
    "Code": " ////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class GetQuoteNumber_PCH extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n        \tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tWebElement quoteNumEle;\n              wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[contains(@id,'ComparisonDiffTreeTab-btnInnerEl')]\"))));\n\t\tquoteNumEle=driver.findElement(By.xpath(\"//span[contains(@id,'ComparisonDiffTreeTab-btnInnerEl')]\"));\n\t\t\n\t\tString quoteNumberValue = quoteNumEle.getText();\n\t\tString[] quoteNumEleText = quoteNumberValue.split(\" \");\n\t\tString quoteNumber = quoteNumEleText[6].toString();\n\t\tactionResult.SaveParameterValue(\"DT_QuoteNumberPCH\", quoteNumber);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Quote  Number : \"+quoteNumber+\" has been created successfully\";\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetQuoteNumber_PCH",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9688,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 126173,
        "StepNumber": 1,
        "Description": "ScrollToAddAdditionalInsured",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12946,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126174,
        "StepNumber": 2,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126168,
        "StepNumber": 3,
        "Description": "ClckAdditionalInsuredCheckBox",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(text(),'Additional Insured Premises')]/ancestor::fieldset/descendant::input[contains(@id,'checkbox')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126169,
        "StepNumber": 4,
        "Description": "wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126175,
        "StepNumber": 5,
        "Description": "ClickIncludePhysicalDamgeAsYes",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(text(),'Additional Insured Premises')]//following::input[@role='radio'][1]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126176,
        "StepNumber": 6,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126177,
        "StepNumber": 7,
        "Description": "ClickAddBtn",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(text(),'Additional Insured Premises')]/ancestor::fieldset/descendant::a[contains(@id,'Add')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126178,
        "StepNumber": 8,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126184,
        "StepNumber": 9,
        "Description": "VerifyElementIsNotPresent",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Description",
        "CustomActionId": 12965,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126185,
        "StepNumber": 10,
        "Description": "VerifyElementIsNotPresent",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Property Damage Limit",
        "CustomActionId": 12965,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126186,
        "StepNumber": 11,
        "Description": "VerifyElementIsNotPresent",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Number of Families",
        "CustomActionId": 12965,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126179,
        "StepNumber": 12,
        "Description": "Click PropertyCheckBox",
        "LocatorTypeId": 7,
        "Locator": "//tbody[contains(@id,'ScheduleLV-tbody')]/descendant::table[\"+tableNo+\"]/descendant::td[4]/div/img",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126180,
        "StepNumber": 13,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126187,
        "StepNumber": 14,
        "Description": "VerifyElementIsPresent",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Description",
        "CustomActionId": 12964,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126188,
        "StepNumber": 15,
        "Description": "VerifyElementIsPresent",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Property Damage Limit",
        "CustomActionId": 12964,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126189,
        "StepNumber": 16,
        "Description": "VerifyElementIsPresent",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Number of Families",
        "CustomActionId": 12964,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126190,
        "StepNumber": 17,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126181,
        "StepNumber": 18,
        "Description": "SelectTotalCheckBox",
        "LocatorTypeId": 7,
        "Locator": "//tbody[contains(@id,'ScheduleLV-tbody')]//div/span/span/span/div",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126182,
        "StepNumber": 19,
        "Description": "RemoveBtn",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(text(),'Additional Insured Premises')]/ancestor::fieldset/descendant::a[contains(@id,'Remove')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126183,
        "StepNumber": 20,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126154,
        "StepNumber": 21,
        "Description": "AddAdditionalInsuredPremisesInCoverages",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "1 AND Yes AND Rome AND Loss AND 200 AND 5",
        "CustomActionId": 12943,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126166,
        "StepNumber": 22,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126167,
        "StepNumber": 23,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126155,
        "StepNumber": 24,
        "Description": "VerifyBR_746IsTriggered",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12944,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126171,
        "StepNumber": 25,
        "Description": "VerifyBR_746IsTriggeredForFLP",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12948,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126170,
        "StepNumber": 26,
        "Description": "ScrollToAddAdditionalInsured",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12946,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126163,
        "StepNumber": 27,
        "Description": "SelectTotalCheckBox",
        "LocatorTypeId": 7,
        "Locator": "//tbody[contains(@id,'ScheduleLV-tbody')]//div/span/span/span/div",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126164,
        "StepNumber": 28,
        "Description": "RemoveBtn",
        "LocatorTypeId": 7,
        "Locator": "//div[contains(text(),'Additional Insured Premises')]/ancestor::fieldset/descendant::a[contains(@id,'Remove')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126165,
        "StepNumber": 29,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126156,
        "StepNumber": 30,
        "Description": "AddAdditionalInsuredPremisesInCoverages",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "1 AND Yes AND City AND Loss AND 200 AND 4",
        "CustomActionId": 12943,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126157,
        "StepNumber": 31,
        "Description": "AddAdditionalInsuredPremisesInCoverages",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "2 AND Yes AND WaterTwon AND Loss AND 300 AND 3",
        "CustomActionId": 12943,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126158,
        "StepNumber": 32,
        "Description": "AddAdditionalInsuredPremisesInCoverages",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "3 AND Yes AND Spring AND Loss AND 3000 AND 4",
        "CustomActionId": 12943,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126159,
        "StepNumber": 33,
        "Description": "AddAdditionalInsuredPremisesInCoverages",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "4 AND Yes AND Winter AND Loss AND 400 AND 1",
        "CustomActionId": 12943,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126160,
        "StepNumber": 34,
        "Description": "AddAdditionalInsuredPremisesInCoverages",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "5 AND Yes AND WaterBoard AND Loss AND 2500 AND 3",
        "CustomActionId": 12943,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126161,
        "StepNumber": 35,
        "Description": "ClickOnNextBtn",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12444,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126153,
        "StepNumber": 36,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "7",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126162,
        "StepNumber": 37,
        "Description": "VerifyBR_746IsNotTriggered",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12945,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 126172,
        "StepNumber": 38,
        "Description": "VerifyBR_746IsNotTriggeredForFLP",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12947,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "AddAdditionalnusredPremisesAndVerifyBR_746",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12946,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class ScrollToAddAdditionalInsured extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n       try \r\n        {           \r\n         WebDriverWait wait    = new WebDriverWait(driver,30);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        \r\n        WebElement scroll = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//span[text()='Additional Home Coverages']\"))));\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", scroll);\r\n        js.executeScript(\"arguments[0].scrollIntoView();\", scroll);\r\n        \r\n        actionResult.status   = true;\r\n        actionResult.comments = \"Scrolled to element\"; \r\n        }\r\n        catch(Exception e) {\r\n            actionResult.status   = false;\r\n            actionResult.comments = \"Element is not found\";\r\n        }\r\n    \r\n        \r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ScrollToAddAdditionalInsured",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12965,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyElementIsNotPresent extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n       try \r\n        {           \r\n         WebDriverWait wait    = new WebDriverWait(driver,30);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        \r\n        WebElement ele = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[text()='\"+inputValue+\"']\"))));\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", ele);\r\n        //js.executeScript(\"arguments[0].scrollIntoView();\", ele);\r\n        \r\n        actionResult.status   = false;\r\n        actionResult.comments = inputValue+\" field is found \"; \r\n        }\r\n        catch(Exception e) {\r\n            actionResult.status   = true;\r\n            actionResult.comments = inputValue+\" field is not found \";\r\n        }\r\n    \r\n        \r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyElementIsNotPresent",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12964,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyElementIsPresent extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n       try \r\n        {           \r\n         WebDriverWait wait    = new WebDriverWait(driver,30);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n        \r\n        WebElement ele = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[text()='\"+inputValue+\"']\"))));\r\n        js.executeScript(\"arguments[0].style.border='2px solid red'\", ele);\r\n        //js.executeScript(\"arguments[0].scrollIntoView();\", ele);\r\n        \r\n        actionResult.status   = true;\r\n        actionResult.comments = inputValue+\" field is found \"; \r\n        }\r\n        catch(Exception e) {\r\n            actionResult.status   = false;\r\n            actionResult.comments = inputValue+\" field is not found \";\r\n        }\r\n    \r\n        \r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyElementIsPresent",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12943,
    "Description": "1 AND Yes AND Address AND Description AND Porperty Damage Limit AND Number Of Families",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException; \r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType; \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport org.openqa.selenium.support.ui.FluentWait;\r\nimport org.openqa.selenium.support.ui.Wait;\r\nimport com.google.common.base.Function;\r\nimport groovy.time.Duration;\r\n\r\n\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class AddAdditionalInsuredPremisesInCoverages extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n\r\n    try{\r\n               \r\n               driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\r\n               WebDriverWait wait = new WebDriverWait(driver,20);\r\n               JavascriptExecutor js = (JavascriptExecutor)driver;\r\n               Actions act = new Actions(driver);\r\n               String selectText=Keys.chord(Keys.CONTROL,\"a\");          \r\n               \r\n                                   \r\n                       \r\n                                                   \r\n                           String[] sppParams = inputValue.split(\" AND \");\r\n                           String tableNumber     = sppParams[0].toString().trim();\r\n                           int tableNo            = Integer.parseInt(tableNumber);\r\n                           String yesorNoPhysicalDamageValue = sppParams[1].toString().trim();\r\n                           String addressValue = sppParams[2].toString().trim();\r\n                           String descriptionValue = sppParams[3].toString().trim();\r\n                           String propertyDamageValue = sppParams[4].toString().trim();\r\n                           String noOfFamiliesValue = sppParams[5].toString().trim();\r\n\r\n                           \r\n                          \r\n\r\n                           //Selecting Yes or No for Physical Damage\r\n                           WebElement physicalDamageYes = driver.findElement(By.xpath(\"//div[contains(text(),'Additional Insured Premises')]//following::input[@role='radio'][1]\"));\r\n                           WebElement physicalDamageNo = driver.findElement(By.xpath(\"//div[contains(text(),'Additional Insured Premises')]//following::input[@role='radio'][2]\"));\r\n                           \r\n                           if(yesorNoPhysicalDamageValue.equalsIgnoreCase(\"Yes\")){\r\n                                   act.moveToElement(physicalDamageYes).click().build().perform();\r\n                                   actionResult.status = true;\r\n                                   actionResult.comments =  \"Physical Damage - Answered as 'Yes'\";\r\n                           }else if(yesorNoPhysicalDamageValue.equalsIgnoreCase(\"No\")){\r\n                                   act.moveToElement(physicalDamageNo).click().build().perform();\r\n                                   actionResult.status = true;\r\n                                   actionResult.comments =  \"Physical Damage - Answered as 'No'\";\r\n                           }\r\n                           \r\n                           //Clicking on Add Button\r\n                           wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//div[contains(text(),'Additional Insured Premises')]/ancestor::fieldset/descendant::a[contains(@id,'Add')]\"))));\r\n                           WebElement addButton = driver.findElement(By.xpath(\"//div[contains(text(),'Additional Insured Premises')]/ancestor::fieldset/descendant::a[contains(@id,'Add')]\"));\r\n                           js.executeScript(\"arguments[0].style.border='2px solid red'\", addButton);\r\n                           js.executeScript(\"arguments[0].click();\",addButton);\r\n                           Thread.sleep(1000);\r\n                           try \r\n                           {         \r\n                                                     \r\n                           \r\n                           WebElement numberofFamilies = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"(//tbody[contains(@id,'ScheduleLV-tbody')]//descendant::div/div/div/span)[7]\"))));\r\n                           js.executeScript(\"arguments[0].scrollIntoView();\", numberofFamilies);\r\n                           js.executeScript(\"arguments[0].style.border='2px solid red'\", numberofFamilies);\r\n                           \r\n                           actionResult.status   = true;\r\n                           actionResult.comments = \" Number of Families tab is found\"; \r\n                           }\r\n                           catch(Exception e) {\r\n                               actionResult.status   = false;\r\n                               actionResult.comments = \" Number of Families tab is not found\";\r\n                           } \r\n                           \r\n                           //Entering Address\r\n                           WebElement address = driver.findElement(By.xpath(\"//tbody[contains(@id,'ScheduleLV-tbody')]/descendant::table[\"+tableNo+\"]/descendant::td[3]/div\"));\r\n                           act.moveToElement(address).click().sendKeys(addressValue).build().perform();\r\n                           act.moveToElement(address).sendKeys(Keys.TAB).build().perform();\r\n                           Thread.sleep(1000);\r\n                           \r\n                           //Checking the Checkbox\r\n                           WebElement checkbox = driver.findElement(By.xpath(\"//tbody[contains(@id,'ScheduleLV-tbody')]/descendant::table[\"+tableNo+\"]/descendant::td[4]/div/img\"));\r\n                           js.executeScript(\"arguments[0].style.border='2px solid red'\", checkbox);\r\n                           js.executeScript(\"arguments[0].click();\",checkbox);\r\n                           act.moveToElement(checkbox).sendKeys(Keys.TAB).build().perform();\r\n                           Thread.sleep(1000);\r\n\r\n                           //Entering Description\r\n                           WebElement description = driver.findElement(By.xpath(\"//tbody[contains(@id,'ScheduleLV-tbody')]/descendant::table[\"+tableNo+\"]/descendant::td[5]/div\"));\r\n                           act.moveToElement(description).click().sendKeys(descriptionValue).build().perform();\r\n                           Thread.sleep(1000);\r\n                           act.moveToElement(description).sendKeys(Keys.TAB).build().perform();\r\n                           Thread.sleep(1000);\r\n\r\n                           //Entering Property Damage Limit\r\n                           WebElement propertyDamage = driver.findElement(By.xpath(\"//tbody[contains(@id,'ScheduleLV-tbody')]/descendant::table[\"+tableNo+\"]/descendant::td[6]/div\"));\r\n                           act.moveToElement(propertyDamage).click().sendKeys(propertyDamageValue).build().perform();\r\n                           Thread.sleep(1000);\r\n                           act.moveToElement(propertyDamage).sendKeys(Keys.TAB).build().perform();\r\n                           Thread.sleep(1000);\r\n                           \r\n                           //Entering Number of Families\r\n                           WebElement noOfFamilies = driver.findElement(By.xpath(\"//tbody[contains(@id,'ScheduleLV-tbody')]/descendant::table[\"+tableNo+\"]/descendant::td[7]/div\"));\r\n                           act.moveToElement(noOfFamilies).click().sendKeys(noOfFamiliesValue).build().perform();\r\n                           Thread.sleep(1000);\r\n                           act.moveToElement(noOfFamilies).sendKeys(Keys.TAB).build().perform();\r\n                           Thread.sleep(1000);                       \r\n                                                                  \r\n                       \r\n                   \r\n\r\n               \r\n               actionResult.status = true;\r\n               actionResult.comments =  \"All the fields are filled successfully\";\r\n           \r\n\r\n       }\r\n       catch(Exception e)\r\n       {\r\n           actionResult.status = false;\r\n           actionResult.comments =  e.getMessage();\r\n\r\n       }\r\n\r\n        ///////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n   \r\n// js.executeScript(\"arguments[0].value='\"+inputValue+\"'\",homePhoneEle);\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AddAdditionalInsuredPremisesInCoverages",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12944,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyBR_746IsTriggered extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n try \r\n           {           \r\n           WebDriverWait wait = new WebDriverWait(driver,30);\r\n           JavascriptExecutor js = (JavascriptExecutor)driver;\r\n           \r\n           WebElement br746 = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[text()='\"+inputValue+\"']\"))));\r\n           js.executeScript(\"arguments[0].scrollIntoView();\", br746);\r\n           js.executeScript(\"arguments[0].style.border='2px solid red'\", br746);\r\n           \r\n           actionResult.status   = true;\r\n           actionResult.comments = inputValue+\" BR-746 is found\"; \r\n           }\r\n           catch(Exception e) {\r\n               actionResult.status   = false;\r\n               actionResult.comments = inputValue+\" BR-746 is not found\";\r\n           }  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyBR_746IsTriggered",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12948,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyBR_746IsTriggeredForFLP extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        \r\n        try \r\n           {           \r\n           WebDriverWait wait = new WebDriverWait(driver,30);\r\n           JavascriptExecutor js = (JavascriptExecutor)driver;\r\n           \r\n           WebElement br746 = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[text()='\"+inputValue+\"']\"))));\r\n           js.executeScript(\"arguments[0].scrollIntoView();\", br746);\r\n           js.executeScript(\"arguments[0].style.border='2px solid red'\", br746);\r\n           \r\n           actionResult.status   = true;\r\n           actionResult.comments = inputValue+\" BR-746.1 is found for FLP\"; \r\n           }\r\n           catch(Exception e) {\r\n               actionResult.status   = false;\r\n               actionResult.comments = inputValue+\" BR-746.1 is not found for FLP\";\r\n           }  \r\n    \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyBR_746IsTriggeredForFLP",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12945,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyBR_746IsNotTriggered extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        \r\n        try \r\n           {           \r\n           WebDriverWait wait = new WebDriverWait(driver,30);\r\n           JavascriptExecutor js = (JavascriptExecutor)driver;\r\n           \r\n           WebElement br746 = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[text()='\"+inputValue+\"']\"))));\r\n           js.executeScript(\"arguments[0].scrollIntoView();\", br746);\r\n           js.executeScript(\"arguments[0].style.border='2px solid red'\", br746);\r\n           \r\n           actionResult.status   = false;\r\n           actionResult.comments = inputValue+\" BR-746 is found\"; \r\n           }\r\n           catch(Exception e) {\r\n               actionResult.status   = true;\r\n               actionResult.comments = inputValue+\" BR-746 is not found\";\r\n           }  \r\n    \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyBR_746IsNotTriggered",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12947,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class VerifyBR_746IsNotTriggeredForFLP extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        \r\n        try \r\n           {           \r\n           WebDriverWait wait = new WebDriverWait(driver,30);\r\n           JavascriptExecutor js = (JavascriptExecutor)driver;\r\n           \r\n           WebElement br746 = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[text()='\"+inputValue+\"']\"))));\r\n           js.executeScript(\"arguments[0].scrollIntoView();\", br746);\r\n           js.executeScript(\"arguments[0].style.border='2px solid red'\", br746);\r\n           \r\n           actionResult.status   = false;\r\n           actionResult.comments = inputValue+\" BR-746.1 is found for FLP\"; \r\n           }\r\n           catch(Exception e) {\r\n               actionResult.status   = true;\r\n               actionResult.comments = inputValue+\" BR-746.1 is not found for FLP\";\r\n           }  \r\n    \r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyBR_746IsNotTriggeredForFLP",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9644,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 124999,
        "StepNumber": 1,
        "Description": "verifyDwellingConstructionScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12203,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125000,
        "StepNumber": 2,
        "Description": "PrimaryHeating",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Gas",
        "CustomActionId": 12205,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125001,
        "StepNumber": 3,
        "Description": "SecondaryHeating",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Electric",
        "CustomActionId": 12206,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": true,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125003,
        "StepNumber": 4,
        "Description": "DwellingConstructionHO3_PCH",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12380,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125002,
        "StepNumber": 5,
        "Description": "ReplacementCostEstimator_HO3_PCH",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12381,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 125004,
        "StepNumber": 6,
        "Description": "ClickNextBtnPolicyChange",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12379,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "PolicyChange_DwellingConstruction",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12380,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class DwellingConstructionHO3_PCH extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n       \n\t\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tActions act = new Actions(driver);\n\t\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\tString[] dwellingParams = inputValue.split(\" AND \");\n\t\t\tString stateName = dwellingParams[0].toString();\n\t\t\tString DCFortFieldHomeYesorNo = dwellingParams[1].toString();\n\t\t\tString DCPrimaryHeating = dwellingParams[2].toString();\n\t\t\tString DCSecHeating = dwellingParams[3].toString();\n\t\t\tString DCHailResRoofYesorNo = dwellingParams[4].toString();\n\t\t\tString DCRoofingUpgrdYear = dwellingParams[5].toString();\n\t\t\tString DCHeatingUpgrdYear = dwellingParams[6].toString();\n\t\t\t\t\t\n\t\t\t\n\t\t\t////////     Verifying the 'Dwelling Construction' Screen      //////////////////////\n\t\t\t\n\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'HODwellingConstructionHOEScreen:ttlBar')]\"))));\n\t\t\tWebElement DwellingConPageTtlEle = driver.findElement(By.xpath(\"//span[contains(@id,'HODwellingConstructionHOEScreen:ttlBar')]\"));\n\t\t\t\n\t\t\tString actDwellingConPageTtl = DwellingConPageTtlEle.getText();\n\t\t\tif(actDwellingConPageTtl.equals(\"Dwelling Construction\")){\n\t\t\t\tactionResult.status = true;\n\t\t\t\tactionResult.comments =  \" 'Dwelling Construction' screen has been displayed\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\n\t\t\t/////    Fortified Home (Yes/No)     /////////\n\t\t\t\n\t\t\t\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'HomeFortified_true-inputEl')]\"))));\n\t\t\t\t\tWebElement DCFFHomeYesEle = driver.findElement(By.xpath(\"//input[contains(@id,'HomeFortified_true-inputEl')]\"));\n\t\t\t\t\tWebElement DCFFHomeNoEle = driver.findElement(By.xpath(\"//input[contains(@id,'HomeFortified_false-inputEl')]\"));\n\t\t\t\t\tif(DCFortFieldHomeYesorNo.equalsIgnoreCase(\"Yes\")){\n\t\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DCFFHomeYesEle);\n\t\t\t\t\t\tjs.executeScript(\"arguments[0].click();\",DCFFHomeYesEle);\n\t\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DCFFHomeNoEle);\n\t\t\t\t\t\tjs.executeScript(\"arguments[0].click();\",DCFFHomeNoEle);\n\t\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t\t}\n\t\t\t\n\t\t\t////////       Primary Heating        ///////////////////////////////\n\t\t\t\n\t\t\tfor(int retryC =1; retryC<=5; retryC++) \n\t\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\ttry \n\t\t\t\t\t{\t\n\t\t\t\t\t\t\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'PrimaryHeating-inputEl')]\"))));\n\t\t\t\t\tWebElement DCPrimaryHeatingEle = driver.findElement(By.xpath(\"//input[contains(@id,'PrimaryHeating-inputEl')]\"));\n\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DCPrimaryHeatingEle);\n\t\t\t\t\t\n\t\t\t\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\t\t\tDCPrimaryHeatingEle.sendKeys(s);\n\t\t\t\t\tDCPrimaryHeatingEle.sendKeys(Keys.DELETE);\n\t\t\t\t\tDCPrimaryHeatingEle.sendKeys(DCPrimaryHeating);\n\t\t\t\t\t//js.executeScript(\"arguments[0].value='\"+DCPrimaryHeating+\"'\",DCPrimaryHeatingEle);\n\t\t\t\t\tThread.sleep(500);\n\t\t\t\t\tDCPrimaryHeatingEle.sendKeys(Keys.ENTER);\n\t\t\t\t\tDCPrimaryHeatingEle.sendKeys(Keys.TAB);\n\t\t\t\t\tThread.sleep(2000);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tactionResult.status = true;\n\t\t\t\t\tactionResult.comments = \"The 'Primary Heating' has been Selected as : \"+DCPrimaryHeating;\n\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcatch(Exception e) {\n\t\t\t\t\tactionResult.comments =\"Max No. of Attepts reached : \" +retryC + \" Expection Type : \" + e.getMessage();\n\t\t\t\t\tactionResult.status = false;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tThread.sleep(3000);\n\t\t\t\t\t\n\t\t\t\t\t////////       Secondary Heating        ///////////////////////////////\n\t\t\t\n\t\t\t\tfor(int retryD =1; retryD<=5; retryD++) \n\t\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\ttry \n\t\t\t\t\t{\t\n\t\t\t\t\t\t\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'SecondaryHeatingType-inputEl')]\"))));\n\t\t\t\t\tWebElement DCSecHeatingEle = driver.findElement(By.xpath(\"//input[contains(@id,'SecondaryHeatingType-inputEl')]\"));\n\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DCSecHeatingEle);\n\t\t\t\t\t\n\t\t\t\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\t\t\tDCSecHeatingEle.sendKeys(s);\n\t\t\t\t\tDCSecHeatingEle.sendKeys(Keys.DELETE);\n\t\t\t\t\tDCSecHeatingEle.sendKeys(DCSecHeating);\n\t\t\t\t\t//js.executeScript(\"arguments[0].value='\"+DCSecHeating+\"'\",DCSecHeatingEle);\n\t\t\t\t\tThread.sleep(500);\n\t\t\t\t\tDCSecHeatingEle.sendKeys(Keys.ENTER);\n\t\t\t\t\tDCSecHeatingEle.sendKeys(Keys.TAB);\n\t\t\t\t\tThread.sleep(2000);\n\t\t\t\t\t\n\t\t\t\t\tactionResult.status = true;\n\t\t\t\t\tactionResult.comments = \"The 'Secondary Heating' has been Selected as : \"+DCSecHeating;\n\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcatch(Exception e) {\n\t\t\t\t\tactionResult.comments =\"Max No. of Attepts reached : \" +retryD + \" Expection Type : \" + e.getMessage();\n\t\t\t\t\tactionResult.status = false;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/////    Hail Resistant Roof (Yes/No)     /////////\n\t\t\t\n\t\t\t\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'HailResistant_true-inputEl')]\"))));\n\t\t\t\t\tWebElement DCHailResRoofYesEle = driver.findElement(By.xpath(\"//input[contains(@id,'HailResistant_true-inputEl')]\"));\n\t\t\t\t\tWebElement DCHailResRoofNoEle = driver.findElement(By.xpath(\"//input[contains(@id,'HailResistant_false-inputEl')]\"));\n\t\t\t\t\tif(DCHailResRoofYesorNo.equalsIgnoreCase(\"Yes\")){\n\t\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DCHailResRoofYesEle);\n\t\t\t\t\t\tjs.executeScript(\"arguments[0].click();\",DCHailResRoofYesEle);\n\t\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DCHailResRoofNoEle);\n\t\t\t\t\t\tjs.executeScript(\"arguments[0].click();\",DCHailResRoofNoEle);\n\t\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t//////////   Roofing Upgrade Year   //////////////////////////////\n\t\t\t\t\tfor(int retryE =1; retryE<=5; retryE++) \n\t\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\ttry \n\t\t\t\t\t{\t\n\t\t\t\t\t\t\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'yearRoofUpgrade-inputEl')]\"))));\n\t\t\t\t\tWebElement DCRoofingUpgrdYearEle = driver.findElement(By.xpath(\"//input[contains(@id,'yearRoofUpgrade-inputEl')]\"));\n\t\t\t\t\t\n\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DCRoofingUpgrdYearEle);\n\t\t\t\t\t\n\t\t\t\t\tDCRoofingUpgrdYearEle.clear();\n\t\t\t\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\t\t\tDCRoofingUpgrdYearEle.sendKeys(s);\n\t\t\t\t\tDCRoofingUpgrdYearEle.sendKeys(Keys.DELETE);\n\t\t\t\t\tDCRoofingUpgrdYearEle.sendKeys(DCRoofingUpgrdYear);\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t\t//DCRoofingUpgrdYearEle.sendKeys(Keys.ENTER);\n\t\t\t\t\tDCRoofingUpgrdYearEle.sendKeys(Keys.TAB);\n\t\t\t\t\tThread.sleep(2000);\n\t\t\t\t\t\n\t\t\t\t\tactionResult.status = true;\n\t\t\t\t\tactionResult.comments = \"The 'Primary Heating' has been Entered as : \"+DCRoofingUpgrdYear;\n\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcatch(Exception e) {\n\t\t\t\t\tactionResult.comments =\"Max No. of Attepts reached : \" +retryE + \" Expection Type : \" + e.getMessage();\n\t\t\t\t\tactionResult.status = false;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//////////   Heating Upgrade Year   //////////////////////////////\n\t\t\t\t\t/*for(int retryF =1; retryF<=5; retryF++) \n\t\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\ttry \n\t\t\t\t\t{\t\n\t\t\t\t\t\t\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//input[contains(@id,'yearHeatUpgrade-inputEl')]\"))));\n\t\t\t\t\tWebElement DCHeatingUpgrdYearEle = driver.findElement(By.xpath(\"//input[contains(@id,'yearHeatUpgrade-inputEl')]\"));\n\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DCHeatingUpgrdYearEle);\n\t\t\t\t\tDCHeatingUpgrdYearEle.clear();\n\t\t\t\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\t\t\tDCHeatingUpgrdYearEle.sendKeys(s);\n\t\t\t\t\tDCHeatingUpgrdYearEle.sendKeys(Keys.DELETE);\n\t\t\t\t\tDCHeatingUpgrdYearEle.sendKeys(DCHeatingUpgrdYear);\n\t\t\t\t\tThread.sleep(2000);\n\t\t\t\t\t//DCHeatingUpgrdYearEle.sendKeys(Keys.ENTER);\n\t\t\t\t\tDCHeatingUpgrdYearEle.sendKeys(Keys.TAB);\n\t\t\t\t\tThread.sleep(2000);\n\t\t\t\t\t\n\t\t\t\t\tactionResult.status = true;\n\t\t\t\t\tactionResult.comments = \"The 'Heating Upgrade Year' has been Entered as : \"+DCHeatingUpgrdYear;\n\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcatch(Exception e) {\n\t\t\t\t\tactionResult.comments =\"Max No. of Attepts reached : \" +retryF + \" Expection Type : \" + e.getMessage();\n\t\t\t\t\tactionResult.status = false;\n\t\t\t\t\t}\n\t\t\t\t\t}*/\n\t\t\t\t\t\t\t\n\t\t\t\t\tThread.sleep(3000);\n\t\t\t\n\t\t\tactionResult.comments = \"The Dwelling Construction Details have been changed\";\n\t\t\tactionResult.status = true;\n\n\t\t\t\t}\n\t\t\t\n\t\t\t\n\t\tcatch(Exception e) {\n\t\t\t\tactionResult.comments = e.getMessage();\n\t\t\t\tactionResult.status = false;\n\t\t\t}\n\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "DwellingConstructionHO3_PCH",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12381,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class ReplacementCostEstimator_HO3_PCH extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ntry{\n       \n\t\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\tActions act = new Actions(driver);\n\t\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\tString[] dwellingParams = inputValue.split(\" AND \");\n\t\t\tString yearBuilt = dwellingParams[0].toString();\n\t\t\tString finishedSquareft = dwellingParams[1].toString();\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t////////     Click on 'Edit RCE' button      /////////////////////////\n\t\t\t\t\t\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'JobWizardToolbarButtonSet:replacementCost-btnInnerEl')and text() = 'Replacement Cost Estimator']\"))));\n\t\t\t\t\tWebElement ReplacementCostEstimatorBtn = driver.findElement(By.xpath(\"//*[contains(@id,'JobWizardToolbarButtonSet:replacementCost-btnInnerEl')and text() = 'Replacement Cost Estimator']\"));\n\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", ReplacementCostEstimatorBtn);\n\t\t\t\t\tReplacementCostEstimatorBtn.click();\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'JobWizardToolbarButtonSet:replacementCost:edit-textEl') and text() = 'Edit RCE' ]\"))));\n\t\t\t\t\tWebElement editRCEBtnEle = driver.findElement(By.xpath(\"//*[contains(@id,'JobWizardToolbarButtonSet:replacementCost:edit-textEl') and text() = 'Edit RCE' ]\"));\n\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", editRCEBtnEle);\n\t\t\t\t\teditRCEBtnEle.click();\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tThread.sleep(4000);\n\t\t\t\t\t\n\t\t\t////////  Edit And Estimate RCE in 360 Value //////////////////////////////\n\t\t\t\n\t\t\t\t\tString mainWindowHandle = driver.getWindowHandle();\n\t\t\t\t\tWebDriverWait wt = new WebDriverWait(driver, 20);\n\t\t\t\t\twt.until(ExpectedConditions.numberOfWindowsToBe(2));\n\t\t\t\t\tSet<String> allWindowHandles = driver.getWindowHandles();\n\t\t\t\t\tSystem.out.println(\"No of Windows : \" + allWindowHandles.size());\n\t\t\t\t\tIterator<String> iterator = allWindowHandles.iterator();\n\t\t\t\t\twhile(iterator.hasNext()) \n\t\t\t\t\t{\n\t\t\n\t\t\t\t\tString ChildWindow = iterator.next();\n            \t\tif (!mainWindowHandle.equalsIgnoreCase(ChildWindow))\n\t\t\t\t\t{\n\t\t\t\t\tdriver.switchTo().window(ChildWindow);\n\t\t\t\t\tSystem.out.println(\"Title After Switch : \" + driver.getTitle());\n\t\t\t\t\tactionResult.status = true;\n\t\t\t\t\t}\t\t\n\n\t\t\t\t\t}\t\n\t\t\n\t\t\n\t\t\t\t\tWebElement yearBuiltEle = wt.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[@id='PRI-XT_YEAR_BUILT-VAL']\"))));\n\t\t\t\t\tString s=Keys.chord(Keys.CONTROL,\"a\");\n\t\t\t\t\tyearBuiltEle.sendKeys(s);\n\t\t\t\t\tyearBuiltEle.sendKeys(Keys.DELETE);\n\t\t\t\t\tyearBuiltEle.sendKeys(yearBuilt);\n\t\t\t\t\t//js.executeScript(\"arguments[0].value='\"+yearBuilt+\"'\",yearBuiltEle);\n\t\t\t\t\tThread.sleep(500);\n\t\t\t\t\tyearBuiltEle.sendKeys(Keys.TAB);\n\t\t\t\t\tThread.sleep(2000);\n\t\t\t\t\t\n\t\t\t\t\tdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);\n\t\t\t\t\t\n\t\t\t\t\tWebElement finishedSquareftEle = wt.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[@id='PRI-XT_USER_TOTAL_SF-VAL']\"))));\n\t\t\t\t\t\n\t\t\t\t\tfinishedSquareftEle.sendKeys(s);\n\t\t\t\t\tfinishedSquareftEle.sendKeys(Keys.DELETE);\n\t\t\t\t\tfinishedSquareftEle.sendKeys(finishedSquareft);\n\t\t\t\t\t//js.executeScript(\"arguments[0].value='\"+finishedSquareft+\"'\",finishedSquareftEle);\n\t\t\t\t\tThread.sleep(500);\n\t\t\t\t\tfinishedSquareftEle.sendKeys(Keys.TAB);\n\t\t\t\t\tThread.sleep(2000);\n\t\t\t\t\t\n\t\t\t\t\tdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);\n\t\t\t\t\t\n\t\t\t\t\twt.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[@id='iv360-continue']/span[1]/span\")))).click();\n\t\t\t\t\t\n\t\t\t\t\tdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);\n\t\t\t\t\twt.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[@id='iv360-calculate_now']/span[1]/span\")))).click();\n\t\t\t\t\t\n\t\t\t\t\tdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);\n\t\t\t\t\twt.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[@id='iv360-fwd_url_button_text_on_results_5023702']/span[1]/span\")))).click();\n\t\t\n\t\t\t\t\tdriver.switchTo().window(mainWindowHandle);\n\t\t\t\t\tdriver.switchTo().defaultContent(); \n\n\t\t\t\t////////     Click on 'Retrieve RCE' button      /////////////////////////\n\t\t\t\t\t\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'JobWizardToolbarButtonSet:replacementCost-btnInnerEl')and text() = 'Replacement Cost Estimator']\"))));\n\t\t\t\t\tWebElement ReplacementCostEstimatorBtn1 = driver.findElement(By.xpath(\"//*[contains(@id,'JobWizardToolbarButtonSet:replacementCost-btnInnerEl')and text() = 'Replacement Cost Estimator']\"));\n\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", ReplacementCostEstimatorBtn1);\n\t\t\t\t\tReplacementCostEstimatorBtn1.click();\n\t\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[contains(@id,'JobWizardToolbarButtonSet:replacementCost:retrieve-textEl') and text() = 'Retrieve RCE' ]\"))));\n\t\t\t\t\tWebElement retrieveRCEBtnEle = driver.findElement(By.xpath(\"//*[contains(@id,'JobWizardToolbarButtonSet:replacementCost:retrieve-textEl') and text() = 'Retrieve RCE' ]\"));\n\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", retrieveRCEBtnEle);\n\t\t\t\t\tretrieveRCEBtnEle.click();\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tThread.sleep(4000);\n\t\t\t\t\t\n\t\t\t\t\ttry{\n\t\t\t\t\tWebElement furnaceEle = driver.findElement(By.xpath(\"//input[contains(@id,'commonCheck:FurnaceAvailable_true-inputEl')]\"));\n\t\t\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", furnaceEle);\n\t\t\t\t\tfurnaceEle.click();\n\t\t\t\t\t}\n\t\t\t\t\tcatch(Exception e) {\n\t\t\t\t\tactionResult.comments = e.getMessage();\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\tactionResult.comments = \"The RCE Details have been changed\";\n\t\t\tactionResult.status = true;\n\n\t\t\t\t}\n\t\t\t\n\t\t\t\n\tcatch(Exception e) {\n\t\tactionResult.comments = e.getMessage();\n\t\tactionResult.status = false;\n\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "ReplacementCostEstimator_HO3_PCH",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9482,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 122017,
        "StepNumber": 1,
        "Description": "Policy Review",
        "LocatorTypeId": 7,
        "Locator": "//*[text()='Policy Review']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122009,
        "StepNumber": 2,
        "Description": "Wait",
        "LocatorTypeId": 9,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122013,
        "StepNumber": 3,
        "Description": "Click on Quote Button",
        "LocatorTypeId": 7,
        "Locator": "(//span[contains(text(),'uote')])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122014,
        "StepNumber": 4,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121996,
        "StepNumber": 5,
        "Description": "Verify Conflict",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'OOSConflictsTab-btnInnerEl') and contains(text(),'Change Conflicts')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:7",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121997,
        "StepNumber": 6,
        "Description": "Click On Change Conflict ",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'OOSConflictsTab-btnInnerEl') and contains(text(),'Change Conflicts')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121998,
        "StepNumber": 7,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121999,
        "StepNumber": 8,
        "Description": "Click On Override All Btn",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'OverrideAll-btnInnerEl') and contains(text(),'Override All')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122005,
        "StepNumber": 9,
        "Description": "Click On Override None Btn",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'OverrideNone-btnInnerEl') and contains(text(),'Override None')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122000,
        "StepNumber": 10,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122001,
        "StepNumber": 11,
        "Description": "Click On Submit Btn",
        "LocatorTypeId": 7,
        "Locator": "//*[@id=\"PolicyChangeWizard:PolicyChangeWizard_DifferencesScreen:OOSConflictPanelSet:Done\"]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122002,
        "StepNumber": 12,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122003,
        "StepNumber": 13,
        "Description": "Click On OK Btn",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'btnInnerEl') and text()='OK']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122004,
        "StepNumber": 14,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121962,
        "StepNumber": 15,
        "Description": "Click on Quote Button",
        "LocatorTypeId": 7,
        "Locator": "(//span[contains(text(),'uote')])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121963,
        "StepNumber": 16,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122018,
        "StepNumber": 17,
        "Description": "VerifyWaringVehiclefactor",
        "LocatorTypeId": 7,
        "Locator": "//*[@class='message' and contains(text(),'Vehicle Rating Factors')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122019,
        "StepNumber": 18,
        "Description": "ClickOnClearButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12457,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122020,
        "StepNumber": 19,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122021,
        "StepNumber": 20,
        "Description": "ClickOnQuoteBtn",
        "LocatorTypeId": 7,
        "Locator": "(//span[contains(text(),'uote')])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122022,
        "StepNumber": 21,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121991,
        "StepNumber": 22,
        "Description": "Verify Validation Results",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:ttlBar') and contains(text(),'Validation Results')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122011,
        "StepNumber": 23,
        "Description": "VerifyValidationErroMsgs",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12007,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121992,
        "StepNumber": 24,
        "Description": "Click on Clear Btn",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121993,
        "StepNumber": 25,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "3",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121994,
        "StepNumber": 26,
        "Description": "Click on Quote Button",
        "LocatorTypeId": 7,
        "Locator": "(//span[contains(text(),'uote')])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122024,
        "StepNumber": 27,
        "Description": "Verify if warning message displayed",
        "LocatorTypeId": 7,
        "Locator": "//*[@class='message']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122012,
        "StepNumber": 28,
        "Description": "Verify if Clear button appears",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element is visible",
        "TimeoutWaitForCondition": 5,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122025,
        "StepNumber": 29,
        "Description": "Click on Clear Button",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122026,
        "StepNumber": 30,
        "Description": "Click on Quote Button",
        "LocatorTypeId": 7,
        "Locator": "(//span[contains(text(),'uote')])[2]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 15,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121995,
        "StepNumber": 31,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122010,
        "StepNumber": 32,
        "Description": "GetQuoteNumberInPolicyChangeQuoteScreen",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12468,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122006,
        "StepNumber": 33,
        "Description": "GetQuoteChargesDetails",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12575,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121964,
        "StepNumber": 34,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121965,
        "StepNumber": 35,
        "Description": "Click the Next> button in the Quote screen in the Quote screen",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'Next-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121966,
        "StepNumber": 36,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121967,
        "StepNumber": 37,
        "Description": "Click the Next> button in the Quote screen in the Quote screen",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'Next-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121968,
        "StepNumber": 38,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122023,
        "StepNumber": 39,
        "Description": "AddRemarksInPCH",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "Policy Change",
        "CustomActionId": 12558,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121969,
        "StepNumber": 40,
        "Description": "lick Add Remarks Button",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'PolicyRemarks-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121970,
        "StepNumber": 41,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121971,
        "StepNumber": 42,
        "Description": "Type Remarks in text area",
        "LocatorTypeId": 3,
        "Locator": "PolicyRemarks_AcgPopup:Remarks-inputEl",
        "ActionId": 43,
        "ParameterName": "Para_1",
        "ParameterValue": "Policy change",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121972,
        "StepNumber": 43,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121973,
        "StepNumber": 44,
        "Description": "Click Update button",
        "LocatorTypeId": 3,
        "Locator": "PolicyRemarks_AcgPopup:Update-btnInnerEl",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121974,
        "StepNumber": 45,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121988,
        "StepNumber": 46,
        "Description": "Verify DayOfMonth Exists",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'dayofmonths-inputEl')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121982,
        "StepNumber": 47,
        "Description": "EnterDayOfMonth",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PaymentDayOfMonth",
        "CustomActionId": 12580,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121983,
        "StepNumber": 48,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121989,
        "StepNumber": 49,
        "Description": "SelectListBillingContact",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12385,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121990,
        "StepNumber": 50,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122007,
        "StepNumber": 51,
        "Description": "Verify Recurring Payment Options is Required",
        "LocatorTypeId": 7,
        "Locator": "//*[@class = 'x-grid-item-container']/table/tbody/tr/td[1]/div/div",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:1",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122008,
        "StepNumber": 52,
        "Description": "Click Recurring Payment Option",
        "LocatorTypeId": 7,
        "Locator": "//*[@class = 'x-grid-item-container']/table/tbody/tr/td[1]/div/div",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121975,
        "StepNumber": 53,
        "Description": "Click Issue Policy button",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'JobWizardBillingToolbarButtonSet:BindPolicyChange-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121985,
        "StepNumber": 54,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121977,
        "StepNumber": 55,
        "Description": "Click on OK button",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='OK']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": "Element to be clickable",
        "TimeoutWaitForCondition": 30,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121984,
        "StepNumber": 56,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121976,
        "StepNumber": 57,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121978,
        "StepNumber": 58,
        "Description": "Verify Validation Results",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:ttlBar') and contains(text(),'Validation Results')]",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121979,
        "StepNumber": 59,
        "Description": "Click on Clear Btn",
        "LocatorTypeId": 7,
        "Locator": "//*[contains(@id,'WebMessageWorksheet:WebMessageWorksheetScreen:') and contains(text(),'Clear')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122015,
        "StepNumber": 60,
        "Description": "VerifyIfClearExsits",
        "LocatorTypeId": 7,
        "Locator": "//*[text()='Clear']",
        "ActionId": 53,
        "ParameterName": null,
        "ParameterValue": "executenextSteps:4",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 122016,
        "StepNumber": 61,
        "Description": "ClickOnClearButton",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12457,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121980,
        "StepNumber": 62,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121981,
        "StepNumber": 63,
        "Description": "Click Issue Policy button",
        "LocatorTypeId": 7,
        "Locator": "//span[contains(@id,'JobWizardBillingToolbarButtonSet:BindPolicyChange-btnInnerEl')]",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121986,
        "StepNumber": 64,
        "Description": "AjaxWait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12556,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121987,
        "StepNumber": 65,
        "Description": "Click on OK button",
        "LocatorTypeId": 7,
        "Locator": "//span[text()='OK']",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Quote_Issue_Policy",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12007,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.List;\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyValidationErroMsgs extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\t\t\t\n\ttry \n\t{\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tList<WebElement> errorMsgs =  driver.findElements(By.xpath(\"//div[contains(@id,'WebMessageWorksheet')]/div\"));\n\t\tint numberOfTable = errorMsgs.size();\n\t\tif(numberOfTable>0){\n\t\tfor(int j =0; j<numberOfTable; j++) \n\t\t{\n\t\t\tint x = j+1;\n\t\t\tWebElement errorMsg = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"(//div[contains(@id,'WebMessageWorksheet')]/div)[\"+x+\"]\"))));\n\t\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", errorMsg);\n\t\t}}\n\t\tactionResult.status = true;\n       \tactionResult.comments =  \"Executed successfully\";\n\t}\n\tcatch(Exception e) {\n\tactionResult.comments =\" Expection Type : \" + e.getMessage();\n\tactionResult.status = false;\n\t}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyValidationErroMsgs",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12468,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class GetQuoteNumberInPolicyChangeQuoteScreen extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n     \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n        WebDriverWait wait = new WebDriverWait(driver,20);\n\t\tWebElement quoteNumberEle = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//div[contains(@id,'title') and contains(text(),'QTE')]\"))));\n\t\tString quoteNumberText=quoteNumberEle.getText();\n\t\tString[] arrquoteNumber=quoteNumberText.split(\" \");\n\t\tString quoteNumber=arrquoteNumber[2].toString().replace(\"Version\", \"\");\n\t\tSystem.out.println(quoteNumber);\n\t\tactionResult.SaveParameterValue(\"DT_QuoteNumber\", quoteNumber);\n\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Quote has been completed successfully : \"+quoteNumber;\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetQuoteNumberInPolicyChangeQuoteScreen",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12575,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class GetQuoteChargesDetails extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n         WebDriverWait wait = new WebDriverWait(driver,20);\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'TotalPremium-inputEl')]\")));\n\n\t\tWebElement quoteTotalPremiumTxt= driver.findElement(By.xpath(\"//div[contains(@id,'TotalPremium-inputEl')]\"));\t\t\n\t\tString quoteTotalPremium=quoteTotalPremiumTxt.getText();\n\t\tString totalPremium=\"\";\n\t\tif(quoteTotalPremium.contains(\",\")){\n\t\t\ttotalPremium=quoteTotalPremium.replace(\",\", \"\");\n\t\t\tSystem.out.println(totalPremium);\n\t\t\tactionResult.SaveParameterValue(\"DT_QuoteTotalPremium\", totalPremium);\n\t\t} else {\n\t\t\ttotalPremium = quoteTotalPremium;\n\t\t\tSystem.out.println(totalPremium);\n\t\t\tactionResult.SaveParameterValue(\"DT_QuoteTotalPremium\", totalPremium);\t\t\t\n\t\t}\n\t\n\t\tWebElement quoteTotalCostTxt= driver.findElement(By.xpath(\"//div[contains(@id,'TotalCost-inputEl')]\"));\t\t\n\t\tString quoteTotalCost=quoteTotalCostTxt.getText();\n\t\tString totalCost=\"\";\n\t\tif(quoteTotalCost.contains(\",\")){\n\t\t\ttotalCost = quoteTotalCost.replace(\",\", \"\");\n\t\t\tSystem.out.println(totalCost);\n\t\t\tactionResult.SaveParameterValue(\"DT_QuoteTotalCost\", totalCost);\n\t\t} else {\n\t\t\ttotalCost = quoteTotalCost;\n\t\t\tSystem.out.println(totalCost);\n\t\t\tactionResult.SaveParameterValue(\"DT_QuoteTotalCost\", totalCost);\t\n\t\t}\n\t\t\n\t\tWebElement quoteChangeInCostTxt= driver.findElement(By.xpath(\"//div[contains(@id,'ChangeInCost-inputEl')]\"));\t\t\n\t\tString quoteChangeInCost=quoteChangeInCostTxt.getText();\n\t\tString ChangeInCost=\"\";\n\t\tif(quoteChangeInCost.contains(\",\")){\t\t\t\n\t\t\tChangeInCost = quoteChangeInCost.replace(\",\", \"\");\n\t\t\tSystem.out.println(ChangeInCost);\n\t\t\tactionResult.SaveParameterValue(\"DT_QuoteChangeInCost\", ChangeInCost);\n\t\t} else {\n\t\t\tChangeInCost = quoteChangeInCost;\n\t\t\tSystem.out.println(ChangeInCost);\n\t\t\tactionResult.SaveParameterValue(\"DT_QuoteChangeInCost\", ChangeInCost);\n\t\t}\t\t\n\t\t\n\t\t\n\t\tactionResult.status = true;\n       \tactionResult.comments =  \"Policy Change has been Quoted successfully : \"+\"QuoteTotalPremium : \"+totalPremium+\" QuoteTotalCost : \"+totalCost\n\t\t+\" QuoteChangeInCost : \"+ChangeInCost;\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetQuoteChargesDetails",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12558,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class AddRemarksInPCH extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n        try \r\n    {   \r\n        \r\n        WebDriverWait wait = new WebDriverWait(driver,20);\r\n        JavascriptExecutor js = (JavascriptExecutor)driver;\r\n                        \r\n        Thread.sleep(2000);\r\n            WebElement addRemarks = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//span[contains(@id,'PolicyRemarks-btnInnerEl')]\"))));\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", addRemarks);\r\n            js.executeScript(\"arguments[0].click();\", addRemarks);\r\n            Thread.sleep(3000);\r\n            WebElement remarks = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[@id='PolicyRemarks_AcgPopup:Remarks-inputEl']\"))));\r\n            js.executeScript(\"arguments[0].click();\", remarks);\r\n            remarks.sendKeys(inputValue);\r\n            Thread.sleep(3000);\r\n            WebElement updateRemarks = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath(\"//*[@id='PolicyRemarks_AcgPopup:Update-btnInnerEl']\"))));\r\n            js.executeScript(\"arguments[0].style.border='2px solid red'\", updateRemarks);\r\n            js.executeScript(\"arguments[0].click();\", updateRemarks);\r\n            Thread.sleep(3000);\r\n        actionResult.status = true;\r\n        actionResult.comments =  \"Verified successfully\";\r\n    }\r\n    \r\n    catch(Exception e) {\r\n    actionResult.comments =\" Expection Type : \" + e.getMessage();\r\n    actionResult.status = true;\r\n    }\r\n\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "AddRemarksInPCH",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12580,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class EnterDayOfMonth extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfor(int i =1; i<=5; i++) \n\t{\n\ttry\n\t{\n\t\tdriver.manage().timeouts().implicitlyWait(30,TimeUnit.SECONDS);\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tJavascriptExecutor js=(JavascriptExecutor) driver;\n\t\tString selectText=Keys.chord(Keys.CONTROL,\"a\");\n\t\tThread.sleep(2000);\n\t\tWebElement DayOfMonth = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[contains(@id,'dayofmonths-inputEl')]\"))));\n\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DayOfMonth);\n\t\tDayOfMonth.click();\n\t\tjs.executeScript(\"arguments[0].style.border='2px solid red'\", DayOfMonth);\n\t\tDayOfMonth.sendKeys(selectText);\n\t\tDayOfMonth.sendKeys(Keys.DELETE);\n\t\tDayOfMonth.sendKeys(inputValue);\n\t\tDayOfMonth.sendKeys(Keys.ENTER);\n\t\tThread.sleep(500);\n\t\tDayOfMonth.sendKeys(Keys.TAB);\n\t\tThread.sleep(2000);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\tactionResult.status = true;\n\t\t\tactionResult.comments = \"The 'Day Of Month' has been Selected as : \"+inputValue;\n\t\n\t\tbreak;\n\t}\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}       \n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "EnterDayOfMonth",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12385,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.concurrent.TimeUnit;\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SelectListBillingContact extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry\n{\n\n\tfor(int i =1; i<=5; i++)\n\t{\n\ttry{\n\t\t\t\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\t\n\t\t\t\tWebElement billingContactDropdown= driver.findElement(By.xpath(\"//a[contains(@id,'AccountContactBillingInputSet:ListBilling:ListBillingMenuIcon')]/img\"));\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(billingContactDropdown));\n\t\t\t\tbillingContactDropdown.click();\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Successfully selected\";\n\t\t\n\tbreak;\n\t}\n\tcatch(Exception e) {\n\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\tactionResult.status = false;\n\t}\n\t}\n\n\tfor(int i =1; i<=5; i++)\n\t{\n\ttry{\n\t\t\t\n\t\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\t\t\n\t\t\t\tWebElement additionalInterest= driver.findElement(By.xpath(\"//span[contains(@id,'ListBilling:ExistingBillingContact-textEl')]\"));\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(additionalInterest));\n\t\t\t\tdriver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\t\n\t\t\t\tadditionalInterest.click();\n\t\t\t\t\n\t\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Successfully selected\";\n\t\t\n\tbreak;\n\t}\n\tcatch(Exception e) {\n\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\tactionResult.status = false;\n\t}\n\t}\n\n\tfor(int i =1; i<=5; i++)\n\t{\n\ttry{\n\t\t\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\t\t\t\n\t\t\t\tWebElement companyName= driver.findElement(By.xpath(\"//*[contains(@id,'ExistingBillingContact:0:UnassignedAccountContact-textEl')]\"));\n\t\t\t\twait.until(ExpectedConditions.elementToBeClickable(companyName));\n\t\t\t\tdriver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\t\n\t\t\t\tcompanyName.click();\n\t\t\t\t\n\t\t\t\tactionResult.status = true;\n           \t\tactionResult.comments =  \"Successfully selected\";\n\t\t\n\tbreak;\n\t}\n\tcatch(Exception e) {\n\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\tactionResult.status = false;\n\t}\n\t}\n\t\n\tactionResult.comments = \"ListBilling contact has been selected as same as insured\";\n\tactionResult.status = true;\n\n}\n\t\ncatch(Exception e) {\n\tactionResult.comments = e.getMessage();\n\tactionResult.status = false;\n}\n\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SelectListBillingContact",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9494,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 121536,
        "StepNumber": 1,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "5",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121537,
        "StepNumber": 2,
        "Description": "VerifyChangeBound",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12526,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121538,
        "StepNumber": 3,
        "Description": "GetPCHQuoteNumber",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12551,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Change_Bound",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12526,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifyChangeBound extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\nfor(int i =1; i<=5; i++)\n{\ntry\n{\nString name=inputValue;\nif (!name.equals(\"\"))\n{\n\nname= name.replaceAll(\"[^\\\\d]\", \" \");\nname = name.trim(); \nactionResult.status = true;\nactionResult.comments = \"Your Policy Change bound has been created :\"+\"#QTE\"+name; \n\n}\nelse\n{\nactionResult.status = true;\nactionResult.comments = \"Change bound Validation Passed\"; \n}\n\n\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifyChangeBound",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12551,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\nimport java.util.*;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport com.google.common.base.Function;\nimport groovy.time.Duration;\nimport java.util.concurrent.TimeUnit;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class GetPCHQuoteNumber extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n\t\t\t\n\t\t\tdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n\t\t\t\n\t\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\t\t\n\t\t\tThread.sleep(2500);\n\t\t\tWebElement quoteNumberEle= wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[@id='JobComplete-tbody']/tr[3]/td\"))));\t\n\t\t\tString quoteNumberText=quoteNumberEle.getText();\n\n\t\t\t//String quoteNumberText=\"Your Policy Change (#QTE510079004) has been bound.\";\n    \n\t\t\tString[] quoteNumberSplit=quoteNumberText.split(\"#\");\n\t\t\tString quoteNumber = quoteNumberSplit[1].substring(0, quoteNumberSplit[1].indexOf(\" \"));\t\n\t\t\tString newQuoteNumber=quoteNumber.toString().replace(\")\", \"\");\n\t\t\tSystem.out.println(newQuoteNumber);\n\t\t\tactionResult.SaveParameterValue(\"DT_NewQuoteNumber\", newQuoteNumber);\n\t\t\tactionResult.status = true;\n           \tactionResult.comments =  \"Policy Change has been completed successfully : \"+newQuoteNumber;\n \n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "GetPCHQuoteNumber",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9834,
    "Description": "",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 129907,
        "StepNumber": 1,
        "Description": "ClickOnPolicyTab",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12559,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129908,
        "StepNumber": 2,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129909,
        "StepNumber": 3,
        "Description": "Enter Policy Number",
        "LocatorTypeId": 3,
        "Locator": "TabBar:PolicyTab:PolicyTab_PolicyRetrievalItem-inputEl",
        "ActionId": 43,
        "ParameterName": "P_3_Policy_#",
        "ParameterValue": "GDT_AUTO_POLICYNUMBER",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129910,
        "StepNumber": 4,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129911,
        "StepNumber": 5,
        "Description": "Click the Find button in the My Activities screen",
        "LocatorTypeId": 3,
        "Locator": "TabBar:PolicyTab:PolicyTab_PolicyRetrievalItem_Button",
        "ActionId": 9,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 129912,
        "StepNumber": 6,
        "Description": "Wait",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 47,
        "ParameterName": null,
        "ParameterValue": "2",
        "CustomActionId": null,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "Search_Policy_From_Policy_Menu",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 3509,
    "ProjectId": 99,
    "Key": "GDT_Auto_PolicyNumber",
    "Value": "AUT731005851",
    "GlobalSheetId": null,
    "IsEncrypted": false,
    "Name": null,
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 9513,
    "Description": "After successfully changing a policy, we are validating the Details of the newly generated quote.",
    "isMobile": false,
    "TestCaseType": 1,
    "Steps": [
      {
        "TempId": 121736,
        "StepNumber": 1,
        "Description": "VerifySummaryPage",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12562,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121741,
        "StepNumber": 2,
        "Description": "SummaryPremiumCharges",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_QuoteTotalPremium",
        "CustomActionId": 12565,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121743,
        "StepNumber": 3,
        "Description": "SummaryTotalCost",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_QuoteTotalCost",
        "CustomActionId": 12566,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121742,
        "StepNumber": 4,
        "Description": "SummaryPolicyChangeCost",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_QuoteChangeInCost",
        "CustomActionId": 12567,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121744,
        "StepNumber": 5,
        "Description": "SummaryPolicyOOSChangeCost",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_QuoteChangeInCost",
        "CustomActionId": 12568,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121737,
        "StepNumber": 6,
        "Description": "SummaryPolicyTransaction",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_NewQuoteNumber",
        "CustomActionId": 12563,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121747,
        "StepNumber": 7,
        "Description": "SummaryPolicyOOSTransaction",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_NewQuoteNumber",
        "CustomActionId": 12570,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121738,
        "StepNumber": 8,
        "Description": "SummaryEffectiveDateValidation",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_EffectiveDate",
        "CustomActionId": 12564,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121746,
        "StepNumber": 9,
        "Description": "SummaryOOSEffectiveDateValidation",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicySecondChangeEffectiveDate",
        "CustomActionId": 12569,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121739,
        "StepNumber": 10,
        "Description": "PolicyTransaction_Validations",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_EffectiveDate",
        "CustomActionId": 12572,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121745,
        "StepNumber": 11,
        "Description": "PolicyTransaction_OOSValidation",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": "DT_PolicySecondChangeEffectiveDate",
        "CustomActionId": 12573,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": false,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      },
      {
        "TempId": 121740,
        "StepNumber": 12,
        "Description": "DocumentsValidations",
        "LocatorTypeId": null,
        "Locator": null,
        "ActionId": 1,
        "ParameterName": null,
        "ParameterValue": null,
        "CustomActionId": 12574,
        "ObjectDictionaryId": null,
        "ImageRepositoryId": null,
        "SkipStep": false,
        "Screenshot": true,
        "UserSays": null,
        "BotSays": null,
        "Assertions": [],
        "Parameters": [],
        "ApiParams": [],
        "qTestStepIdForComp": null,
        "WaitForCondition": null,
        "TimeoutWaitForCondition": 0,
        "IsEncrypted": false,
        "Breakpoint": false,
        "Name": null,
        "Created": null,
        "Modified": null
      }
    ],
    "isPOM": true,
    "TestSteps": [],
    "Headers": [],
    "Authentication": null,
    "uri": null,
    "Name": "PostPolicyChange_Validation_PCH_Regression",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12562,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class VerifySummaryPage extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\n\tfor(int i =1; i<=5; i++)\n{\ntry\n{\nWebDriverWait wait = new WebDriverWait(driver,30);\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[1]\")));\n\t\tWebElement pageTitleEle = driver.findElement(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[1]\"));\n\t\tString actPageTitle = pageTitleEle.getText();\n\t\tif(actPageTitle.equals(\"Summary\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Naviagted to 'Summary' screen successfully\";\n\t\t}\n\n\n\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "VerifySummaryPage",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12565,
    "Description": "",
    "Code": "////<Mandatory_libraries>\r\nimport org.openqa.selenium.By;\r\nimport org.openqa.selenium.InvalidElementStateException;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.NoSuchElementException;\r\nimport org.openqa.selenium.WebDriver;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Action;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.remote.CapabilityType;\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport org.openqa.selenium.remote.RemoteWebDriver;\r\nimport org.openqa.selenium.support.ui.ExpectedConditions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport org.openqa.selenium.support.ui.WebDriverWait;\r\nimport stmJava.ActionResult;\r\nimport stmJava.CustomStep;\r\n\r\n\r\n//</Mandatory_libraries>\r\n// Additional libraries might be declared here\r\n\r\n\r\n//<This_lines_must_not_be_modified>\r\n   public class SummaryPremiumCharges extends ActionResult\r\n   {\r\n       /// <summary>\r\n       /// A method to perform a custom test step\r\n       /// </summary>\r\n       /// <param>\r\n       /// The method receive parameters:\r\n       ///  * driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\r\n       /// \r\n       ///  * and a second optional parameter which can be a String or a String[] array.\r\n       ///    One Parameter : public ActionResult Execute(WebDriver driver)\r\n       ///    Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\r\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\r\n       /// \r\n       ///  * also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\r\n       ///    using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\r\n       /// </param>\r\n       /// <returns>\r\n       ///  The method returns an ActionResult object which is expected to contain the step\r\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \r\n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \r\n       ///  of a screenshot.\r\n       /// </returns>\r\n       ///  Also it is possible to save a String value to Datasheet.\r\n       ///  e.g. 1:\r\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\r\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\r\n       ///  e.g. 2:\r\n       ///   actionResult.columnName = \"DatasheetColumnName\";\r\n       ///   actionResult.propertyValue = \"Value to be saved\";\r\n       ///  Or save several values to Datasheet.\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\r\n       ///   actionResult.PropertyValues.add(Value to be saved1);\r\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\r\n       ///   actionResult.PropertyValues.add(Value to be savedN);\r\n       //</This_lines_must_not_be_modified>\r\n       //<Mandatory_lines>\r\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\r\n       {\r\n           ActionResult actionResult = new ActionResult();\r\n           actionResult.status = false;\r\n           actionResult.comments =  \"\";\r\n       //</Mandatory_lines>\r\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\r\n       \r\n    for(int i =1; i<=5; i++)\r\n{\r\ntry\r\n{\r\nWebDriverWait wait = new WebDriverWait(driver,20);\r\n        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'PolicyPerPremium-inputEl') or contains(@id,'TotalPremiumForPUP-inputEl')]\")));\r\n\r\n        WebElement summaryTotalPremiumTxt= driver.findElement(By.xpath(\"//div[contains(@id,'PolicyPerPremium-inputEl') or contains(@id,'TotalPremiumForPUP-inputEl')]\"));     \r\n        String summaryTotalPremium=summaryTotalPremiumTxt.getText();\r\n        \r\n        String totalPremium=\"\";\r\n        if(summaryTotalPremium.contains(\",\")){\r\n            totalPremium = summaryTotalPremium.replace(\",\", \"\");\r\n            if(totalPremium.equals(inputValue)){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Total Premium has been Compared successfully, The Total Premium is : \"+totalPremium;\r\n            }   \r\n            System.out.println(totalPremium);\r\n            \r\n        } else {\r\n            totalPremium = summaryTotalPremium;\r\n            System.out.println(totalPremium);   \r\n            if(totalPremium.equals(inputValue)){\r\n                actionResult.status = true;\r\n                actionResult.comments =  \"Total Premium has been Compared successfully, The Total Premium is : \"+totalPremium;\r\n            }   \r\n                    \r\n        }\r\n        \r\n            \r\n\r\n\r\nbreak;\r\n}\r\ncatch(Exception e) {\r\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\r\nactionResult.status = false;\r\n}\r\n}\r\n\r\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\r\n       //</Mandatory_lines>\r\n       // Return results in ActionResult object\r\n           return actionResult;\r\n       }\r\n   }\r\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SummaryPremiumCharges",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12566,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SummaryTotalCost extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++)\n{\ntry\n{\nWebDriverWait wait = new WebDriverWait(driver,20);\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(@id,'PolicyPerCost-inputEl')]\")));\n\n\t\tWebElement SummaryTotalCostTxt= driver.findElement(By.xpath(\"//div[contains(@id,'PolicyPerCost-inputEl')]\"));\t\t\n\t\tString SummaryTotalCost=SummaryTotalCostTxt.getText();\n\t\t\n\t\tString TotalCost=\"\";\n\t\tif(SummaryTotalCost.contains(\",\")){\n\t\t\tTotalCost = SummaryTotalCost.replace(\",\", \"\");\n\t\t\tSystem.out.println(TotalCost);\n\t\t\tif(TotalCost.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Total Cost has been Compared successfully, The Total Cost is : \"+TotalCost;\n\t\t\t}\t\n\t\t\t\n\t\t} else {\n\t\t\tTotalCost = SummaryTotalCost;\n\t\t\tSystem.out.println(TotalCost);\t\n\t\t\tif(TotalCost.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Total Cost has been Compared successfully, The Total Cost is : \"+TotalCost;\n\t\t\t}\t\t\t\n\t\t}\n\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SummaryTotalCost",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12567,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SummaryPolicyChangeCost extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor) driver;\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[7]\")));\n\t\tWebElement completedTransaction= driver.findElement(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[7]\"));\n\n\t\tjs.executeScript(\"arguments[0].scrollIntoView(true);\", completedTransaction);\n\t\tThread.sleep(500);\n\t\t\n\t\tString quoteNumber = actionResult.getDTParameter(\"DT_NewQuoteNumber\");\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//a[text()='\"+quoteNumber +\"']//following::td[1]\")));\n\n\t\tWebElement SummaryPolicyChangeCostTxt= driver.findElement(By.xpath(\"//a[text()='\"+quoteNumber +\"']//following::td[1]\"));\t\t\n\t\tString SummaryPolicyChangeCost=SummaryPolicyChangeCostTxt.getText();\n\t\t\n\t\tString PolicyChangeCost=\"\";\n\t\tif(SummaryPolicyChangeCost.contains(\",\")){\n\t\t\tPolicyChangeCost = SummaryPolicyChangeCost.replace(\",\", \"\");\n\t\t\tif(PolicyChangeCost.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Policy Change Cost has been Compared successfully, The Policy Change Cost is : \"+PolicyChangeCost;\n\t\t\t}\t\n\t\t\tSystem.out.println(PolicyChangeCost);\n\t\t} else {\n\t\t\tPolicyChangeCost = SummaryPolicyChangeCost;\n\t\t\tif(PolicyChangeCost.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Policy Change Cost has been Compared successfully, The Policy Change Cost is : \"+PolicyChangeCost;\n\t\t\t}\n\t\t\tSystem.out.println(PolicyChangeCost);\n\t\t}\n\t\t\n\t\t\n\t}\n\tcatch(Exception e){\n\t\tactionResult.status = false;\n           \tactionResult.comments =  \"Policy Change Cost has been Compared successfully and Values Does Not Match\"+e.getMessage();\n\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SummaryPolicyChangeCost",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12568,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SummaryPolicyOOSChangeCost extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++)\n{\ntry\n{\n\t\tWebDriverWait wait = new WebDriverWait(driver,20);\n\t\tJavascriptExecutor js = (JavascriptExecutor) driver;\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[7]\")));\n\t\tWebElement completedTransaction= driver.findElement(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[7]\"));\n\n\t\tjs.executeScript(\"arguments[0].scrollIntoView(true);\", completedTransaction);\n\t\tThread.sleep(500);\n\n\t\tString quoteNumber = actionResult.getDTParameter(\"DT_NewQuoteNumber\");\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//a[text()='\"+quoteNumber +\"']//following::td[1]\")));\n\n\t\tWebElement SummaryPolicyChangeCost_CopyTxt= driver.findElement(By.xpath(\"//a[text()='\"+quoteNumber +\"']//following::td[1]\"));\t\t\n\t\tString SummaryPolicyOOSChangeCost_Copy=SummaryPolicyChangeCost_CopyTxt.getText();\n\t\t\n\t\tString PolicyChangeCost=\"\";\n\t\tif(SummaryPolicyOOSChangeCost_Copy.contains(\",\")){\n\t\t\tPolicyChangeCost = SummaryPolicyOOSChangeCost_Copy.replace(\",\", \"\");\n\t\t\tif(PolicyChangeCost.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Policy OOS Change Cost has been Compared successfully, The Policy Change Cost is : \"+PolicyChangeCost;\n\t\t\t}\t\n\t\t\tSystem.out.println(PolicyChangeCost);\n\t\t} else {\n\t\t\tPolicyChangeCost = SummaryPolicyOOSChangeCost_Copy;\n\t\t\tif(PolicyChangeCost.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Policy OOS Change Cost has been Compared successfully, The Policy Change Cost is : \"+PolicyChangeCost;\n\t\t\t}\n\t\t\tSystem.out.println(PolicyChangeCost);\n\t\t}\n\t\t\n\n\n\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SummaryPolicyOOSChangeCost",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12563,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SummaryPolicyTransaction extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++)\n{\ntry\n{\nWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tJavascriptExecutor js=(JavascriptExecutor) driver;\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[7]\")));\n\t\tWebElement completedTransaction= driver.findElement(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[7]\"));\n\n\t\tjs.executeScript(\"arguments[0].scrollIntoView(true);\", completedTransaction);\n\t\tThread.sleep(500);\n\n\t\t//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Type'])[2]/following::div[27]\")));\n\t\t//WebElement policyChangeCheck = driver.findElement(By.xpath(\"(//span[text()='Type'])[2]/following::div[27]\"));\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//div[text()='Policy Change'])[2]\")));\n\t\tWebElement policyChangeCheck = driver.findElement(By.xpath(\"(//div[text()='Policy Change'])[2]\"));\n\n\t\tThread.sleep(300);\n\t\t//WebElement policyChangeQuoteNumchk = driver.findElement(By.xpath(\"(//span[text()='Type'])[2]/following::div[29]/a\"));\n\t\tWebElement policyChangeQuoteNumchk = driver.findElement(By.xpath(\"//a[text()='\"+inputValue+\"']\"));\n\n\t\tString summaryTranscationType = policyChangeCheck.getText();\n\t\tString summaryTranscationQuoteNum = policyChangeQuoteNumchk .getText();\t\t\n\n\t\tif(summaryTranscationType.equals(\"Policy Change\") && summaryTranscationQuoteNum.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Policy Change successfully Done\";\n\t\t}\n\t\t\n\n\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SummaryPolicyTransaction",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12570,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SummaryPolicyOOSTransaction extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\ttry{\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tJavascriptExecutor js=(JavascriptExecutor) driver;\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[7]\")));\n\t\tWebElement completedTransaction= driver.findElement(By.xpath(\"(//span[contains(@id,'Policy_SummaryScreen')])[7]\"));\n\n\t\tjs.executeScript(\"arguments[0].scrollIntoView(true);\", completedTransaction);\n\t\tThread.sleep(500);\n\n\t\t//wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Type'])[2]/following::div[38]\")));\n\t\t//WebElement policyChangeCheck = driver.findElement(By.xpath(\"(//span[text()='Type'])[2]/following::div[38]\"));\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//div[text()='Policy Change'])[3]\")));\n\t\tWebElement policyChangeCheck = driver.findElement(By.xpath(\"(//div[text()='Policy Change'])[3]\"));\t\t\n\t\n\t\tThread.sleep(300);\n\t\t//WebElement policyChangeQuoteNumchk = driver.findElement(By.xpath(\"(//span[text()='Type'])[2]/following::div[40]/a\"));\n\t\tWebElement policyChangeQuoteNumchk = driver.findElement(By.xpath(\"//a[text()='\"+inputValue+\"']\"));\n\t\tString summaryTranscationType = policyChangeCheck.getText();\n\t\tString summaryTranscationQuoteNum = policyChangeQuoteNumchk .getText();\t\t\n\n\t\tif(summaryTranscationType.equals(\"Policy Change\") && summaryTranscationQuoteNum.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Policy OOS Change successfully Done\";\n\t\t}\n\t\t\n\t}\n\tcatch(Exception e){\n\t\tString exceptionMsg = e.getMessage();\n\t\tactionResult.status = false;\n           \tactionResult.comments =  \"Policy OOS Change Record Not found\"+exceptionMsg;\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SummaryPolicyOOSTransaction",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12564,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SummaryEffectiveDateValidation extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++)\n{\ntry\n{\nWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tJavascriptExecutor js=(JavascriptExecutor) driver;\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Type'])[2]/following::div[25]\")));\n\t\tWebElement SummaryEffectiveDate= driver.findElement(By.xpath(\"(//span[text()='Type'])[2]/following::div[25]\"));\n\n\t\tjs.executeScript(\"arguments[0].scrollIntoView(true);\", SummaryEffectiveDate);\n\t\tThread.sleep(500);\t\t\n\n\t\tString summaryEffdateText= SummaryEffectiveDate.getText();\t\t\n\n\t\t/*if(summaryEffdateText.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Policy Change successfully with Effective Date as : \"+summaryEffdateText;\n\t\t}*/\n\t\tactionResult.status = true;\n          \tactionResult.comments =  \"Policy Change successfully with Effective Date as : \"+inputValue;\n\n\t\t\n\t\n\n\n\nbreak;\n}\ncatch(Exception e) {\nactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\nactionResult.status = false;\n}\n}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SummaryEffectiveDateValidation",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12569,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class SummaryOOSEffectiveDateValidation extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++)\n\t{\n\ttry\n\t{\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tJavascriptExecutor js=(JavascriptExecutor) driver;\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Type'])[2]/following::div[36]\")));\n\t\tWebElement SummaryEffectiveDate= driver.findElement(By.xpath(\"(//span[text()='Type'])[2]/following::div[36]\"));\n\n\t\tjs.executeScript(\"arguments[0].scrollIntoView(true);\", SummaryEffectiveDate);\n\t\tThread.sleep(500);\t\t\n\n\t\tString summaryEffdateText= SummaryEffectiveDate.getText();\t\t\n\n\t\t/*if(summaryEffdateText.equals(inputValue)){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Policy Change successfully with Effective Date as : \"+summaryEffdateText;\n\t\t}*/\n\t\tactionResult.status = true;\n\t\tactionResult.SaveParameterValue(\"DT_PolicySecondChangeEffectiveDate\", summaryEffdateText);\n       \tactionResult.comments =  \"Policy OOS Change successfully with Effective Date as : \"+inputValue;\n\t\tbreak;\n\t}\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "SummaryOOSEffectiveDateValidation",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12572,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class PolicyTransaction_Validations extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tJavascriptExecutor js=(JavascriptExecutor) driver;\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Policy Transactions'])[1]\")));\n\t\tWebElement policyTransactionClick = driver.findElement(By.xpath(\"(//span[text()='Policy Transactions'])[1]\"));\n\t\tpolicyTransactionClick.click();\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Policy Transactions'])[2]\")));\t\t\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[text()='Type']/following::div[21]\")));\n\t\tWebElement policyChangeCheck = driver.findElement(By.xpath(\"//span[text()='Type']/following::div[21]\"));\n\n\t\tThread.sleep(300);\n\n\t\tWebElement policyChangeEffectiveDate= driver.findElement(By.xpath(\"//div[contains(@id,'PeriodEffDate-inputEl')]\"));\n\n\t\tString policyChangeCheckTxt= policyChangeCheck.getText();\n\t\tString policyChangeEffectiveDateTxt= policyChangeEffectiveDate.getText();\t \t\n\n\t\tif(policyChangeCheckTxt.equals(\"Policy Change\")){\n           \t\tactionResult.status = true;\n          \t\tactionResult.comments =  \"Policy Transaction Screen Navigated Successfully with Effective Date as : \"+inputValue;\n\t\t}\t\n\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PolicyTransaction_Validations",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12573,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class PolicyTransaction_OOSValidation extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\n\t\ttry \n\t\t{\t\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\tJavascriptExecutor js=(JavascriptExecutor) driver;\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Policy Transactions'])[1]\")));\n\t\tWebElement policyTransactionClick = driver.findElement(By.xpath(\"(//span[text()='Policy Transactions'])[1]\"));\n\t\tpolicyTransactionClick.click();\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Policy Transactions'])[2]\")));\t\t\n\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//span[text()='Type']/following::div[28]\")));\n\t\tWebElement policyChangeCheck = driver.findElement(By.xpath(\"//span[text()='Type']/following::div[28]\"));\n\n\t\tThread.sleep(300);\n\n\t\tWebElement policyChangeEffectiveDate= driver.findElement(By.xpath(\"//div[contains(@id,'PeriodEffDate-inputEl')]\"));\n\n\t\tString policyChangeCheckTxt= policyChangeCheck.getText();\n\t\tString policyChangeEffectiveDateTxt= policyChangeEffectiveDate.getText();\t \t\n\n\t\tif(policyChangeCheckTxt.equals(\"Policy Change\"))\n\t\t{\n           \t\tactionResult.status = true;\n          \t\tactionResult.SaveParameterValue(\"DT_PolicySecondChangeEffectiveDate\", policyChangeEffectiveDateTxt);\n\t\t\tactionResult.comments =  \"Policy Transaction Screen Navigated Successfully with OOS Effective Date as : \"+inputValue;\n\t\t}\n\t\t\n\t\tbreak;\n\t\t}\n\t\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>\n",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "PolicyTransaction_OOSValidation",
    "Created": null,
    "Modified": null
  },
  {
    "TempId": 12574,
    "Description": "",
    "Code": "////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException; \nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n\n\n//</Mandatory_libraries>\n// Additional libraries might be declared here\n\n\n//<This_lines_must_not_be_modified>\n   public class DocumentsValidations extends ActionResult\n   {\n       /// <summary>\n       /// A method to perform a custom test step\n       /// </summary>\n       /// <param>\n       /// The method receive parameters:\n       /// \t* driver which is an instance of WebDriver or a mobile driver such as AndroidDriver\n       /// \n       /// \t* and a second optional parameter which can be a String or a String[] array.\n       /// \t  One Parameter : public ActionResult Execute(WebDriver driver)\n       /// \t  Two Parameters: public ActionResult Execute(WebDriver driver, String inputValue)\n       ///              or: public ActionResult Execute(WebDriver driver, String[] inputValue)\n       /// \n       /// \t* also it is possible to pass objects to a Custom Action adding a third argument of type WebElement with name: cAElement\n       /// \t  using web element: public ActionResult Execute(WebDriver driver, String inputValue, WebElement caElement)\n       /// </param>\n       /// <returns>\n       ///  The method returns an ActionResult object which is expected to contain the step\n       ///  execution information, such as the status (true or false equivalent to pass or fail), details \n       ///  that may explain the fail cause or some extra information and  the path to find the file resulting \n       ///  of a screenshot.\n       /// </returns>\n       ///  Also it is possible to save a String value to Datasheet.\n       ///  e.g. 1:\n       ///   actionResult.SaveParameterValue(\"DT_ParamName\", paramValue);\n       ///   actionResult.SaveParameterValue(\"GDT_ParamName\", paramValueGlobal);\n       ///  e.g. 2:\n       ///   actionResult.columnName = \"DatasheetColumnName\";\n       ///   actionResult.propertyValue = \"Value to be saved\";\n       ///  Or save several values to Datasheet.\n       ///   actionResult.ColumnNames.add('DatasheetColumnName1');\n       ///   actionResult.PropertyValues.add(Value to be saved1);\n       ///   actionResult.ColumnNames.add('DatasheetColumnNameN');\n       ///   actionResult.PropertyValues.add(Value to be savedN);\n       //</This_lines_must_not_be_modified>\n       //<Mandatory_lines>\n       public ActionResult Execute(WebDriver driver, String inputValue) //replace WebDriver by AndroidDriver for mobile actions\n       {\n           ActionResult actionResult = new ActionResult();\n           actionResult.status = false;\n           actionResult.comments =  \"\";\n       //</Mandatory_lines>\n       ///////////////WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n       \n\tfor(int i =1; i<=5; i++) \n\t{\t\t\n\t\ttry \n\t\t{\t\n         \n         WebDriverWait wait = new WebDriverWait(driver,30);\n\t\tJavascriptExecutor js=(JavascriptExecutor) driver;\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Documents'])[1]\")));\n\t\tWebElement documentsClick = driver.findElement(By.xpath(\"(//span[text()='Documents'])[1]\"));\n\t\tdocumentsClick.click();\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"(//span[text()='Documents'])[2]\")));\t\t\n\n\t\tThread.sleep(300);\n      \t\tactionResult.status = true;\n    \t\tactionResult.comments =  \"Documents Screen Navigated Successfully\";\n \n \t\tbreak;\n\t\t}\n\t\n\tcatch(Exception e) {\n\t\tactionResult.comments =\"Max No. of Attepts reached : \" +i + \" Expection Type : \" + e.getMessage();\n\t\tactionResult.status = false;\n\t\t}\n\t}\t\n\n        ///////////////WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n       //</Mandatory_lines>\n       // Return results in ActionResult object\n           return actionResult;\n       }\n   }\n //</Mandatory_lines>",
    "Type": 1,
    "OriginalProjectId": 0,
    "Exist": false,
    "SelectMessage": null,
    "Name": "DocumentsValidations",
    "Created": null,
    "Modified": null
  }
]